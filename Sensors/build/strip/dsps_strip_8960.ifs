/*Start of addstrip - 10003*/

#ifdef CUST_H
#else
#endif

#ifndef CUSTOMER_H
#endif

#ifndef TARGSPS_H
#endif

#ifndef CUSTSPS_H
#endif

#if !defined(FEATURE_L4) || defined(BUILD_BOOT_CHAIN)
#endif

#ifndef CACHE_MMU_H
#endif

#ifndef BUS_MON_H
#endif

#ifndef BUS_PERF_H
#endif

#ifndef __DALAHB_H__
#endif

#ifndef __DDIAXI_H__
#endif

#ifndef _DDICBC_H_
#endif

#ifndef __DDIEBI2_H__
#endif

#ifndef __DDII2C_H__
#endif

#ifndef __DDII2CDEFS_H__
#endif

#ifndef __DDII2CPD_H__
#endif

#ifndef FEATURE_LIBRARY_ONLY
#endif

#ifndef DDISBI_H
#endif

#ifndef __DALISPI_H__
#endif

#ifndef __EFII2C_H__
#endif

#ifndef I2C_H
#endif

#ifndef I2C_NPA_RESOURCES_H
#endif

#ifndef __cplusplus
#endif

#ifndef PROFDIAG_H
#endif

#ifdef __cplusplus
#endif

#ifndef SBI_H
#endif

#ifndef SBI_6XXX_H
#endif

#ifndef SBI_7500_H
#endif

#ifndef SBI_LIB_API_H
#endif

#ifndef SBI_NPA_RESOURCES_H
#endif

#ifndef SBII_H
#endif

#ifndef SBII_MSM_H
#endif

#ifndef BUS_MONI_H
#endif

#ifndef __DALDEVICE_H__
#endif

#ifndef DALIDEVICEID_H
#endif

#ifndef DALFRAMEWORK_H
#endif

#ifndef _DALGLBCTXT_H
#endif

#ifndef _DAL_HEAP
#endif

#ifndef DALPROPDEF_H
#endif

#ifndef DALQueue_H
#endif

#ifndef DALREG_H
#endif

#ifndef _UINT32_DEFINED
#endif

#ifndef _UINT16_DEFINED
#endif

#ifndef _UINT8_DEFINED
#endif

#ifndef _INT32_DEFINED
#endif

#ifndef _INT16_DEFINED
#endif

#ifndef _INT8_DEFINED
#endif

#if defined(__GNUC__)
#endif

#ifndef _UINT64_DEFINED
#endif

#ifndef _INT64_DEFINED
#endif

#ifndef _BYTE_DEFINED
#endif

#ifndef TRUE
#endif

#ifndef FALSE
#endif

#ifndef NULL
#endif

#ifndef DALSTDDEF_H
#endif

#ifndef DALSTDERR_H
#endif

#ifndef DALSYS_H
#endif

#ifndef DALSYSTYPES_H
#endif

#ifndef __DALIINTERRUPTCONTROLLER_H__
#endif

#ifndef __DALREMOTETEST_H__
#endif

#ifndef __DALSYSTEMCALL_H__
#endif

#ifndef __DDITF_H__
#endif

#ifndef __DALITIMER_H__
#endif

#ifndef _BOOL32_DEFINED
#endif

#ifndef _ARM_ASM_
#endif

#ifndef HAL_COMDEF_H
#endif

#ifdef CUST_H
#endif

#ifndef ERR_DEPRECATED_ATTRIBUTE
#endif

#ifdef TG
#endif

#ifdef FEATURE_GENERIC_ERR_FATAL_MSG
#endif

#ifdef FEATURE_GENERIC_ERR_FATAL_MSG
#else
#endif

#if defined(FEATURE_SAVE_DEBUG_TRACE)
#else
#endif

#ifdef PC_EMULATOR_H
#else
#endif

#ifdef FEATURE_EXTERNAL_ERR_FATAL
#elif defined(FEATURE_Q6SIM)
#else
#endif

#ifndef ERR_H
#endif

#if defined(__cplusplus)
#endif

#if !defined(TASK_DEPRECATED_ATTRIBUTE)
#endif

#ifndef TASK_H
#endif

#ifndef REX_MAX_PROFILE_ENTRY
#endif

#ifndef REX_TIMER_NAME_LENGTH
#endif

#ifndef REX_CRIT_SECT_MAX
#endif

#ifndef REX_TASK_NAME_LEN
#endif

#ifndef REX_SYS_MAX_TIMER_IDS
#endif

#ifndef PC_ARRAY_SIZE
#endif

#ifndef REX_H
#endif

#ifndef COMMON_SERVICE_H
#endif

#ifndef OEM_RAPI_H
#endif

#ifndef OEM_RAPI_FUSION_H
#endif

#ifndef _ONCRPC_H
#endif

#ifndef RPC_CLNT_LOOKUP_TIMEOUT
#endif

#ifndef ONCRPC_CB_H
#endif

#ifndef _ONCRPC_CLNT_H
#endif

#ifndef ONCRPC_LOOKUP_H
#endif

#ifndef _ONCRPC_MEM_H
#endif

#ifndef ONCRPC_OS_H
#endif

#ifndef ONCRPC_PROXY_H
#endif

#ifndef __THROW
#endif

#ifndef _RPC_SVC_H
#endif

#ifndef _ONCRPC_SVC_ERR_H
#endif

#ifndef ONCRPC_TASK_H
#endif

#ifndef _RPC_XDR_H
#endif

#ifndef ONCRPC_XDR_TYPES_H
#endif

#ifndef PING_LTE_RPC_H
#endif

#ifndef PING_MDM_RPC_H
#endif

#ifndef EXTERN
#endif

#ifndef QMI_H
#endif

#ifndef QMI_CLIENT_H
#endif

#ifndef QMI_CSI_H
#endif

#ifndef QMI_IDL_LIB_H
#endif

#ifndef QMI_IDL_LIB_INTERNAL_H
#endif

#ifndef SMD_H
#endif

#ifndef SMD_BRIDGE_APPS_H
#endif

#ifndef SMD_BRIDGE_INTERNAL_H
#endif

#ifndef SMD_BRIDGE_MODEM_H
#endif

#ifndef SMD_LITE_H
#endif

#ifdef SMD_SPS_SIM
#else
#endif

#ifndef _SMD_DSM_SPS_H_
#endif

#ifndef _SMEM_H_
#endif

#ifndef SMEM_LOG_H
#endif

#ifndef SMSM_H
#endif

#ifndef SMSM_SHIM_H
#endif

#ifndef TEST_API_H
#endif

#ifndef QMI_CCI_TARGET_EXT_H
#endif

#ifndef QMI_CSI_TARGET_EXT_H
#endif

#ifndef _RPC_TARGET_REX_H
#endif

#ifndef QMI_PLATFORM_CONFIG_H
#endif

#ifndef ONCRPC_PMAP_CLNT_H
#endif

#ifndef _RPC_TARGET_WM_H
#endif

#ifndef MPM_UTILS_H
#endif

#ifndef NPA_H
#endif

#ifndef NPA_EXTENSION_H
#endif

#ifndef NPA_INIT_H
#endif

#ifdef FEATURE_WINCE
strip
#else
#endif

#ifndef NPA_REMOTE_H
#endif

#ifndef NPA_REMOTE_PROTOCOL_H
#endif

#ifndef NPA_REMOTE_RESOURCE_H
#endif

#ifndef NPA_RESOURCE_H
#endif

#ifndef RPMTYPES_H
#endif

#ifdef WINSIM
strip
#else
#endif

#ifndef SLEEP_H
#endif

#ifndef SLEEPNPA_H
#endif

#ifndef ULOG_H
#endif

#ifndef ULOGBACKEND_H
#endif

#ifndef ULOGFRONT_H
#endif

#ifndef ULOGSTREAM_H
#endif

#if (ASSERT == ASSERT_FATAL)
#elif (ASSERT == ASSERT_WARN)
#else
#endif

#ifndef ASSERT_H
#endif

#ifndef ARM_H
#endif

#ifndef __APCS_INTERWORK
#endif

#if defined(_ARM_ASM_)
#endif

#ifndef ARMASM_H
#endif

#ifndef ASSERT
#endif

#ifdef FEATURE_L4
#else
#endif

#ifdef FEATURE_IGUANA
#else
#endif

#ifndef BIT_H
#endif

#ifndef CMD_H
#endif

#ifndef WIN32
#endif

#ifdef T_WINNT
#endif

#ifdef TRUE
#endif

#ifdef FALSE
#endif

#ifndef _BOOLEAN_DEFINED
#endif

#if defined(DALSTDDEF_H)
#endif

#if (defined__GNUC__)
#else
#endif

#if (!definedT_WINNT) && (!defined__GNUC__)
#else
#endif

#ifndef COM_DTYPES_H
#endif

#ifdef FEATURE_QUARTZ_135
#else
#endif

#if definedFEATURE_L4 && !definedFEATURE_L4_KERNEL && !definedBUILD_BOOT_CHAIN && !definedBUILD_BOOT_CHAIN_OEMSBL
#endif

#ifdef TEST_FRAMEWORK
#endif

#ifndef BUILD_BOOT_CHAIN
#else
#endif

#ifdef FEATURE_WINCE
strip
#endif

#if !defined(QDSP6_LEGACY_ADDR_T) && defined(FEATURE_QUBE)
#endif

#if defined__GNUC__
#elif defined__arm
#elif defined_WIN32
#else
#endif

#if defined__GNUC__ || defined__arm
#else
#endif

#ifdef WINCE_TODO
#endif

#ifndef FEATURE_WINCE
#else
strip
#endif

#ifndef INLINE
#endif

#if defined(__ARMCC_VERSION)
#else
#endif

#ifndef SWIG
#endif

#if (defined__GNUC__) || (definedTARGET_OS_SOLARIS)
#else
#endif

#ifdef __GNUC__
#else
#endif

#ifndef CDECL
#endif

#if (!definedT_WINNT) && (!definedTARGET_OS_SOLARIS) && (!defined__GNUC__)
#else
#endif

#ifdef __packed
#endif

#ifdef _lint
#endif

#ifndef MAX
#endif

#ifndef MIN
#endif

#if (!definedFEATURE_NO_REX)
#endif

#if definedPC_EMULATOR_H && !definedT_REXNT
#elif definedT_WINNT
#elif definedFEATURE_WINCE_OAL
#elif !defined_ARM_ASM_ && !definedFEATURE_L4 && !definedFEATURE_L4_KERNEL
#endif

#if definedFEATURE_L4
#else
#endif

#ifndef _ARM_ASM
#endif

#if definedFEATURE_L4 && !defined_ARM_ASM_ && !definedFEATURE_L4_KERNEL
#else
#endif

#if definedPC_EMULATOR_H && !definedT_REXNT
#elif definedT_WINNT
#elif !defined_ARM_ASM_ && !definedFEATURE_L4 && !definedFEATURE_L4_KERNEL
#endif

#ifdef _lint
#else
#endif

#if definedFEATURE_L4 && !defined_ARM_ASM_ && !definedFEATURE_L4_KERNEL
#elif definedFEATURE_WINCE
strip
#else
#endif

#ifdef __cplusplus
#else
#endif

#if !defined_ARM_ASM_
#endif

#ifdef T_WINNT
#else
#endif

#if !defined(ARR_SIZE)
#endif

#ifdef LOCAL
#endif

#ifdef SHOW_STAT
#else
#endif

#ifdef GLOBALIZE_STATIC
#else
#endif

#ifndef T_WINNT
#endif

#ifndef COMDEF_H
#endif

#ifndef CRC_H
#endif

#if definedCUST_H
#endif

#ifdef FEATURE_DIAG_SPC_TTL
#endif

#ifdef FEATURE_HTORPC_METACOMMENTS
#endif

#ifdef FEATURE_HDR
#endif

#ifndef DIAG_H
#endif

#ifndef DIAGBUF_H
#endif

#ifdef FEATURE_DATA_SERIALIZER
#endif

#ifdef FEATURE_DATA_SERIALIZER
#else
#endif

#ifndef DIAGCOMM_H
#endif

#ifndef DIAGDIAG_H
#endif

#if defined(FEATURE_DIAG_NV)
#endif

#ifdef FEATURE_IS2000
#endif

#ifdef FEATURE_DIAG_COUPLED_ARCHITECTURE
#endif

#ifdef FEATURE_DIAG_CACHE
#endif

#ifndef DIAGI_H
#endif

#ifdef FEATURE_MEID_SUPPORT
#endif

#ifndef DIAGNV_H
#endif

#if defined(IMAGE_APPS_PROC)
#else
#endif

#ifndef FEATURE_DIAG_EXPOSED_HEADER
#else
#endif

#ifdef FEATURE_DIAG_PACKET_COUPLING
#endif

#ifndef DIAGPKT_H
#endif

#ifdef PLATFORM_LTK
#endif

#ifndef ERRNO_H
#endif

#ifndef ERRNO_CODES_H
#endif

#ifndef EVENT_H
#endif

#ifndef intconv_h
#endif

#ifndef IXERRNO_H
#endif

#ifdef LIST_RENAME
#endif

#ifdef LIST_INTERCEPT
#endif

#ifdef PC_EMULATOR_H
#endif

#if !defined(PC_EMULATOR_H) || !defined(LIST_INTERCEPT)
#endif

#ifdef _DEBUG
#else
#endif

#ifdef LIST_DEBUG
#else
#endif

#ifdef LIST_DEBUG
#endif

#ifndef LIST_H
#endif

#if defined(T_WINNT)
#endif

#if !defined(FEATURE_LOG_EXPOSED_HEADER)
#else
#endif

#ifdef FEATURE_ZREX_TIME
#else
#endif

#ifdef FEATURE_LOG_EXPOSED_HEADER
#else
#endif

#if defined(FEATURE_DIAG_PACKET_COUPLING)
#endif

#ifndef LOG_H
#endif

#ifndef LOG_CODES_H
#endif

#ifndef MD5_H
#endif

#ifndef FEATURE_HEAP_SMALLER_OVERHEAD
#endif

#if !FEATURE_HEAP_SMALLER_OVERHEAD
#endif

#ifdef FEATURE_MEM_DEBUG
#endif

#if ((defined(FEATURE_MEM_DEBUG) && FEATURE_HEAP_SMALLER_OVERHEAD) || (!defined(FEATURE_MEM_DEBUG) && !FEATURE_HEAP_SMALLER_OVERHEAD))
#endif

#ifdef FEATURE_MEM_HEADER_8BYTE
#endif

#ifdef FEATURE_MEMHEAP_MT
#endif

#ifdef FEATURE_MEM_DEBUG
#else
#endif

#ifndef MEMHEAP_H
#endif

#ifndef MEMORY_H
#endif

#if defined(FEATURE_MEMUTILS_MEMORY_TRACKING) || defined(FEATURE_MEMUTILS_HEAP_CACHE_ENHANCED_DEBUGGING)
#else
#endif

#ifdef FEATURE_MEMUTILS_HEAP_CACHE_ENHANCED_DEBUGGING
#endif

#ifdef FEATURE_MEMUTILS_MEMORY_TRACKING
#endif

#ifdef FEATURE_MEMUTILS_HEAP_CACHE_USAGE_STATISTICS
#endif

#ifdef FEATURE_MEMUTILS_NEW_DELETE
#endif

#ifndef MEMUTILS_H
#endif

#ifndef MISC_H
#endif

#ifndef MISCASM_H
#endif

#if defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 110000)
#elif defined(MSG_FILE)
#elif defined(T_WINNT) || defined(TARGET_UNIX) || defined(__GNUC__)
#else
#endif

#if defined(FEATURE_ERR_EXTENDED_STORE) && defined(FEATURE_SAVE_DEBUG_TRACE)
#endif

#if defined(FEATURE_MSG_IFACE_VIOLATION)
#endif

#if definedT_WINNT
#else
#endif

#if defined(FEATURE_ERR_EXTENDED_STORE) && defined(FEATURE_SAVE_DEBUG_TRACE)
#else
#endif

#if !(MSG_BUILD_MASK_MSG_SSID_DFLT&MSG_LEGACY_FATAL)
#endif

#if !(MSG_BUILD_MASK_MSG_SSID_DFLT&MSG_LEGACY_ERROR)
#endif

#if !(MSG_BUILD_MASK_MSG_SSID_DFLT&MSG_LEGACY_HIGH)
#endif

#if !(MSG_BUILD_MASK_MSG_SSID_DFLT&MSG_LEGACY_MED)
#endif

#if !(MSG_BUILD_MASK_MSG_SSID_DFLT&MSG_LEGACY_LOW)
#endif

#if defined(FEATURE_WINCE)
strip
#else
#endif

#ifdef FEATURE_L4_KERNEL
#else
#endif

#ifndef MSG_H
#endif

#if !defined(FEATURE_WINCE)
#endif

#ifndef MSG_DIAG_SERVICE_H
#endif

#if defined(T_WINNT) || defined(FEATURE_WINCE)
#endif

#ifndef MSG_PKT_DEFS_H
#endif

#ifndef MSG_QSR_H
#endif

#if !defined(FEATURE_WINCE) && defined(CUST_H)
#endif

#ifndef MSG_MAX_STRLEN
#endif

#ifdef MSG_LEVEL
#else
#endif

#ifndef MSG_BUILD_MASK_DFLT
#endif

#ifndef MSG_LEVEL
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DFLT
#endif

#if defined(FEATURE_WCDMA) || defined(FEATURE_GSM)
#endif

#ifdef FEATURE_GSM
#endif

#ifdef FEATURE_WLAN
#endif

#if defined(FEATURE_DS) || defined(FEATURE_DATA)
#endif

#ifdef FEATURE_HIT
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_FOO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_FOO)
#endif

#if 0
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_AUDFMT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_AUDFMT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_AVS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_AVS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_BOOT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_BOOT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_BT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_BT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_CM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_CM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_CMX
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_CMX)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DIAG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DIAG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DSM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DSM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_FS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_FS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MDSP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MDSP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_QDSP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_QDSP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_REX
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_REX)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_RF
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_RF)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SD
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SD)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SIO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SIO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_VS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_VS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WMS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WMS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MMOC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MMOC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_RUIM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_RUIM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_TMC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_TMC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_FTM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_FTM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MMGPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MMGPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SLEEP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SLEEP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SAM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SAM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SRM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SRM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SFAT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SFAT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_JOYST
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_JOYST)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MFLO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MFLO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DTV
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DTV)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_FLUTE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_FLUTE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_CAMERA
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_CAMERA)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_USBHOST
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_USBHOST)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_PROFILER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_PROFILER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_TCXOMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_TCXOMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_EFS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_EFS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_IRDA
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_IRDA)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_FM_RADIO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_FM_RADIO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_AAM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_AAM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_BM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_BM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_PE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_PE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_QIPCALL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_QIPCALL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HSUSB
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HSUSB)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_FC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_FC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MGP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MGP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MGPME
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MGPME)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GPSOS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GPSOS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MGPPE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MGPPE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GPSSM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GPSSM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_IMS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_IMS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MBP_RF
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MBP_RF)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SNS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SNS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ANDROID_ADB
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ANDROID_ADB)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_PWRDB
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_PWRDB)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DCVS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DCVS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_VIDEO_ENCODER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_VIDEO_ENCODER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_VENC_OMX
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_VENC_OMX)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GAN
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GAN)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_KINETO_GAN
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_KINETO_GAN)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ANDROID_QCRIL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ANDROID_QCRIL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_A2
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_A2)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC_MISC_MODEM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC_MISC_MODEM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC_MISC_APPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC_MISC_APPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC_CM_MODEM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC_CM_MODEM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC_CM_APPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC_CM_APPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC_DB
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC_DB)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ONCRPC_SND
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ONCRPC_SND)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_ACP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_ACP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_DCP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_DCP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_DEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_DEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_ENC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_ENC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_GPSSRCH
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_GPSSRCH)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_MUX
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_MUX)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_1X_SRCH
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_1X_SRCH)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_PROT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_PROT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_DATA
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_DATA)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_SRCH
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_SRCH)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_DRIVERS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_DRIVERS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_IS890
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_IS890)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_DEBUG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_DEBUG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HDR_HIT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HDR_HIT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMTS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMTS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WCDMA_L1
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WCDMA_L1)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WCDMA_L2
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WCDMA_L2)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WCDMA_MAC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WCDMA_MAC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WCDMA_RLC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WCDMA_RLC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WCDMA_RRC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WCDMA_RRC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_CNM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_CNM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_MM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_MM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_MN
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_MN)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_RABM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_RABM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_REG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_REG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_SM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_SM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_NAS_TC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_NAS_TC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_L1
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_L1)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_L2
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_L2)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_RR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_RR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GCOMMON
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GCOMMON)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GLLC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GLLC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GMAC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GMAC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GPL1
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GPL1)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GRLC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GRLC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GRR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GRR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_GSM_GPRS_GSNDCP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_GSM_GPRS_GSNDCP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_ADP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_ADP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_CP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_CP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_FTM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_FTM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_OEM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_OEM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_SEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_SEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_TRP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_TRP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_1
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_1)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_2
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_2)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_3
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_3)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_4
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_4)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_5
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_5)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_6
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_6)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_7
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_7)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_8
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_8)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_9
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_9)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_RESERVED_10
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_RESERVED_10)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_TL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_TL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_BAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_BAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_SAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_SAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_SSC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_SSC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_HDD
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_HDD)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_SME
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_SME)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_PE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_PE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_HAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_HAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_SYS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_SYS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_WLAN_VOSS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_WLAN_VOSS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ATS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ATS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MSGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MSGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_QTF
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_QTF)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_1
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_1)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_2
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_2)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_3
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_3)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_4
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_4)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_5
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_5)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_6
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_6)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_7
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_7)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_MCS_RESERVED_8
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_MCS_RESERVED_8)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_RLP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_RLP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_PPP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_PPP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_TCPIP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_TCPIP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_IS707
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_IS707)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_3GMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_3GMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_PS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_PS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_MIP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_MIP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_UMTS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_UMTS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_GPRS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_GPRS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_GSM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_GSM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_SOCKETS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_SOCKETS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_ATCOP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_ATCOP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_SIO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_SIO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_BCMCS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_BCMCS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_MLRLP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_MLRLP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_RTP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_RTP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_SIPSTACK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_SIPSTACK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_ROHC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_ROHC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_DOQOS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_DOQOS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_IPC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_IPC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_SHIM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_SHIM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_DS_ACLPOLICY
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_DS_ACLPOLICY)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_CRYPTO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_CRYPTO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_SSL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_SSL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_IPSEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_IPSEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_SFS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_SFS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_TEST
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_TEST)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_CNTAGENT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_CNTAGENT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_RIGHTSMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_RIGHTSMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_ROAP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_ROAP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_MEDIAMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_MEDIAMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_IDSTORE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_IDSTORE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_IXFILE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_IXFILE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_IXSQL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_IXSQL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_IXCOMMON
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_IXCOMMON)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_SEC_BCASTCNTAGENT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_SEC_BCASTCNTAGENT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_APPMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_APPMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_UI
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_UI)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP_STATISTICS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP_STATISTICS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP_VENCODER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP_VENCODER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP_MODEM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP_MODEM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP_UI
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP_UI)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP_STACK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP_STACK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QVP_VDECODER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QVP_VDECODER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_ACM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_ACM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_HEAP_PROFILE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_HEAP_PROFILE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_GENERAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_GENERAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_DEBUG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_DEBUG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_STATISTICS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_STATISTICS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_UI_TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_UI_TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_MP4_PLAYER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_MP4_PLAYER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_AUDIO_TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_AUDIO_TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_VIDEO_TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_VIDEO_TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_STREAMING
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_STREAMING)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_MPEG4_TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_MPEG4_TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_FILE_OPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_FILE_OPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_RTP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_RTP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_RTCP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_RTCP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_RTSP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_RTSP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_SDP_PARSE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_SDP_PARSE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_ATOM_PARSE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_ATOM_PARSE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_TEXT_TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_TEXT_TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_DEC_DSP_IF
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_DEC_DSP_IF)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_STREAM_RECORDING
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_STREAM_RECORDING)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_CONFIGURATION
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_CONFIGURATION)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QCAMERA
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QCAMERA)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QCAMCORDER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QCAMCORDER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_BREW
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_BREW)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QDJ
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QDJ)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QDTX
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QDTX)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_QTV_BCAST_FLO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_QTV_BCAST_FLO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_MDP_GENERAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_MDP_GENERAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_PBM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_PBM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_GENERAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_GENERAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_EGL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_EGL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_OPENGL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_OPENGL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_DIRECT3D
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_DIRECT3D)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_SVG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_SVG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_OPENVG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_OPENVG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_2D
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_2D)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_QXPROFILER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_QXPROFILER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_DSP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_DSP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_GRP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_GRP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_APPS_GRAPHICS_MDP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_APPS_GRAPHICS_MDP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_KERNEL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_KERNEL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AFETASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AFETASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_VOICEPROCTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_VOICEPROCTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_VOCDECTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_VOCDECTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_VOCENCTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_VOCENCTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_VIDEOTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_VIDEOTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_VFETASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_VFETASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_VIDEOENCTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_VIDEOENCTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_JPEGTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_JPEGTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPPTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPPTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPLAY0TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPLAY0TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPLAY1TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPLAY1TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPLAY2TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPLAY2TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPLAY3TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPLAY3TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPLAY4TASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPLAY4TASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_LPMTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_LPMTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_DIAGTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_DIAGTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDRECTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDRECTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_AUDPREPROCTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_AUDPREPROCTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_MODMATHTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_MODMATHTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSPTASKS_GRAPHICSTASK
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSPTASKS_GRAPHICSTASK)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4LINUX_KERNEL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4LINUX_KERNEL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4LINUX_KEYPAD
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4LINUX_KEYPAD)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4LINUX_APPS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4LINUX_APPS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4LINUX_QDDAEMON
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4LINUX_QDDAEMON)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_IGUANASERVER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_IGUANASERVER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_EFS2
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_EFS2)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_QDMS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_QDMS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_REX
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_REX)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_SMMS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_SMMS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_FRAMEBUFFER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_FRAMEBUFFER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_KEYPAD
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_KEYPAD)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_NAMING
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_NAMING)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_SDIO
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_SDIO)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_SERIAL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_SERIAL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_TIMER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_TIMER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4IGUANA_TRAMP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4IGUANA_TRAMP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4AMSS_QDIAG
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4AMSS_QDIAG)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_L4AMSS_APS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_L4AMSS_APS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_HIT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_HIT)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_QDSP6
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_QDSP6)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_SVC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_SVC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_ENCDEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_ENCDEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_VOC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_VOC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_VS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_VS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_MIDI
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_MIDI)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_POSTPROC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_POSTPROC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_PREPROC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_PREPROC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_AFE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_AFE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_MSESSION
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_MSESSION)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_DSESSION
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_DSESSION)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_AUD_DCM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_AUD_DCM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_VID_ENC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_VID_ENC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_VID_ENCRPC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_VID_ENCRPC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_VID_DEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_VID_DEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_VID_DECRPC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_VID_DECRPC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_VID_COMMONSW
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_VID_COMMONSW)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_VID_HWDRIVER
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_VID_HWDRIVER)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_JPG_ENC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_JPG_ENC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_JPG_DEC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_JPG_DEC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_OMM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_OMM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_PWRDEM
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_PWRDEM)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_RESMGR
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_RESMGR)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_ADSP_CORE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_ADSP_CORE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_RRC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_RRC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_MACUL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_MACUL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_MACDL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_MACDL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_MACCTRL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_MACCTRL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_RLCUL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_RLCUL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_RLCDL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_RLCDL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_PDCPUL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_PDCPUL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_PDCPDL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_PDCPDL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_LTE_ML1
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_LTE_ML1)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_APP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_APP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_DS
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_DS)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_CP
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_CP)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_RLL
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_RLL)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_MAC
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_MAC)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_SRCH
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_SRCH)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_FW
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_FW)
#endif

#ifndef MSG_BUILD_MASK_MSG_SSID_UMB_PLT
#endif

#if defined(MSG_BT_SSID_DFLT) && (MSG_BT_SSID_DFLT == MSG_SSID_UMB_PLT)
#endif

#ifdef FEATURE_WCDMA
#else
#endif

#ifdef MSG_TBL_GEN
#endif

#ifndef MSGCFG_H
#endif

#if defined(T_MSM6200) || defined(T_MSM6250)
#else
#endif

#ifndef MSGTGT_H
#endif

#ifdef FEATURE_TREX
#endif

#ifdef FEATURE_NV_RUIM
#endif

#ifdef FEATURE_RPC
#endif

#ifdef FEATURE_NV_ENUMS_ARE_WORDS
#else
#endif

#ifdef FEATURE_NV_HTORPC_METACOMMENTS
#endif

#ifdef FEATURE_NV_RPC_SUPPORT
#endif

#ifdef FEATURE_UIM_RUN_TIME_ENABLE
#endif

#ifndef NV_H
#endif

#ifndef NV_ITEMS_H
#endif

#ifndef PHEAP_H
#endif

#ifndef PROCESSOR_H
#endif

#ifndef QMALLOC_H
#endif

#ifdef FEATURE_WINCE
strip
#elif (defined(FEATURE_QUBE))
#endif

#ifndef FEATURE_Q_NO_SELF_QPTR
#endif

#ifndef FEATURE_Q_SINGLE_LINK
#endif

#ifdef FEATURE_Q_SINGLE_LINK
#else
#endif

#ifdef FEATURE_Q_WIN32_LOCKS
#endif

#ifdef FEATURE_QUBE
#endif

#ifdef Q_RENAME
#endif

#ifdef Q_XCEPT
#endif

#ifdef FEATURE_Q_NO_SELF_QPTR
#else
#endif

#if !defined(PC_EMULATOR_H) || !defined(Q_XCEPT)
#endif

#if definedFEATURE_Q_NO_SELF_QPTR && definedFEATURE_Q_SINGLE_LINK
#endif

#ifndef QUEUE_H
#endif

#ifdef FEATURE_ALIGNED_QWORD
#else
#endif

#ifndef QW_H
#endif

#ifdef FEATURE_L4
#endif

#ifdef FEATURE_SET_RAN_SEED
#endif

#ifndef RAN_H
#endif

#ifndef PPSS_SCL_H
#endif

#ifndef SNS_CMN_DSPS_H
#endif

#ifdef FEATURE_AUTH
#endif

#ifndef TARGET_H
#endif

#ifndef TIME_ALARM_H
#endif

#ifndef TIME_CDMA_H
#endif

#ifdef FEATURE_GPSONE_PE
#endif

#ifndef TIME_GPS_H
#endif

#ifndef TIME_JUL_H
#endif

#if (defined(FEATURE_SEC_TIME) || defined(FEATURE_SEC_TIME_V2))
#endif

#ifndef TIME_LOCAL_H
#endif

#ifdef FEATURE_MFLO
#endif

#ifndef TIME_MFLO_H
#endif

#ifndef TIME_SEC_H
#endif

#ifndef _TIME_SECURE_H__
#endif

#ifdef FEATURE_SEC_TIME_V2
#endif

#ifndef __TIME_SECURE_H__
#endif

#ifndef TIME_SVC_H
#endif

#ifndef TIME_USER_H
#endif

#ifndef FEATURE_L4
#endif

#ifndef TIMER_H
#endif

#ifndef __CLKREGIM_H__
#endif

#ifndef CLKRGM_APPS_H
#endif

#ifndef __CLKRGM_COMDEF_H__
#endif

#ifndef __CLKRGM_DEVMAN_H__
#endif

#ifndef CLKRGM_IOCTL_CFG_H
#endif

#ifndef CLKRGM_MODEM_H
#endif

#ifndef __CLKRGM_MSM_H__
#endif

#ifndef CLK_REGIME_RM_H
#endif

#ifndef CLOCKDEFS_H
#endif

#ifndef DDICHIPINFO_H
#endif

#ifndef DDICLOCK_H
#endif

#ifndef __DALIFPGA_H__
#endif

#ifndef __GPIOEXPANDER_H__
#endif

#ifndef __GPIOInt_H__
#endif

#ifndef __DALIGSBI_H__
#endif

#ifndef DDIHWIO_H
#endif

#ifndef DDIIPCINT_H
#endif

#ifndef DDIPLATFORMINFO_H
#endif

#ifndef __DALISOFTWARESWITCHES_H__
#endif

#ifndef DOXYGEN_SHOULD_SKIP_THIS
#endif

#ifndef __DDITIMETICK_H__
#endif

#ifndef DOXYGEN_SHOULD_SKIP_THIS
#else
#endif

#ifndef __DALITLMM_H__
#endif

#ifndef __CLOCK_PROTOCOL_H__
#endif

#ifndef __EFITLMM_H__
#endif

#ifndef __FPGA_API_H__
#endif

#ifndef __GPIO_INT_H
#endif

#ifdef __ARMCC_VERSION
#else
#endif

#ifdef HAL_HWIO_EXTERNAL
#endif

#ifndef HAL_HWIO_H
#endif

#ifndef HW_H
#endif

#ifndef HW_MODEM_H
#endif

#ifndef HWIOREG_BLOCK_H
#endif

#ifdef FEATURE_LIBRARY_ONLY
#endif

#ifndef __MSM_H__
#endif

#ifndef MSM_SUPPORT_H
#endif

#if defined(IMAGE_QDSP6_PROC) && !defined(_ARM_ASM_)
#endif

#if defined(FEATURE_WINCE_OAL) || defined(FEATURE_WINCE_BOOTLOADER) || defined(FEATURE_WINCE) || defined(_ARM_ASM_)
#elif defined(IMAGE_QDSP6_PROC)
#elif defined(INTLOCK_SAV)
#else
#endif

#ifndef MSMHWIO_H
#endif

#ifndef __MSMP_H__
#endif

#ifndef MSMSHIFT_H
#endif

#ifndef PEPCLOCK_H
#endif

#ifndef __SWITCHES_H__
#endif

#ifndef TIMETICK_NOMINAL_FREQ_HZ
#endif

#ifndef TIMETICK_H
#endif

#ifndef TRAMP_H
#endif

#ifndef __TRAMP_GPIO_H__
#endif

#ifdef RPM_BASE
#endif

#ifdef RPM_MSG_RAM_XPU_BASE
#endif

#ifdef RPM_SS_MSG_RAM_START_ADDRESS_BASE
#endif

#ifdef MPM_BASE
#endif

#ifdef PA1_SSBI2_CFG_BASE
#endif

#ifdef PA1_XPU_BASE
#endif

#ifdef PA1_SSBI2_CMD_BASE
#endif

#ifdef PA2_SSBI2_CFG_BASE
#endif

#ifdef PA2_SSBI2_CMD_BASE
#endif

#ifdef SEC_CTRL_BASE
#endif

#ifdef TLMM_BASE
#endif

#ifdef CLK_CTL_BASE
#endif

#ifdef EBI1_CH0_BASE
#endif

#ifdef SYS_IMEM_BASE
#endif

#ifdef SFPB_WRAPPER_XPU_BASE
#endif

#ifdef SFPB_WRAPPER_BASE
#endif

#ifdef SFPB_WRAPPER_MUTEX_BASE
#endif

#ifdef SFAB_BASE
#endif

#ifdef AFAB_BASE
#endif

#ifdef DAY_CFG_BASE
#endif

#ifdef SFPB_WRAPPER_1x2_BASE
#endif

#ifdef SFPB_WRAPPER_XPU_1x2_BASE
#endif

#ifdef SFPB_WRAPPER_2x1_BASE
#endif

#ifdef SCSS_QGIC_BASE
#endif

#ifdef SCSS_TMR_BASE
#endif

#ifdef SCSS_ACC_BASE
#endif

#ifdef SCSS_SAW_BASE
#endif

#ifdef SCSS_GCC_BASE
#endif

#ifdef SCSS_MPU_BASE
#endif

#ifdef SCSS_HSEL_BASE
#endif

#ifdef MMSS_CC_BASE
#endif

#ifdef GFX2D0_BASE
#endif

#ifdef GFX2D1_BASE
#endif

#ifdef GFX3D_BASE
#endif

#ifdef MFC_BASE
#endif

#ifdef VFE_BASE
#endif

#ifdef GEMINI_BASE
#endif

#ifdef MIPI_DSI_BASE
#endif

#ifdef MIPI_CSI_0_BASE
#endif

#ifdef MIPI_CSI_1_BASE
#endif

#ifdef HDMI_TX_BASE
#endif

#ifdef IMEM_MMSS_BASE
#endif

#ifdef SMI0_BASE
#endif

#ifdef ROTATOR_BASE
#endif

#ifdef TV_ENC_BASE
#endif

#ifdef JPEGD_BASE
#endif

#ifdef MDP_BASE
#endif

#ifdef FABRIC_MMSS_BASE
#endif

#ifdef VPE_BASE
#endif

#ifdef MMSS_APU_BASE
#endif

#ifdef SMI0_BIST_BASE
#endif

#ifdef MMSS_SFPB_CFG_BASE
#endif

#ifdef SMMU_JPEGD_BASE
#endif

#ifdef SMMU_VPE_BASE
#endif

#ifdef SMMU_MDP4_0_BASE
#endif

#ifdef SMMU_MDP4_1_BASE
#endif

#ifdef SMMU_ROTATOR_BASE
#endif

#ifdef SMMU_JPEG_BASE
#endif

#ifdef SMMU_VFE_BASE
#endif

#ifdef SMMU_SS1080P_0_BASE
#endif

#ifdef SMMU_SS1080P_1_BASE
#endif

#ifdef SMMU_GFX3D_BASE
#endif

#ifdef SMMU_2D0_BASE
#endif

#ifdef SMMU_2D1_BASE
#endif

#ifdef SMMU_SFPB_CFG_DUMMY_BASE
#endif

#ifdef MSS_GIC_BASE
#endif

#ifdef MSS_TMRS_BASE
#endif

#ifdef MSS_TMRM_BASE
#endif

#ifdef MSS_HDLC_BASE
#endif

#ifdef MSS_MISC_BASE
#endif

#ifdef MSS_A11MTI_BASE
#endif

#ifdef MSS_SPM_BASE
#endif

#ifdef MSS_IRQ_BASE
#endif

#ifdef MSS_L2CC_BASE
#endif

#ifdef MSS_REGS_BASE
#endif

#ifdef MSS_L2CC_EM_BASE
#endif

#ifdef GPSADC_BASE
#endif

#ifdef MODEM_BASE
#endif

#ifdef DEC_BURST_BASE
#endif

#ifdef ENC_BURST_BASE
#endif

#ifdef MDM2_BASE
#endif

#ifdef GPS_SRCH_BASE
#endif

#ifdef GPS_GACC_BASE
#endif

#ifdef NAV_BASE
#endif

#ifdef MICRO_MDSP_BASE
#endif

#ifdef AHB2XMEMC_BASE
#endif

#ifdef SIC_BASE
#endif

#ifdef SIC_APU_BASE
#endif

#ifdef INTCTL0_BASE
#endif

#ifdef SIC_NON_SECURE_BASE
#endif

#ifdef INTCTL1_BASE
#endif

#ifdef INTCTL2_BASE
#endif

#ifdef INTCTL3_BASE
#endif

#ifdef INTCTL4_BASE
#endif

#ifdef INTCTL5_BASE
#endif

#ifdef INTCTL6_BASE
#endif

#ifdef INTCTL7_BASE
#endif

#ifdef SDC2_BASE
#endif

#ifdef SDC2_DML_BASE
#endif

#ifdef SDC2_BAM_BASE
#endif

#ifdef SDC3_BASE
#endif

#ifdef SDC3_DML_BASE
#endif

#ifdef SDC3_BAM_BASE
#endif

#ifdef SDC4_BASE
#endif

#ifdef SDC4_DML_BASE
#endif

#ifdef SDC4_BAM_BASE
#endif

#ifdef SDC5_BASE
#endif

#ifdef SDC5_DML_BASE
#endif

#ifdef SDC5_BAM_BASE
#endif

#ifdef BAM_DMA_BASE
#endif

#ifdef BAM_DMA_BAM_BASE
#endif

#ifdef SDC1_BASE
#endif

#ifdef SDC1_DML_BASE
#endif

#ifdef SDC1_BAM_BASE
#endif

#ifdef USB1_HS_BASE
#endif

#ifdef USB1_HS_BAM_BASE
#endif

#ifdef GSBI1_BASE
#endif

#ifdef QUP1_BASE
#endif

#ifdef GSBI1_UART_DM_BASE
#endif

#ifdef GSBI2_BASE
#endif

#ifdef QUP2_BASE
#endif

#ifdef GSBI2_UART_DM_BASE
#endif

#ifdef GSBI3_BASE
#endif

#ifdef QUP3_BASE
#endif

#ifdef GSBI3_UART_DM_BASE
#endif

#ifdef GSBI4_BASE
#endif

#ifdef QUP4_BASE
#endif

#ifdef GSBI4_UART_DM_BASE
#endif

#ifdef GSBI5_BASE
#endif

#ifdef QUP5_BASE
#endif

#ifdef GSBI5_UART_DM_BASE
#endif

#ifdef GSBI6_BASE
#endif

#ifdef QUP6_BASE
#endif

#ifdef GSBI6_UART_DM_BASE
#endif

#ifdef GSBI7_BASE
#endif

#ifdef QUP7_BASE
#endif

#ifdef GSBI7_UART_DM_BASE
#endif

#ifdef PMEM_BASE
#endif

#ifdef MSM_TCSR_BASE
#endif

#ifdef PRNG_BASE
#endif

#ifdef LPASS_XPU_BASE
#endif

#ifdef SMPSS_XPU_BASE
#endif

#ifdef MSS_XPU_BASE
#endif

#ifdef CFPB2_XPU_CFG_BASE
#endif

#ifdef CSYSFPB2_BASE
#endif

#ifdef CSYSFPB_SPL_BASE
#endif

#ifdef USB1_FS_BASE
#endif

#ifdef USB2_FS_BASE
#endif

#ifdef TSIF_BASE
#endif

#ifdef TSIF_1_BASE
#endif

#ifdef TSPP_BASE
#endif

#ifdef TSIF_BAM_BASE
#endif

#ifdef ADM3_0_BASE
#endif

#ifdef ADM3_1_BASE
#endif

#ifdef CE1_CRYPTO3_B_BASE
#endif

#ifdef CE2_CRYPTO3_E_BASE
#endif

#ifdef TSSC_BASE
#endif

#ifdef TSSC_SSBI_BASE
#endif

#ifdef MSM_PDM_BASE
#endif

#ifdef CFPB1_XPU_CFG_BASE
#endif

#ifdef CSYSFPB_MST_BASE
#endif

#ifdef CSYSFPB1_BASE
#endif

#ifdef GSBI8_BASE
#endif

#ifdef QUP8_BASE
#endif

#ifdef GSBI8_UART_DM_BASE
#endif

#ifdef GSBI9_BASE
#endif

#ifdef QUP9_BASE
#endif

#ifdef GSBI9_UART_DM_BASE
#endif

#ifdef GSBI10_BASE
#endif

#ifdef QUP10_BASE
#endif

#ifdef GSBI10_UART_DM_BASE
#endif

#ifdef GSBI11_BASE
#endif

#ifdef QUP11_BASE
#endif

#ifdef GSBI11_UART_DM_BASE
#endif

#ifdef GSBI12_BASE
#endif

#ifdef QUP12_BASE
#endif

#ifdef GSBI12_UART_DM_BASE
#endif

#ifdef CFPB0_XPU_CFG_BASE
#endif

#ifdef CSYSFPB0_BASE
#endif

#ifdef EBI2CR_BASE
#endif

#ifdef EBI2ND_BASE
#endif

#ifdef EBI2XM_BASE
#endif

#ifdef EBI2CS0_BASE
#endif

#ifdef EBI2CS1_BASE
#endif

#ifdef EBI2CS2_BASE
#endif

#ifdef EBI2CS5_BASE
#endif

#ifdef EBI2CS4_BASE
#endif

#ifdef EBI2CS3_BASE
#endif

#ifdef LPASS_CSR_BASE
#endif

#ifdef LPA_IF_BASE
#endif

#ifdef LPAIF_MPU_BASE
#endif

#ifdef LPA_M2VMT_BASE
#endif

#ifdef MIDI_BASE
#endif

#ifdef LPASS_QDSP6SS_PUB_BASE
#endif

#ifdef LPASS_QDSP6SS_CSR_BASE
#endif

#ifdef LPASS_QDSP6SS_SIRC_BASE
#endif

#ifdef LPASS_QDSP6SS_IM_BASE
#endif

#ifdef LPASS_QDSP6SS_SAW_BASE
#endif

#ifdef LPASS_QDSP6_TCMCFG_BASE
#endif

#ifdef EBI2_FICDC_BASE
#endif

#ifdef I2C_BASE
#endif

#ifdef PPSS_BASE
#endif

#ifdef SPDM_SECURE_BASE
#endif

#ifdef SPDM_BASE
#endif

#ifdef SCSS_TMR_CPU0_BASE
#endif

#ifdef SCSS_TMR_CPU1_BASE
#endif

#ifdef SCSS_ACC_CPU0_BASE
#endif

#ifdef SCSS_ACC_CPU1_BASE
#endif

#ifdef SCSS_SAW_CPU0_BASE
#endif

#ifdef SCSS_SAW_CPU1_BASE
#endif

#ifdef DAYTONA_PIPE_BASE
#endif

#ifndef __MSMHWIOREG_H__
#endif

#ifdef IRAM_SIZE
#endif

#ifndef HWIO_MOD_TEST_CTL_TX_SPECTRAL_INVERSION_SHFT
#endif

#ifndef HWIO_CDMA_RXFc_CTL_SPECTRAL_INVERSION_SHFT
#endif

#ifndef MSMHWIOREG_PORT_H
#endif

#ifndef __PROC_DSPS_MSMHWIOREG_PROC_H__
#endif

#ifndef __PROC_DSPS_MSMHWIOREG_PROCP_H__
#endif

#if defined(FEATURE_L4) && defined(IMAGE_APPS_PROC)
#endif

#ifndef HWIO_WDOG_RESET_ADDR
#endif

#if defined(IMAGE_APPS_PROC)
#endif

#ifndef MSMHWIOREG_REDEFS_H
#endif

#ifndef __MSMHWIOREGP_H__
#endif

#ifndef __MSMSHADOW_H__
#endif

#ifndef __MSMSHADOWP_H__
#endif

#ifndef __HAL_HALHWIOAGPT_H__
#endif

#ifndef __HAL_HALHWIOBAM_H__
#endif

#ifndef __HAL_HALHWIOBUS_H__
#endif

#ifndef __HAL_HALHWIOBUSPM_H__
#endif

#ifndef __HAL_HALHWIOCLK_H__
#endif

#ifndef __HAL_HALHWIOCLKSCSS_H__
#endif

#ifndef __HAL_HALHWIODM_H__
#endif

#ifndef __HAL_HALHWIOEBI2_H__
#endif

#ifndef __HAL_HALHWIOGPIOINT_H__
#endif

#ifndef __HAL_HALHWIOHWREV_H__
#endif

#ifndef __HAL_HALHWIOIPCINT_H__
#endif

#ifndef __HAL_HALHWIOM2VMT_H__
#endif

#ifndef __HAL_HALHWIOMODEMCLK_H__
#endif

#ifndef __HAL_HALHWIOMODEMCLK_PORT_H__
#endif

#ifndef __HAL_HALHWIOMODEMSBI_H__
#endif

#ifndef __HAL_HALHWIOMODEMSBIP_H__
#endif

#ifndef __HAL_HALHWIOMPUNAND_H__
#endif

#ifndef __HAL_HALHWIOPIC_H__
#endif

#ifndef __HAL_HALHWIOQGIC_H__
#endif

#ifndef __HAL_HALHWIOSBI_H__
#endif

#ifndef __HAL_HALHWIOTIMER_H__
#endif

#ifndef __HAL_HALHWIOTLMM_H__
#endif

#ifndef __HAL_HALHWIOXPU_H__
#endif

#ifndef __MSMHWIOBASE_H__
#endif

#ifndef HWIO_VIRT_BASE
#endif

#ifndef __PROC_APPS_MSMHWIOREG_L4_H__
#endif

#ifndef __PROC_APPS_MSMHWIOREG_PROC_H__
#endif

#ifndef __PROC_APPS_MSMHWIOREG_PROCP_H__
#endif

#ifndef __PROC_LPASS_MSMHWIOREG_PROC_H__
#endif

#ifndef __PROC_LPASS_MSMHWIOREG_PROCP_H__
#endif

#ifndef __PROC_MODEM_MSMHWIOREG_L4_H__
#endif

#ifndef __PROC_MODEM_MSMHWIOREG_PROC_H__
#endif

#ifndef __PROC_MODEM_MSMHWIOREG_PROCP_H__
#endif

#ifndef __PROC_RPM_MSMHWIOREG_PROC_H__
#endif

#ifndef __PROC_RPM_MSMHWIOREG_PROCP_H__
#endif

#ifdef EBI1_CH1_BASE
#endif

#ifdef QDSS_DAPROM_BASE
#endif

#ifdef QDSS_ETB_BASE
#endif

#ifdef QDSS_CTI1_BASE
#endif

#ifdef QDSS_TPIU_BASE
#endif

#ifdef QDSS_TFUNNEL_BASE
#endif

#ifdef QDSS_ITM_BASE
#endif

#ifdef QDSS_STM_BASE
#endif

#ifdef QDSS_DAPM2VMT_BASE
#endif

#ifdef APCS_QGIC2_BASE
#endif

#ifdef APCS_ACC_BASE
#endif

#ifdef APCS_SAW2_BASE
#endif

#ifdef APCS_TMR_BASE
#endif

#ifdef APCS_GLB_BASE
#endif

#ifdef APCS_GCC_BASE
#endif

#ifdef APCS_L2_GDHS_BASE
#endif

#ifdef APCS_L2_MPU_BASE
#endif

#ifdef APCS_HSEL_BASE
#endif

#ifdef MIPI_DSI_1_BASE
#endif

#ifdef MIPI_DSI_2_BASE
#endif

#ifdef CSID_BASE
#endif

#ifdef QDSP6FW_TCM_BASE
#endif

#ifdef QDSP6FW_L2TCM_CFG_BASE
#endif

#ifdef QDSP6SW_L2TCM_CFG_BASE
#endif

#ifdef QDSP6FWSS_PUB_BASE
#endif

#ifdef QDSP6FWSS_CSR_BASE
#endif

#ifdef QDSP6FWSS_L2VIC_BASE
#endif

#ifdef QDSP6FWSS_SAW_BASE
#endif

#ifdef QDSP6SWSS_PUB_BASE
#endif

#ifdef QDSP6SWSS_CSR_BASE
#endif

#ifdef QDSP6SWSS_L2VIC_BASE
#endif

#ifdef QDSP6SWSS_SAW_BASE
#endif

#ifdef MSS_PERPH_BASE
#endif

#ifdef A2_BASE
#endif

#ifdef MTC_BASE
#endif

#ifdef RXFE_BASE
#endif

#ifdef TX_BASE
#endif

#ifdef EDGE_BASE
#endif

#ifdef DEMB_BASE
#endif

#ifdef DEMSS_BASE
#endif

#ifdef MEMSS_BASE
#endif

#ifdef BAM_DMA_BAM_XPU_BASE
#endif

#ifdef SPS_SLIMBUS_BASE
#endif

#ifdef SLIMBUS_BAM0_BASE
#endif

#ifdef SLIMBUS_XPU0_BASE
#endif

#ifdef SPS_GSBI1_BASE
#endif

#ifdef SPS_UART1_DM_BASE
#endif

#ifdef SPS_QUP1_BASE
#endif

#ifdef SPS_GSBI2_BASE
#endif

#ifdef SPS_UART2_DM_BASE
#endif

#ifdef SPS_QUP2_BASE
#endif

#ifdef A2_BAM_BASE
#endif

#ifdef CE2_CRYPTO4_BASE
#endif

#ifdef KPSS_XPU_BASE
#endif

#ifdef CE1_CRYPTO4_BASE
#endif

#ifdef DIM_D00_REG_BASE
#endif

#ifdef DIM_D01_REG_BASE
#endif

#ifdef DIM_D02_REG_BASE
#endif

#ifdef DIM_D03_REG_BASE
#endif

#ifdef DIM_C00_REG_BASE
#endif

#ifdef DIM_D10_REG_BASE
#endif

#ifdef DIM_D11_REG_BASE
#endif

#ifdef DIM_D12_REG_BASE
#endif

#ifdef DIM_D13_REG_BASE
#endif

#ifdef DIM_C10_REG_BASE
#endif

#ifdef LPASS_M2VMT_BASE
#endif

#ifdef LPASS_M2VMT_Q6SS_BASE
#endif

#ifdef LPASS_AHBTM_BASE
#endif

#ifdef LPASS_SLIMBUS_BASE
#endif

#ifdef LPASS_BAM_LITE_BASE
#endif

#ifdef LPASS_QDSP6SS_L2VIC_BASE
#endif

#ifdef RIVA_BASE
#endif

#ifdef APCS_TMR_CPU0_BASE
#endif

#ifdef APCS_TMR_CPU1_BASE
#endif

#ifdef APCS_ACC_CPU0_BASE
#endif

#ifdef APCS_ACC_CPU1_BASE
#endif

#ifdef APCS_SAW2_CPU0_BASE
#endif

#ifdef APCS_SAW2_CPU1_BASE
#endif

#ifndef __HAL_HALHWIOCLKAPCS_H__
#endif

#ifndef __HAL_HALHWIOSLIMBUS_H__
#endif

#ifndef __PROC_RIVA_MSMHWIOREG_PROC_H__
#endif

#ifndef __PROC_RIVA_MSMHWIOREG_PROCP_H__
#endif

#ifdef AMSS_CUST_H
#endif

#ifndef SCL_SHARED_RAM_BASE
#endif

#ifdef FEATURE_SMDL
#endif

#ifndef CUSTSENSORSIMG_H
#endif

#ifdef PY_SSIZE_T_CLEAN
#endif

#ifndef Py_ABSTRACTOBJECT_H
#endif

#ifdef Py_DEBUG
#else
#endif

#ifndef Py_ASDL_H
#endif

#ifndef Py_AST_H
#endif

#ifndef Py_BITSET_H
#endif

#ifndef Py_BOOLOBJECT_H
#endif

#ifndef Py_BUFFEROBJECT_H
#endif

#ifndef Py_BYTEARRAYOBJECT_H
#endif

#ifndef Py_BYTES_CTYPE_H
#endif

#ifndef Py_CELLOBJECT_H
#endif

#ifdef USE_STACKCHECK
#else
#endif

#ifdef WITH_THREAD
#else
#endif

#ifndef Py_CEVAL_H
#endif

#ifndef Py_CLASSOBJECT_H
#endif

#ifndef Py_COBJECT_H
#endif

#if 1
#endif

#ifndef Py_CODE_H
#endif

#ifndef Py_CODECREGISTRY_H
#endif

#ifndef Py_COMPILE_H
#endif

#ifndef Py_COMPLEXOBJECT_H
#endif

#ifndef Py_CSTRINGIO_H
#endif

#ifdef Py_BUILD_CORE
#else
#endif

#ifndef DATETIME_H
#endif

#ifndef Py_DESCROBJECT_H
#endif

#ifndef Py_DICTOBJECT_H
#endif

#ifndef Py_ENUMOBJECT_H
#endif

#ifndef Py_ERRCODE_H
#endif

#ifndef Py_EVAL_H
#endif

#ifndef Py_FILEOBJECT_H
#endif

#ifdef Py_NAN
#endif

#ifndef Py_FLOATOBJECT_H
#endif

#ifndef Py_FRAMEOBJECT_H
#endif

#ifndef Py_FUNCOBJECT_H
#endif

#ifndef Py_GENOBJECT_H
#endif

#ifndef Py_GRAMMAR_H
#endif

#ifndef Py_IMPORT_H
#endif

#ifdef Py_USING_UNICODE
#endif

#ifdef HAVE_LONG_LONG
#endif

#ifndef Py_INTOBJECT_H
#endif

#ifndef Py_INTRCHECK_H
#endif

#ifndef Py_ITEROBJECT_H
#endif

#ifndef Py_LISTOBJECT_H
#endif

#if PyLong_SHIFT%5 != 0
#endif

#ifndef Py_LONGINTREPR_H
#endif

#ifndef Py_LONGOBJECT_H
#endif

#ifndef Py_MARSHAL_H
#endif

#ifndef Py_METAGRAMMAR_H
#endif

#ifndef Py_METHODOBJECT_H
#endif

#ifdef PY_SSIZE_T_CLEAN
#else
#endif

#ifdef MS_WINDOWS
#endif

#if SIZEOF_SIZE_T != SIZEOF_INT
#endif

#if SIZEOF_SIZE_T != SIZEOF_INT
#else
#endif

#ifdef Py_TRACE_REFS
#endif

#ifndef Py_MODSUPPORT_H
#endif

#ifndef Py_MODULEOBJECT_H
#endif

#ifndef Py_NODE_H
#endif

#if defined(Py_DEBUG) && !defined(Py_TRACE_REFS)
#endif

#if defined(Py_TRACE_REFS) && !defined(Py_REF_DEBUG)
#endif

#ifdef Py_TRACE_REFS
#else
#endif

#ifdef COUNT_ALLOCS
#endif

#ifdef STACKLESS
#else
#endif

#ifdef Py_REF_DEBUG
#else
#endif

#ifdef COUNT_ALLOCS
#else
#endif

#ifndef Py_OBJECT_H
#endif

#ifdef PYMALLOC_DEBUG
#else
#endif

#ifdef WITH_PYMALLOC
#else
#endif

#if ((SIZEOF_VOID_P - 1)&SIZEOF_VOID_P) != 0
#endif

#ifndef Py_OBJIMPL_H
#endif

#ifndef Py_OPCODE_H
#endif

#if defined(PYOS_OS2) && defined(PYCC_GCC)
#else
#endif

#if defined(MS_WINDOWS) || defined(__BORLANDC__) || defined(__WATCOMC__) || defined(__DJGPP__) || defined(PYOS_OS2)
#endif

#if !defined(__QNX__)
#endif

#ifdef RISCOS
#endif

#ifndef SEP
#endif

#if defined(PATH_MAX) && PATH_MAX > 1024
#else
#endif

#ifndef MAXPATHLEN
#endif

#ifndef DELIM
#endif

#ifndef Py_OSDEFS_H
#endif

#ifndef Py_PARSETOK_H
#endif

#ifndef Py_PGEN_H
#endif

#ifndef Py_PGENHEADERS_H
#endif

#ifdef _BSD_WCHAR_T_DEFINED_
#endif

#ifdef __APPLE__
#endif

#ifndef __FreeBSD_version
#endif

#ifndef __wchar_t
#endif

#ifndef __wint_t
#endif

#ifndef _WCHAR_T
#endif

#ifndef _WINT_T
#endif

#if __FreeBSD_version >= 500000
#else
#endif

#ifdef _XOPEN_SOURCE_EXTENDED
#endif

#ifdef __FreeBSD__
#endif

#ifdef HAVE_TERM_H
#endif

#ifdef HAVE_NCURSES_H
#else
#endif

#ifndef WINDOW_HAS_FLAGS
#endif

#ifndef MVWDELCH_IS_EXPRESSION
#endif

#ifdef HAVE_NCURSES_H
#endif

#ifdef CURSES_MODULE
#else
#endif

#ifndef Py_CURSES_H
#endif

#ifndef Py_PYARENA_H
#endif

#ifdef _WIN32_WCE
#endif

#ifdef USE_DL_EXPORT
#endif

#ifndef _CRT_SECURE_NO_DEPRECATE
#endif

#ifndef _CRT_NONSTDC_NO_DEPRECATE
#endif

#ifndef MS_WINCE
#endif

#ifdef HAVE_IO_H
#endif

#ifndef PYTHONPATH
#endif

#ifndef NETSCAPE_PI
#endif

#ifdef MS_WINCE
#endif

#ifdef _WIN64
#endif

#if defined(_M_IA64)
#elif defined(_M_X64) || defined(_M_AMD64)
#else
#endif

#ifdef MS_WIN64
#endif

#ifdef _WIN32_WINNT_WIN2K
#else
#endif

#ifdef MS_WINX64
#else
#endif

#ifndef NTDDI_VERSION
#endif

#ifndef WINVER
#endif

#ifndef _WIN32_WINNT
#endif

#if defined(Py_BUILD_CORE) || defined(Py_BUILD_CORE_MODULE)
#endif

#ifndef _W64
#endif

#ifdef MS_WIN64
#else
#endif

#ifdef _M_IX86
#else
#endif

#if defined(MS_WIN32) && !defined(MS_WIN64)
#endif

#ifdef _MSC_VER
#endif

#if defined(_MSC_VER) && _MSC_VER >= 1200
#endif

#ifdef _WIN32
#else
#endif

#ifdef __BORLANDC__
#endif

#if (__GNUC__ == 2) && (__GNUC_MINOR__ <= 91)
#endif

#if defined(__GNUC__) && defined(_WIN32)
#endif

#if defined(__LCC__)
#endif

#ifndef NO_STDIO_H
#endif

#ifndef PY_LONG_LONG
#endif

#if !defined(MS_NO_COREDLL) && !defined(Py_NO_ENABLE_SHARED)
#endif

#if defined(_MSC_VER)
#endif

#ifndef Py_BUILD_CORE
#endif

#ifdef MS_COREDLL
#endif

#if defined(_MSC_VER) && _MSC_VER >= 1400
#else
#endif

#if defined(MS_WIN64)
#elif defined(MS_WIN32)
#endif

#ifdef _DEBUG
#endif

#if _MSC_VER > 1300
#else
#endif

#ifdef MS_WIN32
#endif

#ifndef _ALL_SOURCE
#endif

#ifndef Py_CONFIG_H
#endif

#ifndef Py_PYDEBUG_H
#endif

#ifdef __VMS
#endif

#ifdef Py_WIN_WIDE_FILENAMES
#endif

#if defined(MS_WIN32) && !defined(HAVE_SNPRINTF)
#endif

#ifndef Py_ERRORS_H
#endif

#ifdef WANT_SIGFPE_HANDLER
#else
#endif

#ifndef Py_PYFPE_H
#endif

#ifndef Py_PYGETOPT_H
#endif

#if defined(__LP64__) && defined(__x86_64__)
#endif

#ifndef __LP64__
#endif

#ifdef __LP64__
#else
#endif

#if defined(__LP64__)
#endif

#if defined(__APPLE__)
#endif

#ifndef PYMACCONFIG_H
#endif

#ifdef USE_TOOLBOX_OBJECT_GLUE
#else
#endif

#ifndef Py_PYMACTOOLBOX_H
#endif

#ifdef HAVE_STDINT_H
#endif

#ifndef HAVE_COPYSIGN
#endif

#ifndef HAVE_ACOSH
#endif

#ifndef HAVE_ASINH
#endif

#ifndef HAVE_ATANH
#endif

#ifndef HAVE_LOG1P
#endif

#ifndef HAVE_HYPOT
#endif

#ifndef __STDC__
#endif

#ifndef _MSC_VER
#endif

#ifdef _OSF_SOURCE
#endif

#ifndef Py_MATH_PIl
#endif

#ifndef Py_MATH_PI
#endif

#ifndef Py_MATH_El
#endif

#ifndef Py_MATH_E
#endif

#ifdef HAVE_ISNAN
#else
#endif

#ifndef Py_IS_NAN
#endif

#ifdef HAVE_ISINF
#else
#endif

#ifndef Py_IS_INFINITY
#endif

#ifdef HAVE_FINITE
#else
#endif

#ifndef Py_IS_FINITE
#endif

#ifndef Py_HUGE_VAL
#endif

#if !defined(Py_NAN) && !defined(Py_NO_NAN)
#endif

#if defined(__FreeBSD__) || defined(__OpenBSD__)
#else
#endif

#ifndef Py_PYMATH_H
#endif

#ifndef Py_PYMEM_H
#endif

#ifdef HAVE_PROTOTYPES
#else
#endif

#ifndef Py_FPROTO
#endif

#if defined(LLONG_MAX)
#elif defined(__LONG_LONG_MAX__)
#else
#endif

#ifdef HAVE_UINTPTR_T
#elif SIZEOF_VOID_P <= SIZEOF_INT
#elif SIZEOF_VOID_P <= SIZEOF_LONG
#elif defined(HAVE_LONG_LONG) && (SIZEOF_VOID_P <= SIZEOF_LONG_LONG)
#else
#endif

#ifdef HAVE_SSIZE_T
#elif SIZEOF_VOID_P == SIZEOF_SIZE_T
#else
#endif

#ifdef SIZE_MAX
#else
#endif

#if SIZEOF_PID_T > SIZEOF_LONG
#endif

#if SIZEOF_SIZE_T == SIZEOF_INT && !defined(__APPLE__)
#elif SIZEOF_SIZE_T == SIZEOF_LONG
#elif defined(MS_WINDOWS)
#else
#endif

#ifndef PY_FORMAT_SIZE_T
#endif

#if defined(PY_LOCAL_AGGRESSIVE)
#endif

#if defined(_MSC_VER)
#elif defined(USE_INLINE)
#else
#endif

#if defined(_MSC_VER)
#else
#endif

#ifdef HAVE_SYS_TIME_H
#else
#endif

#ifdef TIME_WITH_SYS_TIME
#else
#endif

#ifdef HAVE_SYS_SELECT_H
#endif

#ifndef DONT_HAVE_STAT
#endif

#ifndef DONT_HAVE_FSTAT
#endif

#if defined(PYOS_OS2) && defined(PYCC_GCC)
#endif

#ifdef HAVE_SYS_STAT_H
#elif defined(HAVE_STAT_H)
#endif

#if defined(PYCC_VACPP)
#endif

#ifndef S_ISREG
#endif

#ifndef S_ISDIR
#endif

#ifdef SIGNED_RIGHT_SHIFT_ZERO_FILLS
#else
#endif

#if defined(__FreeBSD__) || defined(__OpenBSD__) || (defined(__hpux) && defined(__ia64))
#else
#endif

#if defined(__GNUC__) && ((__GNUC__ >= 4) || (__GNUC__ == 3) && (__GNUC_MINOR__ >= 1))
#else
#endif

#ifdef SOLARIS
#endif

#ifdef __BEOS__
#endif

#ifdef HAVE__GETPTY
#endif

#ifdef HAVE_SYS_TERMIO_H
#endif

#if !defined(HAVE_PTY_H) && !defined(HAVE_LIBUTIL_H)
#endif

#if defined(HAVE_OPENPTY) || defined(HAVE_FORKPTY)
#endif

#if __FreeBSD_version > 500039
#endif

#if defined(__CYGWIN__) || defined(__BEOS__)
#endif

#if defined(__CYGWIN__)
#else
#endif

#if !defined(__CYGWIN__)
#endif

#if defined(__cplusplus)
#else
#endif

#if defined(HAVE_DECLSPEC_DLL)
#endif

#if defined(Py_ENABLE_SHARED) || defined(__CYGWIN__)
#endif

#ifndef PyAPI_FUNC
#endif

#ifndef PyAPI_DATA
#endif

#ifndef PyMODINIT_FUNC
#endif

#if defined(Py_BUILD_CORE)
#else
#endif

#if defined(Py_ENABLE_SHARED) && defined(HAVE_DECLSPEC_DLL)
#endif

#ifndef DL_EXPORT
#endif

#ifndef DL_IMPORT
#endif

#ifndef FD_SETSIZE
#endif

#ifndef howmany
#endif

#ifndef FD_SET
#endif

#ifndef INT_MAX
#endif

#if SIZEOF_LONG == 4
#elif SIZEOF_LONG == 8
#else
#endif

#ifndef LONG_MAX
#endif

#ifndef LONG_MIN
#endif

#ifndef LONG_BIT
#endif

#if LONG_BIT != 8 * SIZEOF_LONG
#endif

#if (!defined(__GNUC__) || __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)) && !defined(RISCOS)
#else
#endif

#ifdef HAVE_ATTRIBUTE_FORMAT_PARSETUPLE
#else
#endif

#ifdef __SUNPRO_C
#endif

#ifndef Py_LL
#endif

#ifndef Py_ULL
#endif

#ifndef Py_PYPORT_H
#endif

#ifdef HAVE_DLOPEN
#endif

#ifdef WITH_TSC
#endif

#ifdef WITH_THREAD
#endif

#ifndef Py_PYSTATE_H
#endif

#if defined(MS_WINDOWS) || defined(PYOS_OS2)
#else
#endif

#ifndef Py_STRCMP_H
#endif

#ifndef Py_STRTOD_H
#endif

#ifndef WITH_CYCLE_GC
#endif

#ifndef UCHAR_MAX
#endif

#if UCHAR_MAX != 255
#endif

#if defined(__sgi) && defined(WITH_THREAD) && !defined(_SGI_MP_SOURCE)
#endif

#ifdef HAVE_ERRNO_H
#endif

#ifdef HAVE_UNISTD_H
#endif

#ifdef HAVE_STDDEF_H
#endif

#if defined(Py_DEBUG) && defined(WITH_PYMALLOC) && !defined(PYMALLOC_DEBUG)
#endif

#if defined(PYMALLOC_DEBUG) && !defined(WITH_PYMALLOC)
#endif

#ifndef WITHOUT_COMPLEX
#endif

#ifdef __CHAR_UNSIGNED__
#else
#endif

#ifdef HAVE_PTH
#endif

#ifdef WITH_DOC_STRINGS
#else
#endif

#ifndef Py_PYTHON_H
#endif

#if defined(WIN32) && !defined(MS_WIN64) && defined(_MSC_VER) && _MSC_VER >= 1300
#endif

#ifdef USE_STACKCHECK
#endif

#ifndef Py_PYTHONRUN_H
#endif

#ifndef NO_EXIT_PROG
#endif

#ifndef Py_PYTHREAD_H
#endif

#ifndef Py_RANGEOBJECT_H
#endif

#ifndef Py_SETOBJECT_H
#endif

#ifndef Py_SLICEOBJECT_H
#endif

#ifndef Py_STRINGOBJECT_H
#endif

#ifndef offsetof
#endif

#ifndef Py_STRUCTMEMBER_H
#endif

#ifndef Py_STRUCTSEQ_H
#endif

#ifndef Py_SYMTABLE_H
#endif

#ifndef Py_SYSMODULE_H
#endif

#ifndef TIMEFUNCS_H
#endif

#ifndef Py_TOKEN_H
#endif

#ifndef Py_TRACEBACK_H
#endif

#ifndef Py_TUPLEOBJECT_H
#endif

#ifndef Py_UCNHASH_H
#endif

#ifndef Py_UNICODE_SIZE
#endif

#if Py_UNICODE_SIZE >= 4
#endif

#if defined(MS_WIN32) && Py_UNICODE_SIZE == 2
#endif

#if defined(Py_UNICODE_WIDE)
#endif

#ifndef PY_UNICODE_TYPE
#endif

#ifndef HAVE_WCHAR_H
#endif

#ifdef HAVE_USABLE_WCHAR_T
#endif

#ifdef _HAVE_BSDI
#endif

#ifdef HAVE_WCHAR_H
#endif

#if SIZEOF_INT >= 4
#elif SIZEOF_LONG >= 4
#endif

#ifndef Py_UNICODE_WIDE
#else
#endif

#if defined(HAVE_USABLE_WCHAR_T) && defined(WANT_WCTYPE_FUNCTIONS)
#else
#endif

#ifndef Py_USING_UNICODE
#else
#endif

#ifndef Py_UNICODEOBJECT_H
#endif

#ifndef Py_WARNINGS_H
#endif

#ifndef Py_WEAKREFOBJECT_H
#endif

#if defined(__GNUC__) && defined(_POSIX_C_SOURCE)
#endif

#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
#endif

#if PY_VERSION_HEX < 0x02030000
#endif

#if defined(DEBUG) || defined(_DEBUG)
#else
#endif

#ifdef BUILD_PYWINTYPES
#else
#endif

#ifdef FREEZE_PYWINTYPES
#else
#endif

#ifdef PyUnicode_Check
#endif

#ifdef PYWIN_USE_PYUNICODE
#else
#endif

#if (PY_VERSION_HEX >= 0x02060000) || defined(_WIN64)
#endif

#ifdef UNICODE
#else
#endif

#if (PY_VERSION_HEX < 0x02030000 && !defined(PYWIN_NO_BOOL_FROM_LONG))
#endif

#ifndef NO_PYWINTYPES_IID
#endif

#ifndef NO_PYWINTYPES_TIME
#endif

#ifdef WITH_FREE_THREAD
#endif

#ifndef FORCE_NO_FREE_THREAD
#endif

#ifdef PYCOM_USE_FREE_THREAD
#else
#endif

#ifndef PYCOM_USE_FREE_THREAD
#else
#endif

#if (PY_VERSION_HEX >= 0x02030000)
#endif

#ifndef PYCOM_USE_FREE_THREAD
#endif

#ifndef PYWIN_USE_GILSTATE
#else
#endif

#ifdef MAINWIN
#else
#endif

#if defined(__MINGW32__) || defined(MAINWIN)
#else
#endif

#ifndef __PYWINTYPES_H__
#endif

#ifndef APSTUDIO_READONLY_SYMBOLS
#endif

#ifdef APSTUDIO_INVOKED
#endif

#ifndef _DEBUG
#else
#endif

#ifdef BUILD_PYTHONCOM
#else
#endif

#ifdef FREEZE_PYTHONCOM
#else
#endif

#ifdef __MINGW32__
#endif

#ifndef NO_PYCOM_IDISPATCHEX
#endif

#if !defined(VT_RECORD)
#else
#endif

#if defined(MAINWIN)
#endif

#ifndef NO_PYCOM_STGOPTIONS
#endif

#ifndef NO_PYCOM_IPROVIDECLASSINFO
#endif

#ifndef __PYTHONCOM_H__
#endif

#ifndef __PYTHONCOMREGISTER_H__
#endif

#ifndef NO_PYCOM_IDISPATCHEX
#else
#endif

#ifndef __PYTHONCOMSERVER_H__
#endif

#ifndef DALI2CPDPROPS_H
#endif

#ifndef DALI2CPROPS_H
#endif

#ifndef DALI2C_H
#endif

#ifndef DALI2CINTERNAL_H
#endif

#ifndef DALI2CTARGET_H
#endif

#ifndef DALI2CPDCOMMON_H
#endif

#ifndef DALI2CPDTARGET_H
#endif

#ifndef DALI2CPD_H
#endif

#ifndef DALI2CPDINTERNAL_H
#endif

#ifndef DALQUPI2CPDTARGET_H
#endif

#ifndef DALQUPI2CPD_H
#endif

#ifndef DALQUPI2CPDINTERNAL_H
#endif

#ifndef _QUP_H
#endif

#ifdef DEBUG
#endif

#ifndef I2C_DIAG_H
#endif

#ifndef HAL_I2C_H
#endif

#ifndef HALI2CTARGET_H
#endif

#ifndef HALI2CINTERNAL_H
#endif

#ifndef _HALQUPE_H
#endif

#ifndef _HALQUPETARGET_H
#endif

#ifndef __HALQUPEHWIO_H__
#endif

#ifndef I2C_NPA_H
#endif

#ifndef I2C_NPA_INTERNAL_H
#endif

#ifndef I2C_NPA_REMOTE_INTERNAL_H
#endif

#if defined(DAL_CONFIG_IMAGE_MODEM)
#elif defined(DAL_CONFIG_IMAGE_APPS)
#else
#endif

#if defined(FEATURE_WINCE) || defined(WINSIM)
strip
#elif defined(ARCH_QDSP6)
#else
#endif

#ifdef __TARGET_CPU_ARM926EJ_S
#elif defined(__TARGET_CPU_ARM7TDMI_S)
#else
#endif

#ifdef ARCH_QDSP6
#else
#endif

#if defined(FEATURE_DAL_APPS_WM7)
#else
#endif

#if defined(FEATURE_APPS_IMAGE_WINMOB) || defined(FEATURE_WINCE)
#elif defined(FEATURE_NATIVELINUX)
#elif !defined(FEATURE_QDSP)
#endif

#ifndef DAL_CONFIG_H
#endif

#ifndef DALSYS_UCOS_SHIM
#else
#endif

#ifndef SPS_CONFIG_H
#endif

#ifndef DALInterruptController_H
#endif

#if TRAMP_VERSION > 20
#endif

#ifdef DALINTRCTRL_CONFIG_STATIC_IST
#endif

#ifndef _DAL_INTRCTRLR_CONFIG_H
#endif

#ifndef DALINTTHREAD_H
#endif

#if CE_MAJOR_VER >= 0x0007
#else
#endif

#ifdef QC_IOCTL_PIC_SINGLE_INTCLR
#endif

#ifdef QC_IOCTL_PIC_SINGLE_INTSTAT
#endif

#ifndef QC_IOCTL_SINGLE_INT_CONFIG
#endif

#ifdef QC_IOCTL_GET_INTR_PENDING_STATUS
#else
#endif

#ifdef QC_IOCTL_GET_INTR_ENABLE_STATUS
#else
#endif

#ifndef DALRemoteTest_H
#endif

#ifdef FEATURE_WINCE_BOOTLOADER
#endif

#if defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_QCOM_BOOT)
#elif defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_NONE)
#elif defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_L4_PMEM)
#else
#endif

#ifndef DALTimer_H
#endif

#ifdef FEATURE_CMI
#else
#endif

#ifdef DAL_IMAGE_CONFIG_H
#else
#endif

#ifndef DAL_HWPLATFORM_TIMER_H
#endif

#ifndef DALTIMER_PRIV_H
#endif

#if (DAL_CONFIG_TARGET_ID != 0x8650)
#endif

#ifndef FEATURE_LOAD_DYNAMIC_MODULE
#else
#endif

#ifdef WINSIM
strip
#endif

#if (DAL_CONFIG_ARCH == DAL_CONFIG_ARCH_QDSP6_V2)
#else
#endif

#if (DAL_CONFIG_ARCH&DAL_CONFIG_ARCH_ARM) && (DAL_CONFIG_ARCH <= DAL_CONFIG_ARCH_ARM_V6)
#endif

#if ((DAL_CONFIG_ARCH <= DAL_CONFIG_ARCH_ARM_V5) || (DAL_CONFIG_ARCH == DAL_CONFIG_ARCH_WINSIM))
#endif

#if (DAL_CONFIG_ARCH&DAL_CONFIG_ARCH_QDSP)
#endif

#if ((DAL_CONFIG_ARCH < DAL_CONFIG_ARCH_ARM_V5) || (DAL_CONFIG_ARCH == DAL_CONFIG_ARCH_WINSIM))
#endif

#if ((DAL_CONFIG_ARCH <= DAL_CONFIG_ARCH_ARM_V5) || (DAL_CONFIG_ARCH == DAL_CONFIG_ARCH_WINSIM))
#else
#endif

#if ((DAL_CONFIG_ARCH&DAL_CONFIG_ARCH_ARM) && (DAL_CONFIG_ARCH <= DAL_CONFIG_ARCH_ARM_V6))
#else
#endif

#ifdef FEATURE_BMPOS_QNK
#endif

#ifdef FEATURE_BLAST
#endif

#ifndef boolean
#endif

#if defined(FEATURE_AMSS_ARM)
#elif defined(FEATURE_BLAST)
#elif defined(FEATURE_WINCE) && !defined(FEATURE_WINCE_BOOTLOADER)
strip
#else
#endif

#ifdef FEATURE_AMSS_ARM
#else
#endif

#ifdef DAL_BUILD_MULTI_PROC_IMAGE
#else
#endif

#if (DALGLBCTXT_LOCK_PROCESSOR_ID == DAL_CONFIG_ARCH_QDSP6_V2)
#endif

#ifndef SCL_MM_HEAP1_BASE
#endif

#ifndef SCL_MM_HEAP2_BASE
#endif

#if defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_L4_PMEM)
#elif defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_QCOM_BOOT)
#elif defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_NONE)
#else
#endif

#ifdef DALSYS_MEMREGION_ALLOC_USED
#endif

#ifdef DALSYS_MEMREGION_ALLOC_USED
#else
#endif

#if (DAL_CONFIG_ARCH >= DAL_CONFIG_ARCH_ARM_V6)
#endif

#if (DALARM_VERSION == 7)
#else
#endif

#ifndef __DALFWK_QDSP_UTILS_H_
#endif

#ifndef DALSYSCMN_H
#endif

#ifndef DALSYSINT_H
#endif

#ifdef DAL_FEATURE_REMOTING
#endif

#ifdef DAL0DRIVER
#else
#endif

#ifdef DAL_FEATURE_REMOTING
#else
#endif

#ifdef DAL_SYSDRV_BUSYWAIT
#else
#endif

#ifdef DAL_ERR_LOG
#endif

#ifndef DISABLE_PREEMPTION_PRIORITY
#endif

#if defined(FEATURE_WINCE_BOOTLOADER)
#elif defined(DAL_SYSDRV_BUSYWAIT)
#else
#endif

#ifndef BOOT_HEAP_SIZE
#endif

#if defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_NONE)
#else
#endif

#ifdef FEATURE_WINCE_BOOTLOADER
#else
#endif

#if defined(DAL_CONFIG_MMU_SCHEME) && (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_QCOM_BOOT)
#else
#endif

#ifndef DAL_CONFIG_MMU_SCHEME
#endif

#if OS_MAX_DAL_RESERVED_PRIO < DAL_CONFIG_NUM_SYNC
#endif

#if OS_CRITICAL_METHOD == 3u
#endif

#ifndef OS_MASTER_FILE
#endif

#if OS_TASK_STAT_EN > 0u
#endif

#ifdef OS_SAFETY_CRITICAL
#endif

#if OS_ARG_CHK_EN > 0u
#endif

#if (OS_EVENT_EN) && (OS_EVENT_NAME_EN > 0u)
#endif

#if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
#endif

#if (OS_CRITICAL_METHOD == 3u)
#endif

#if (OS_ARG_CHK_EN > 0u)
#endif

#if (OS_SEM_EN > 0u)
#endif

#if (OS_MBOX_EN > 0u)
#endif

#if ((OS_MBOX_EN > 0u) || ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)))
#endif

#if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
#endif

#if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
#endif

#if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
#endif

#if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
#endif

#if OS_TMR_EN > 0u
#endif

#if OS_DEBUG_EN > 0u
#endif

#if OS_TASK_PROFILE_EN > 0u
#endif

#ifdef OS_SAFETY_CRITICAL_IEC61508
#endif

#if OS_SCHED_LOCK_EN > 0u
#endif

#if OS_TICK_STEP_EN > 0u
#endif

#if OS_TIME_TICK_HOOK_EN > 0u
#endif

#if OS_TIME_GET_SET_EN > 0u
#endif

#if OS_TASK_DEL_EN > 0u
#endif

#if OS_LOWEST_PRIO > 63u
#endif

#if OS_LOWEST_PRIO <= 63u
#else
#endif

#if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)) || (OS_MBOX_EN > 0u)
#else
#endif

#if (OS_EVENT_MULTI_EN > 0u)
#endif

#if (OS_EVENT_EN)
#endif

#if OS_EVENT_NAME_EN > 0u
#endif

#if (OS_MAX_EVENTS > 1u)
#else
#endif

#if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
#endif

#if OS_TASK_NAME_EN > 0u
#endif

#if OS_STK_GROWTH == 1u
#else
#endif

#if OS_TASK_CREATE_EXT_EN > 0u
#else
#endif

#if (OS_EVENT_NAME_EN > 0u) || (OS_FLAG_NAME_EN > 0u) || (OS_MEM_NAME_EN > 0u) || (OS_TASK_NAME_EN > 0u) || (OS_TMR_CFG_NAME_EN > 0u)
#endif

#if OS_TASK_SUSPEND_EN > 0u
#else
#endif

#if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
#endif

#if OS_TASK_REG_TBL_SIZE > 0u
#endif

#if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u) && (OS_TASK_DEL_EN > 0u)
#endif

#if (OS_MBOX_EN > 0u) || ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
#endif

#if OS_TMR_EN > 0
#endif

#if OS_CPU_FPU_EN > 0
#endif

#if OS_TASK_STAT_EN && OS_TASK_CREATE_EXT_EN
#endif

#if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
#endif

#if OS_CPU_INT_DIS_MEAS_EN > 0
#endif

#if OS_APP_HOOKS_EN > 0
#else
#endif

#if OS_CPU_HOOKS_EN > 0
#endif

#if OS_CPU_ARM_DCC_EN > 0
#endif

#if OS_APP_HOOKS_EN > 0
#endif

#if OS_CPU_HOOKS_EN > 0 && OS_VERSION >= 251
#endif

#if (OS_CPU_HOOKS_EN > 0) && (OS_TASK_SW_HOOK_EN > 0)
#endif

#if (OS_CPU_HOOKS_EN > 0) && (OS_TIME_TICK_HOOK_EN > 0)
#endif

#if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
#else
#endif

#if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
#else
#endif

#if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
#else
#endif

#if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
#else
#endif

#if (OS_TMR_EN > 0u) && (OS_TMR_CFG_MAX > 0u)
#else
#endif

#if (OS_TMR_EN > 0u) && (OS_TMR_CFG_MAX > 0u)
#endif

#if OS_FLAG_WAIT_CLR_EN > 0u
#endif

#if OS_FLAG_ACCEPT_EN > 0u
#endif

#if OS_FLAG_NAME_EN > 0u
#endif

#if OS_FLAG_DEL_EN > 0u
#endif

#if OS_FLAG_QUERY_EN > 0u
#endif

#if OS_MAX_FLAGS == 1u
#endif

#if OS_MAX_FLAGS >= 2u
#endif

#if OS_MBOX_ACCEPT_EN > 0u
#endif

#if OS_MBOX_DEL_EN > 0u
#endif

#if OS_MBOX_PEND_ABORT_EN > 0u
#endif

#if OS_MBOX_POST_EN > 0u
#endif

#if OS_MBOX_POST_OPT_EN > 0u
#endif

#if OS_MBOX_QUERY_EN > 0u
#endif

#if OS_MBOX_EN > 0u
#endif

#if OS_MEM_NAME_EN > 0u
#endif

#if OS_MEM_QUERY_EN > 0u
#endif

#if OS_MAX_MEM_PART == 1u
#endif

#if OS_MAX_MEM_PART >= 2u
#endif

#if OS_MUTEX_ACCEPT_EN > 0u
#endif

#if OS_MUTEX_DEL_EN > 0u
#endif

#if OS_MUTEX_QUERY_EN > 0u
#endif

#if OS_MUTEX_EN > 0u
#endif

#if OS_Q_ACCEPT_EN > 0u
#endif

#if OS_Q_DEL_EN > 0u
#endif

#if OS_Q_FLUSH_EN > 0u
#endif

#if OS_Q_PEND_ABORT_EN > 0u
#endif

#if OS_Q_POST_EN > 0u
#endif

#if OS_Q_POST_FRONT_EN > 0u
#endif

#if OS_Q_POST_OPT_EN > 0u
#endif

#if OS_Q_QUERY_EN > 0u
#endif

#if OS_MAX_QS == 1u
#endif

#if OS_MAX_QS >= 2u
#endif

#if OS_APP_HOOKS_EN > 0u
#endif

#if OS_SEM_ACCEPT_EN > 0u
#endif

#if OS_SEM_DEL_EN > 0u
#endif

#if OS_SEM_PEND_ABORT_EN > 0u
#endif

#if OS_SEM_QUERY_EN > 0u
#endif

#if OS_SEM_SET_EN > 0u
#endif

#if OS_SEM_EN > 0u
#endif

#if OS_TASK_CHANGE_PRIO_EN > 0u
#endif

#if OS_TASK_CREATE_EN > 0u
#endif

#if (OS_TASK_STAT_STK_CHK_EN > 0u)
#endif

#if OS_TASK_CREATE_EXT_EN > 0u
#endif

#if OS_TASK_SUSPEND_EN > 0u
#endif

#if OS_TASK_QUERY_EN > 0u
#endif

#if OS_TASK_DEL_EN > 0u
#else
#endif

#if OS_TIME_DLY_HMSM_EN > 0u
#endif

#if OS_TIME_DLY_RESUME_EN > 0u
#endif

#if OS_TMR_CFG_NAME_EN > 0u
#endif

#if OS_TMR_EN > 0u && OS_TMR_CFG_NAME_EN > 0u
#endif

#ifndef DAL_NATIVE_H
#endif

#ifndef OS_CFG_H
#endif

#ifdef OS_CPU_GLOBALS
#else
#endif

#ifndef OS_CPU_FPU_EN
#endif

#if OS_CPU_INT_DIS_MEAS_EN > 0
#else
#endif

#if OS_CRITICAL_METHOD == 3
#endif

#ifndef OS_CPU_H
#endif

#ifdef OS_GLOBALS
#else
#endif

#ifndef OS_FALSE
#endif

#ifndef OS_TRUE
#endif

#if OS_TASK_STAT_EN > 0u
#else
#endif

#if OS_FLAGS_NBITS == 8u
#endif

#if OS_FLAGS_NBITS == 16u
#endif

#if OS_FLAGS_NBITS == 32u
#endif

#if OS_Q_EN > 0u
#endif

#if (OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u)
#endif

#if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)) || (OS_MBOX_EN > 0u)
#endif

#if (OS_EVENT_NAME_EN > 0u)
#endif

#if (OS_FLAG_EN > 0u) && (OS_FLAG_NAME_EN > 0u)
#endif

#if (OS_EVENT_NAME_EN > 0u) || (OS_FLAG_NAME_EN > 0u) || (OS_MEM_NAME_EN > 0u) || (OS_TASK_NAME_EN > 0u)
#endif

#if OS_TASK_SW_HOOK_EN > 0u
#endif

#if OS_MAX_FLAGS > 65500u
#endif

#ifndef OS_MAX_FLAGS
#else
#endif

#ifndef OS_FLAGS_NBITS
#endif

#ifndef OS_FLAG_WAIT_CLR_EN
#endif

#ifndef OS_FLAG_ACCEPT_EN
#endif

#ifndef OS_FLAG_DEL_EN
#endif

#ifndef OS_FLAG_NAME_EN
#endif

#ifndef OS_FLAG_QUERY_EN
#endif

#ifndef OS_FLAG_EN
#else
#endif

#ifndef OS_MBOX_ACCEPT_EN
#endif

#ifndef OS_MBOX_DEL_EN
#endif

#ifndef OS_MBOX_PEND_ABORT_EN
#endif

#ifndef OS_MBOX_POST_EN
#endif

#ifndef OS_MBOX_POST_OPT_EN
#endif

#ifndef OS_MBOX_QUERY_EN
#endif

#ifndef OS_MBOX_EN
#else
#endif

#if OS_MAX_MEM_PART > 65500u
#endif

#ifndef OS_MAX_MEM_PART
#else
#endif

#ifndef OS_MEM_NAME_EN
#endif

#ifndef OS_MEM_QUERY_EN
#endif

#ifndef OS_MEM_EN
#else
#endif

#ifndef OS_MUTEX_ACCEPT_EN
#endif

#ifndef OS_MUTEX_DEL_EN
#endif

#ifndef OS_MUTEX_QUERY_EN
#endif

#ifndef OS_MUTEX_EN
#else
#endif

#if OS_MAX_QS > 65500u
#endif

#ifndef OS_MAX_QS
#else
#endif

#ifndef OS_Q_ACCEPT_EN
#endif

#ifndef OS_Q_DEL_EN
#endif

#ifndef OS_Q_FLUSH_EN
#endif

#ifndef OS_Q_PEND_ABORT_EN
#endif

#ifndef OS_Q_POST_EN
#endif

#ifndef OS_Q_POST_FRONT_EN
#endif

#ifndef OS_Q_POST_OPT_EN
#endif

#ifndef OS_Q_QUERY_EN
#endif

#ifndef OS_Q_EN
#else
#endif

#ifndef OS_SEM_ACCEPT_EN
#endif

#ifndef OS_SEM_DEL_EN
#endif

#ifndef OS_SEM_PEND_ABORT_EN
#endif

#ifndef OS_SEM_QUERY_EN
#endif

#ifndef OS_SEM_SET_EN
#endif

#ifndef OS_SEM_EN
#else
#endif

#if OS_MAX_TASKS < 2u
#endif

#if OS_MAX_TASKS > ((OS_LOWEST_PRIO - OS_N_SYS_TASKS) + 1u)
#endif

#ifndef OS_MAX_TASKS
#else
#endif

#if OS_LOWEST_PRIO > 254u
#endif

#ifndef OS_TASK_IDLE_STK_SIZE
#endif

#ifndef OS_TASK_STAT_EN
#endif

#ifndef OS_TASK_STAT_STK_SIZE
#endif

#ifndef OS_TASK_STAT_STK_CHK_EN
#endif

#ifndef OS_TASK_CHANGE_PRIO_EN
#endif

#ifndef OS_TASK_CREATE_EN
#endif

#ifndef OS_TASK_CREATE_EXT_EN
#endif

#ifndef OS_TASK_DEL_EN
#endif

#ifndef OS_TASK_NAME_EN
#endif

#ifndef OS_TASK_SUSPEND_EN
#endif

#ifndef OS_TASK_QUERY_EN
#endif

#if OS_TASK_REG_TBL_SIZE > 255u
#endif

#ifndef OS_TASK_REG_TBL_SIZE
#else
#endif

#ifndef OS_TICKS_PER_SEC
#endif

#ifndef OS_TIME_DLY_HMSM_EN
#endif

#ifndef OS_TIME_DLY_RESUME_EN
#endif

#ifndef OS_TIME_GET_SET_EN
#endif

#if OS_SEM_EN == 0u
#endif

#if OS_TMR_CFG_MAX < 2u
#endif

#if OS_TMR_CFG_MAX > 65500u
#endif

#ifndef OS_TMR_CFG_MAX
#else
#endif

#if OS_TMR_CFG_WHEEL_SIZE < 2u
#endif

#if OS_TMR_CFG_WHEEL_SIZE > 1024u
#endif

#ifndef OS_TMR_CFG_WHEEL_SIZE
#else
#endif

#ifndef OS_TMR_CFG_NAME_EN
#endif

#ifndef OS_TMR_CFG_TICKS_PER_SEC
#endif

#ifndef OS_TASK_TMR_STK_SIZE
#endif

#ifndef OS_TMR_EN
#elif OS_TMR_EN > 0u
#endif

#ifndef OS_ARG_CHK_EN
#endif

#ifndef OS_CPU_HOOKS_EN
#endif

#ifndef OS_APP_HOOKS_EN
#endif

#ifndef OS_DEBUG_EN
#endif

#ifndef OS_LOWEST_PRIO
#endif

#if OS_MAX_EVENTS > 65500u
#endif

#ifndef OS_MAX_EVENTS
#else
#endif

#ifndef OS_SCHED_LOCK_EN
#endif

#ifndef OS_EVENT_MULTI_EN
#endif

#ifndef OS_TASK_PROFILE_EN
#endif

#ifndef OS_TASK_SW_HOOK_EN
#endif

#ifndef OS_TICK_STEP_EN
#endif

#ifndef OS_TIME_TICK_HOOK_EN
#endif

#if OS_ARG_CHK_EN < 1u
#endif

#ifdef CANTATA
#endif

#ifdef OS_SCHED_LOCK_EN
#endif

#ifdef VSC_VALIDATION_MODE
#endif

#if OS_FLAG_DEL_EN > 0
#endif

#if OS_FLAG_EN > 0u
#endif

#if OS_TASK_EN > 0u
#endif

#if OS_CRITICAL_METHOD != 3u
#endif

#ifdef SAFETY_CRITICAL_RELEASE
#endif

#ifndef OS_uCOS_II_H
#endif

#ifdef FEATURE_HW_BK_MS_RANGE
#endif

#ifdef FEATURE_AMSS_RESTART
#else
#endif

#ifdef FEATURE_HW_BK_MS_RANGE
#else
#endif

#ifdef FEATURE_QUARTZ_20
#else
#endif

#if 0
#else
#endif

#ifdef FEATURE_DAL_DIRECT_MEM_WORKAROUND
#endif

#ifdef FEATURE_DAL_INTERRUPTCONTROLLER_NOT_USED
#endif

#ifndef FEATURE_DAL_INTERRUPTCONTROLLER_NOT_USED
#endif

#if !defined(FEATURE_WORKLOOP_NOT_USED)
#endif

#ifdef FEATURE_DAL_INTERRUPTCONTROLLER_NOT_USED
#else
#endif

#ifdef FEATURE_WORKLOOP_NOT_USED
#else
#endif

#ifndef FEATURE_WORKLOOP_NOT_USED
#endif

#ifdef DAL_MEMORY_REDUCTION
#else
#endif

#ifdef FEATURE_REX_CRIT_SECT_DEBUG
#endif

#ifdef FEATURE_ZREX
#endif

#ifdef FEATURE_SI_STACK_WM
#endif

#ifdef TIMETEST
#endif

#ifdef FEATURE_REX_IPC
#endif

#ifdef FEATURE_DAC_MEMORY_PROTECTION
#endif

#ifdef FEATURE_REX_STAT
#endif

#ifdef FEATURE_REX_PROFILE
#endif

#if defined(FEATURE_STACK_CHECK) && defined(FEATURE_LOG_FUNCTIONS)
#endif

#ifdef FEATURE_REX_APC
#endif

#ifndef REX_KERNEL_STACK_SIZE
#endif

#ifdef FEATURE_ZREX
#else
#endif

#ifdef FEATURE_REX_PROFILE
#else
#endif

#ifdef FEATURE_REX_DPC
#endif

#ifndef REX_MEM_BUFFER_SIZE
#endif

#ifdef FEATURE_REX_DYNA_MEM
#endif

#ifdef REX_DEBUG
#endif

#if definedTIMETEST
#endif

#if definedFEATURE_SOFTWARE_PROFILE
#endif

#ifdef FEATURE_REX_TICK_CONTROL
#endif

#ifdef FEATURE_REX_PC_DUMP
#endif

#ifdef FEATURE_CPU_BASED_FLOW_CONTROL
#endif

#ifdef FEATURE_REX_SYS_SIG
#else
#endif

#if definedFEATURE_REX_SYS_SIG
#elif definedFEATURE_REX_APC
#else
#endif

#ifdef FEATURE_REX_SYS_SIG
#endif

#ifndef MSM5000_IRAM_FWD
#endif

#if defined(FEATURE_REX_IPC)
#endif

#if defined(FEATURE_STACK_CHECK) && defined(FEATURE_LOG_FUNCTIONS)
#else
#endif

#if !defined(T_WINNT)
#endif

#if defined(FEATURE_REX_APC)
#endif

#ifndef MSP_PLATFORM_LTK
#endif

#if definedFEATURE_ZREX && definedFEATURE_ZREX_STACK_DEBUG
#endif

#if !definedT_WINNT
#endif

#if definedFEATURE_REX_SYS_SIG
#endif

#if definedFEATURE_REX_APC
#endif

#if definedFEATURE_REX_PROFILE
#endif

#if definedFEATURE_DS_SOCKETS_BSD
#endif

#if definedFEATURE_REX_CREATE_TASK && !definedFEATURE_ZREX
#endif

#ifdef FEATURE_REX_CREATE_TASK
#endif

#ifdef REX_INTERCEPT_KILL_TASK
#endif

#ifdef REX_INTERCEPT_SELF
#else
#endif

#ifndef FEATURE_ZREX
#else
#endif

#if (definedFEATURE_ZREX && definedFEATURE_REX_CRIT_SECT_DEBUG)
#endif

#ifdef FEATURE_REX_INTERNAL_ACCESS
#endif

#if defined(FEATURE_ZREX)
#endif

#if defined(FEATURE_REX_DYNA_MEM)
#endif

#if defined(T_WINNT) && defined(FEATURE_REX_PROFILE)
#endif

#if definedFEATURE_STACK_CHECK
#endif

#ifdef REX_INTERCEPT_IS_IN_IRQ_MODE
#else
#endif

#ifdef FEATURE_CPU_BASED_FLOW_CONTROL
#else
#endif

#if defined(REX_ASSERT_ENABLE) || defined(T_WINNT)
#endif

#ifdef FEATURE_REX_APC
#else
#endif

#ifdef FEATURE_REX_TICK_CONTROL
#else
#endif

#ifdef FEATURE_REX_EXTENDED_CONTEXT
#else
#endif

#ifdef FEATURE_REX_EXTENDED_TIMER
#else
#endif

#ifdef FEATURE_REX_INTERACTIVE
#else
#endif

#ifdef FEATURE_PROGRESSIVE_BOOT
#endif

#ifdef FEATURE_USE_TIME_VU
#endif

#ifdef FEATURE_USE_TIME_VU
#else
#endif

#ifndef FEATURE_USE_TIME_VU
#endif

#ifdef FEATURE_REX_TIMER_NAME
#endif

#ifdef FEATURE_REX_TIMER_EX
#endif

#ifdef DAL_NATIVE_PLATFORM
#endif

#if defined(FEATURE_REX_PROFILE) && !defined(FEATURE_HIGH_RES_PROFILE) && !defined(FEATURE_REX_PROFILING_GPTIMERS)
#endif

#ifndef FEATURE_REX_PROFILING_SLEEP_COUNTER
#endif

#ifdef REX_INTERCEPT_KILL_TIMER
#endif

#if __cplusplus
#endif

#if (!definedT_WINNT) && (!definedTARGET_OS_SOLARIS)
#else
#endif

#if definedPC_EMULATOR_H && !definedT_REXNT
#elif definedT_WINNT
#elif definedFEATURE_WINCE_OAL
#elif !defined_ARM_ASM_ && (!definedFEATURE_L4 || definedFEATURE_L4_KERNEL)
#endif

#if definedFEATURE_L4 && !defined_ARM_ASM_
#else
#endif

#if definedPC_EMULATOR_H && !definedT_REXNT
#elif definedT_WINNT
#elif !defined_ARM_ASM_ && (!definedFEATURE_L4 || definedFEATURE_L4_KERNEL)
#endif

#if definedFEATURE_L4 && !defined_ARM_ASM_
#elif definedFEATURE_WINCE
strip
#else
#endif

#if defined(FEATURE_ONCRPC) && (defined(FEATURE_MULTIPROCESSOR) || (definedFEATURE_ONCRPC_V2))
#endif

#ifndef FEATURE_REX_APC
#endif

#ifndef FEATURE_REX_DPC
#endif

#ifdef FEATURE_REX_SIGS_EXT
#endif

#ifndef REX_SWM_STACK_SIZE
#endif

#ifdef FEATURE_SOFTWARE_PROFILE
#endif

#ifdef FEATURE_QMUTEX
#endif

#if defined(FEATURE_ZREX) || defined(FEATURE_TREX)
#else
#endif

#if defined(FEATURE_REX_CS)
#endif

#ifdef FEATURE_REX_SIGS_EXT
#else
#endif

#if definedTIMETEST || definedFEATURE_L4 || definedFEATURE_L4_KERNEL
#endif

#ifndef FEATURE_ZREX
#endif

#if definedFEATURE_REX_EXTENDED_CONTEXT
#endif

#ifndef FEATURE_L4
#else
#endif

#if definedFEATURE_ZREX
#endif

#if definedFEATURE_REX_CREATE_TASK || definedFEATURE_ZREX
#endif

#ifdef FEATURE_REX_THREADS
#endif

#ifdef FEATURE_REX_EXTENDED_TIMER
#endif

#if (defined(FEATURE_REX_PROFILE) && defined(FEATURE_CPU_BASED_FLOW_CONTROL))
#endif

#ifdef REX_INTERCEPT
#endif

#ifdef FEATURE_TREX
#else
#endif

#if !defined(PC_EMULATOR_H) || !defined(REX_INTERCEPT)
#endif

#if defined(REX_ASSERT_ENABLE) || (defined(T_WINNT) && defined(_DEBUG))
#else
#endif

#if !definedFEATURE_REX_APC && !definedFEATURE_REX_DPC
#endif

#ifdef FEATURE_REX_STAT
#else
#endif

#if defined(FEATURE_L4) && !defined(FEATURE_USE_TIME_VU)
#endif

#ifdef FEATURE_REX_TRACE
#endif

#ifdef ASSERT
#endif

#ifdef FEATURE_DAC_MEMORY_PROTECTION
#else
#endif

#ifdef TIMETEST
#else
#endif

#ifndef REXARM_H
#endif

#ifdef FEATURE_STACK_CHECK
#endif

#if definedFEATURE_INT_125_FIQ
#endif

#ifdef TIMETEST_PROF
#endif

#ifdef TIMETEST_FUNCS
#endif

#if definedFEATURE_REX_STAT
#endif

#if defined(FEATURE_REX_TRACE) && !defined(BUILD_BOOT_CHAIN)
#endif

#if defined(FEATURE_USE_TIME_VU) && defined(FEATURE_REX_PROFILE)
#endif

#if defined(FEATURE_LOG_FUNCTIONS)
#else
#endif

#if defined(FEATURE_LOG_FUNCTIONS)
#endif

#if definedTIMETEST_PROF
#endif

#if (definedTIMETEST_NO_ISRS) && (definedTIMETEST_EXPLICIT_TRIGGER)
#endif

#ifdef TIMETEST_INV_TRIGGER
#else
#endif

#if ((definedTIMETEST) && (!definedTIMETEST_PROF)) || ((definedTIMETEST_PROF) && (definedTIMETEST_NO_ISRS))
#else
#endif

#if defined(FEATURE_STACK_CHECK)
#endif

#ifdef TIMETEST_EXPLICIT_TRIGGER
#endif

#if (definedTIMETEST_PROF) && (!definedTIMETEST_NO_ISRS)
#endif

#if definedFEATURE_REX_PC_DUMP
#endif

#if ((definedTIMETEST) && (!definedTIMETEST_PROF)) || ((definedTIMETEST_PROF) && (definedTIMETEST_NO_ISRS))
#endif

#ifdef __APCS_INTERWORK
#else
#endif

#ifndef TIMETEST_NO_TASKS
#endif

#if definedTIMETEST_FUNCS
#endif

#if definedTIMETEST_PROF
#else
#endif

#ifdef FEATURE_LOG_FUNCTIONS
#else
#endif

#ifdef NO_STDLIB_STKOVF
#endif

#ifndef WCN_WORKLOOP_MAX_COUNT
#endif

#ifndef WCN_HEAP_SIZE
#endif

#if (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_NONE)
#elif (DAL_CONFIG_MMU_SCHEME == DAL_CONFIG_MMU_SCHEME_MULTITHREADED_OS)
#endif

#ifndef WCN_WORKLOOP_STACK_SIZE
#endif

#ifndef structof
#endif

#ifndef __SYSLIB_H__
#endif

#if defined(DAL_SYSDRV_BUSYWAIT)
#else
#endif

#ifndef TZOS_HEAP_SIZE
#endif

#if (DALSYS_EVENT_WM_OBJ_SIZE_BYTES > DALSYS_EVENT_OBJ_SIZE_BYTES)
#endif

#if (DALSYS_SYNC_WM_OBJ_SIZE_BYTES > DALSYS_SYNC_OBJ_SIZE_BYTES)
#endif

#ifndef OAL_HEAP_SIZE
#endif

#ifndef __DDISAMPLE_H__
#endif

#ifndef __DALISIM_H__
#endif

#ifndef _DALREMOTE_H
#endif

#ifndef FEATURE_WINCE
#endif

#ifndef DALREMOTE_DO_NOT_USE_SMD
#else
#endif

#ifdef DALREMOTE_USE_SMDL
#else
#endif

#ifndef DAL < driver > _H
#endif

#ifdef SMD_APPS_PROC
#else
#endif

#ifdef SMD_MODEM_PROC
#else
#endif

#ifdef FEATURE_HS_USB
#endif

#if defined(IMAGE_APPS_PROC) && defined(FEATURE_DATA_QMI)
#endif

#ifdef FEATURE_DSM_LARGE_ITEMS
#endif

#ifdef IMAGE_APPS_PROC
#else
#endif

#ifdef FEATURE_SMD_PORT_MGR
#else
#endif

#ifdef FEATURE_SMD_PORT_MGR
#endif

#if defined(FEATURE_DATA_QMI)
#endif

#ifdef FEATURE_SMD_BRIDGE
#else
#endif

#ifdef FEATURE_SMD_BRIDGE
#endif

#ifndef FEATURE_DSM_WM_CB
#endif

#ifdef IMAGE_MODEM_PROC
#endif

#ifdef IMAGE_APPS_PROC
#endif

#ifdef IMAGE_MODEM_PROC
#elif IMAGE_APPS_PROC
#endif

#ifdef FEATURE_USB_USE_DMOV_REV1
#else
#endif

#ifdef DSM_PRIORITY
#endif

#ifdef FEATURE_DSM_IOV_FILL
#else
#endif

#ifdef FEATURE_SMD
#endif

#ifdef DSM_FLEXIBLE_LARGE_ITEM_THRESHOLD
#else
#endif

#ifdef SMD_INTERNAL_LOG_EVENTS
#else
#endif

#ifdef FEATURE_SMD
#else
#endif

#ifdef SMD_MAIN_LOG_EVENTS
#else
#endif

#ifdef SMD_MAIN_LOG_EVENTS
#endif

#ifndef FEATURE_SMD
#endif

#ifdef SMD_MEMCPY_FILTER_EVENTS
#elif defined(SMD_MEMCPY_LOG_EVENTS)
#else
#endif

#ifdef BIGENDIAN
#else
#endif

#if defined(FEATURE_QDSP6)
#endif

#if !defined(FEATURE_QDSP6)
#else
#endif

#ifndef FEATURE_QDSP6
#endif

#ifndef IMAGE_DSPS_PROC
#endif

#ifdef FEATURE_SMD_UNIT_TEST
#endif

#ifndef SMD_BRIDGE_H
#endif

#ifdef IMAGE_MODEM_PROC
#else
#endif

#ifndef SMD_BRIDGE_TARGET_H
#endif

#ifndef SMD_DMOV_H
#endif

#ifndef SMD_DSM_H
#endif

#ifndef SMD_DSM_V_H
#endif

#ifndef SMD_DSMI_H
#endif

#if SMD_NUM_IF_SIGS != 8
#endif

#ifndef SMD_INTERNAL_H
#endif

#ifndef SMD_MAIN_H
#endif

#ifndef SMD_MEMCPY_H
#endif

#if defined(SMD_32BIT)
#elif defined(SMD_64BIT)
#else
#endif

#ifndef _SMD_MULTIBYTE_COPY_H_
#endif

#ifdef ERR_FATAL
#endif

#ifndef SMD_OS_H
#endif

#ifndef SMD_OS_COMMON_H
#endif

#ifndef SMD_PACKET_H
#endif

#ifndef SMD_SIO_H
#endif

#ifndef SMD_SIO_INTERNAL_H
#endif

#if defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_APPS_PROC)
#elif defined(FEATURE_QDSP6)
#else
#endif

#ifndef SMD_SIO_TARGET_H
#endif

#ifndef _SMD_SPS_H_
#endif

#ifdef TRAMP_HAS_SEND_INTERRUPT
#else
#endif

#if defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_APPS_PROC)
#elif defined(IMAGE_QDSP6_PROC)
#elif defined(IMAGE_DSPS_PROC)
#else
#endif

#ifdef IMAGE_QDSP6_PROC
#endif

#ifdef IMAGE_DSPS_PROC
#endif

#ifndef SMD_TARGET_H
#endif

#if !defined(SMD_NUM_CHANNELS)
#endif

#ifndef SMD_V_H
#endif

#ifndef SMD_WM_H
#endif

#ifndef SMDL_LOGLEVEL
#endif

#if !defined(SMEM_Q6FW_PROC)
#else
#endif

#ifndef SMDL_DEBUG_H
#endif

#ifndef SMDL_ECHO_H
#endif

#ifndef SMDL_PROFILE_H
#endif

#ifdef FEATURE_QNX
#endif

#if defined(FEATURE_QNX)
#else
#endif

#if !defined(FEATURE_QDSP6)
#endif

#ifdef FEATURE_QDSP6
#else
#endif

#ifndef IMAGE_DSPS_PROC
#else
#endif

#ifndef _SMEM_ANON_H_
#endif

#ifndef SMEM_DIAG_H
#endif

#ifndef SMEM_EXT_H
#endif

#ifdef SMEM_APPS_PROC
#elif defined(SMEM_MODEM_PROC)
#else
#endif

#ifndef SMEM_LOG_V_H
#endif

#ifdef T_MDM9X00
#endif

#ifndef SMSM_REX_H
#endif

#ifndef _SMEM_PC_INTERNAL_H_
#endif

#if defined(FEATURE_WINCE) && (QC_WINCE_VERSION < 700)
strip
#endif

#if !(definedFEATURE_WINCE_OAL) && !(definedFEATURE_WINCE_BOOTLOADER)
#endif

#if (definedFEATURE_WINCE_OAL) || (definedFEATURE_WINCE_BOOTLOADER)
#elif defined(FEATURE_QDSP6)
#elif defined(IMAGE_DSPS_PROC)
#else
#endif

#if (defined(IMAGE_APPS_PROC) || defined(IMAGE_MODEM_PROC) || defined(IMAGE_DSPS_PROC))
#elif defined(FEATURE_QDSP6)
#else
#endif

#if defined(FEATURE_WINCE) && !defined(FEATURE_WINCE_BOOTLOADER)
strip
#else
#endif

#if defined(TRAMP_HAS_SEND_INTERRUPT)
#else
#endif

#if defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_APPS_PROC)
#elif defined(IMAGE_QDSP6_PROC)
#endif

#if defined(IMAGE_APPS_PROC)
#elif defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_QDSP6_PROC)
#else
#endif

#ifndef SMEM_8600_H
#endif

#ifndef _SMEM_V_H_
#endif

#if defined(FEATURE_WINCE_OAL)
#elif defined(FEATURE_WINCE_BOOTLOADER)
#elif defined(FEATURE_WINCE)
strip
#elif defined(FEATURE_QUARTZ_ENV)
#elif defined(FEATURE_QDSP6)
#elif defined(FEATURE_COSIM)
#elif defined(APPSBL) || defined(SBL_APPS_BOOT_LOADER_LIB)
#elif defined(QCSBL) || defined(OEMSBL) || defined(DBL) || defined(FSBL) || defined(OSBL)
#elif defined(SMEM_APPS_PROC)
#elif defined(SMEM_MODEM_PROC)
#elif defined(IMAGE_DSPS_PROC)
#else
#endif

#ifndef _SMEM_VERSION_H_
#endif

#ifndef SMSM_INTERNAL_H
#endif

#ifndef SMSM_V_H
#endif

#ifndef SPINLOCK_H
#endif

#ifndef SPINLOCK_CS_H
#endif

#ifdef _ARM_ASM_
#else
#endif

#if defined(FEATURE_QDSP6)
#elif defined(FEATURE_SPINLOCK) && defined(FEATURE_ARM_ASM_SPINLOCK)
#else
#endif

#ifndef SPINLOCKARM_H
#endif

#ifndef BSP_MPM_H
#endif

#ifndef HALMPM_H
#endif

#ifndef HALMPMINT_H
#endif

#ifndef HALMPMINT8660_H
#endif

#ifndef HAL_MPM_INTERNAL_H
#endif

#ifndef HAL_MPMINT_INTERNAL_H
#endif

#ifndef HAL_MPM_PLATFORM_H
#endif

#ifndef MAO_H
#endif

#ifndef MAOINT_H
#endif

#ifndef MPM_H
#endif

#ifndef MPMINT_H
#endif

#ifndef VMPM_H
#endif

#ifndef VMPMI_H
#endif

#ifndef NPA_PROC_COMM_H
#endif

#ifndef NPA_REMOTE_RPC_H
#endif

#ifndef NPA_REMOTE_RPC_PROTOCOL_H
#endif

#ifndef NPA_REMOTE_RPM_PROTOCOL_H
#endif

#ifndef NPA_REMOTE_IOCTL_PROTOCOL_H
#endif

#if defined(FEATURE_WINCE) || defined(__ARMCC_VERSION)
#else
#endif

#ifndef FEATURE_SYNC_REQUESTS_ONLY
#endif

#ifdef FEATURE_SYNC_EVENTS_ONLY
#else
#endif

#ifdef FEATURE_SYNC_REQUESTS_ONLY
#else
#endif

#ifdef NPA_SELF_TEST
#endif

#ifndef FEATURE_WINCE_OAL
#endif

#ifndef NPA_CONFIG_H
#endif

#ifdef NPA_NO_LOG_CREATE
#else
#endif

#ifdef NPA_NO_LOG_REQUEST
#else
#endif

#ifdef NPA_REMOTE_SELF_TEST
#endif

#ifndef RPM_TARGET_LAYOUT_H
#endif

#ifndef SLEEP_EVENTS_H
#endif

#ifndef SLEEP_LPR_H
#endif

#ifndef SLEEP_V_H
#endif

#ifndef FEATURE_SLEEP_NO_WAKEUP_NODE
#endif

#if !defined(FEATURE_SLEEP_NO_WAKEUP_NODE) && !defined(FEATURE_SLEEP_NO_LATENCY_NODE)
#endif

#ifndef FEATURE_SLEEP_NO_LATENCY_NODE
#endif

#ifndef SLEEP_CONFIG_H
#endif

#ifndef SLEEP_LOG_H
#endif

#ifndef SLEEP_LOG_IDEFS_H
#endif

#ifndef SLEEP_LPRI_H
#endif

#ifndef SLEEPI_H
#endif

#ifndef FEATURE_SLEEP_NO_SYNTHESIS
#endif

#ifndef SLEEP_COMPILER_H
#endif

#ifndef CLPR_H
#endif

#ifndef CLPRM_H
#endif

#ifndef CLPRREGISTRY_H
#endif

#ifndef SLEEP_CLIENT_H
#endif

#ifndef __SLEEP_LIST_H
#endif

#ifndef DEBUG_SOLVER_H
#endif

#ifndef LEGACY_SOLVER_H
#endif

#ifndef SINGLE_LPR_SOLVER_H
#endif

#ifndef FEATURE_SLEEP_NO_SYNTHESIS
#else
#endif

#ifndef SLEEP_SOLVER_H
#endif

#ifndef ULOGDIAGFORMAT_H
#endif

#ifndef BUILDFEATURES_H
#endif

#if defined(ULOG_BACKEND_PKG_FULL)
#elif defined(ULOG_BACKEND_PKG_NONE)
#endif

#ifndef BUILDFEATURES_PKGS_H
#endif

#ifndef ULOGDIAG_PROC_H
#endif

#ifndef DEFEATURE_ULOG_ALLOCATE
#endif

#ifdef ULOG_LOW_MEM
#else
#endif

#ifndef DEFEATURE_ULOG_MSG_FORMAT
#endif

#ifndef DEFEATURE_ULOG_FRONT_RAW
#endif

#ifdef DEFEATURE_ULOG_TEE
#else
#endif

#ifndef DEFEATURE_ULOG_TEE
#endif

#ifndef DEFEATURE_ULOG_FRONT_REALTIME
#endif

#ifndef DEFEATURE_ULOG_LIST
#endif

#ifndef WIN_DEBUGGER_EXTENSION
#endif

#ifdef WIN_DEBUGGER_EXTENSION
strip
#endif

#ifdef WIN_DEBUGGER_EXTENSION
strip
#else
#endif

#ifndef DEFEATURE_ULOG_READ
#endif

#ifdef ULOG_PKG_ALTERNATE_STUB
#endif

#ifdef ULOG_PKG_ALTERNATE
#endif

#ifndef ULOGCOREINTERNAL_H
#endif

#ifndef ULOGPARSERS_H
#endif

#if defined(ULOG_PKG_FULL)
#elif defined(ULOG_PKG_SMALL)
#endif

#ifndef STDARG_H
#endif

#if defined(USES_BLAST) || defined(FEATURE_BLAST)
#else
#endif

#ifndef COREATOMICOPS_H
#endif

#ifndef CORE_EVENT_NOTIFICATION_H
#endif

#if (__ARMCC_VERSION < 300000) && !defined(__RVCT_CLZ_H__)
#endif

#ifndef COREINTRINSICS_H
#endif

#ifndef CORELIST_H
#endif

#ifndef COREOPAQUEHANDLE_H
#endif

#ifndef CORE_POOL_H
#endif

#ifndef COREREFERNCE_H
#endif

#if defined(WINSIM) || defined(WIN_DEBUGGER_EXTENSION)
strip
#elif defined(__GNUC__)
#else
#endif

#ifndef CORE_STRING_H
#endif

#ifdef USES_BLAST
#elif (defined(WINSIM) || defined(WIN_DEBUGGER_EXTENSION))
strip
#elif defined(TARGET_UEFI)
#elif !defined(FEATURE_POWER_UTIL_DAL_TIMETICK)
#endif

#ifdef TARGET_UEFI
#elif definedUSES_BLAST
#elif (defined(WINSIM) || defined(WIN_DEBUGGER_EXTENSION))
strip
#elif defined(FEATURE_POWER_UTIL_DAL_TIMETICK)
#else
#endif

#ifndef CORE_TIME_H
#endif

#ifndef TARGET_UEFI
#endif

#ifndef ERR_FATAL
#endif

#ifdef USES_BLAST
#endif

#ifdef WINSIM
strip
#elif defined(TARGET_UEFI)
#else
#endif

#ifdef FEATURE_CORE_LOW_MEM
#else
#endif

#ifndef COREVERIFY_H
#endif

#ifndef COREWORKCONTAINER_H
#endif

#ifndef COREWORKQUEUE_H
#endif

#ifndef MEMBARRIER_H
#endif

#ifndef Q6_COREATOMICOPS_H
#endif

#ifndef USES_BLAST
#endif

#ifdef TARGET_UEFI
#elif defined(FEATURE_POWER_UTIL_DAL_TIMETICK)
#endif

#ifndef FEATURE_NO_WORKLOOPS
#endif

#ifndef CORE_FILE_H
#endif

#ifndef SENSOR1_H_
#endif

#ifndef SNS_COMMON_SERVICE_H
#endif

#ifndef SNS_DEBUG_SVC_SERVICE_H
#endif

#ifndef SNS_DIAG_DSPS_SVC_SERVICE_H
#endif

#ifndef SNS_REG_SVC_SERVICE_H
#endif

#ifndef SNS_SAM_AMD_SVC_SERVICE_H
#endif

#ifndef SNS_SAM_BTE_SVC_SERVICE_H
#endif

#ifndef SNS_SAM_FNS_SVC_SERVICE_H
#endif

#ifndef SNS_SAM_QMD_SERVICE_H
#endif

#ifndef SNS_SAM_RMD_SVC_SERVICE_H
#endif

#ifndef SNS_SAM_VMD_SVC_SERVICE_H
#endif

#ifndef SNS_SMGR_SVC_SERVICE_H
#endif

#ifdef SNS_DSPS_PROFILE_ON
strip
#endif

#ifndef SNS_DSPS_PROFILE_C
#endif

#ifndef SNS_PM_SVC_SERVICE_H
#endif

#ifdef SNS_DSPS_BUILD
#endif

#if defined(SNS_LA_SIM) || defined(SNS_PCSIM) || defined(SNS_MDM_SIM)
strip
#else
#endif

#ifdef SNS_SMGR_UNIT_TEST
strip
#elif defined(SNS_REG_TEST)
strip
#elif defined(SNS_PCSIM) || defined(SNS_LA_SIM)
strip
#else
#endif

#if defined(SNS_PCSIM)
strip
#else
#endif

#if defined(SNS_LA_SIM) || defined(SNS_PCSIM)
strip
#endif

#ifdef SNS_SMGR_UNIT_TEST
strip
#endif

#ifdef SNS_REG_TEST
strip
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#else
#endif

#if defined(SNS_LA_SIM) || (SNS_PCSIM) || (SNS_MDM_SIM)
strip
#elif defined(SNS_LA)
strip
#elif defined(SNS_DSPS_BUILD)
#elif defined(SNS_BLAST)
strip
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_DSPS_BUILD)
#else
#endif

#ifdef SNS_SMR_C
#endif

#ifndef SNS_COMMON_H
#endif

#ifndef SNS_DEBUG_API_H
#endif

#ifndef _SNS_EM_H
#endif

#ifndef _SNS_FSA_H_
#endif

#ifdef FEATURE_MSM8960
#else
#endif

#if defined(ENABLE_APPS_PLAYBACK)
#else
#endif

#if defined(DAL_UCOS_TEST)
strip
#elif defined(SNS_DSPS) || defined(SNS_DSPS_BUILD)
#elif defined(SNS_PCSIM)
strip
#elif defined(SNS_LA)
strip
#elif defined(SNS_BLAST)
strip
#elif defined(SNS_LA_SIM)
strip
#endif

#ifdef DAL_UCOS_TEST
strip
#endif

#ifdef FEATURE_MSM8960
#endif

#ifndef _SNS_INIT_H_
#endif

#ifndef SNS_LOG_API_H
#endif

#ifdef SNS_PCSIM
strip
#endif

#ifndef DSPS_RPM_SUPPORT
#else
#endif

#ifndef SNS_LOG_TYPES_H
#endif

#if defined(SNS_PCSIM) || defined(SNS_LA) || defined(SNS_LA_SIM) || defined(SNS_BLAST)
strip
#else
#endif

#ifndef _SNS_OSA_H_
#endif

#ifndef _SNS_REG_COMMON_H_
#endif

#ifndef SNS_SVC_H
#endif

#if defined(_MSC_VER) && _MSC_VER <= 1500
#endif

#ifndef __bool_true_false_are_defined
#endif

#ifndef STDBOOL_H
#endif

#ifndef CIRCULAR_BUFFER_H
#endif

#ifndef FX_IIR_H
#endif

#ifndef REL_REST_H
#endif

#ifndef SPI_H
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#else
#endif

#ifndef SNS_SAM_PRIV_H
#endif

#ifdef SNS_SAM_DEBUG
#else
#endif

#ifndef SNS_SMR_H
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#elif defined(SNS_SMR_EXTRA_DEBUG)
strip
#else
#endif

#ifdef SMR_PRIORITY_QUE_ON
#else
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_LA)
#endif

#if defined(SNS_LA) && defined(SNS_SMR_EXTRA_DEBUG)
strip
#endif

#if defined(SNS_DSPS_BUILD)
#elif defined(SNS_LA)
strip
#else
#endif

#ifdef SNS_DEBUG
#endif

#if defined(SNS_DSPS_BUILD)
#elif defined(SNS_LA)
strip
#endif

#ifdef SMR_ENCODE_ON
#endif

#ifdef SMR_ENCODE_ON
#else
#endif

#if SNS_LA
strip
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#endif

#if defined(SNS_LA)
strip
#else
#endif

#ifndef SNS_SMR_C
#endif

#ifdef SNS_SMR_EXTRA_DEBUG
strip
#else
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#elif defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_APPS_WM_BUILD)
#endif

#ifndef SNS_SMR_PRIV_H
#endif

#ifdef _WIN32
#endif

#ifndef FIXED_POINT_H
#endif

#ifndef MATRIX_H
#endif

#ifdef CODE_PROFILING
#else
#endif

#if defined(MEMMGR_DEBUG) || defined(OI_DEBUG)
strip
#else
#endif

#ifndef USE_NATIVE_MALLOC
#endif

#ifndef MEMMGR_CONFIG
#endif

#ifdef OI_DEBUG
strip
#else
#endif

#ifndef _OI_ASSERT_H
#endif

#ifndef _OI_COMMON_H
#endif

#if OI_CPU_TYPE == OI_CPU_X86
#endif

#if defined(_LIT)
#elif defined(_BIG)
#else
#endif

#if OI_CPU_TYPE == OI_CPU_SH3
#endif

#if OI_CPU_TYPE == OI_CPU_SH2
#endif

#if OI_CPU_TYPE == OI_CPU_H8
#endif

#if OI_CPU_TYPE == OI_CPU_MIPS
#endif

#if OI_CPU_TYPE == OI_CPU_SPARC
#endif

#if OI_CPU_TYPE == OI_CPU_M68000
#endif

#if OI_CPU_TYPE == OI_CPU_PPC
#endif

#if OI_CPU_TYPE == OI_CPU_SH4_7750
#endif

#if OI_CPU_TYPE == OI_CPU_ARM7_LEND
#endif

#if OI_CPU_TYPE == OI_CPU_ARM7_BEND
#endif

#if OI_CPU_TYPE == OI_CPU_GDM1202
#endif

#if OI_CPU_TYPE == OI_CPU_ARC_LEND
#endif

#if OI_CPU_TYPE == OI_CPU_ARC_BEND
#endif

#if OI_CPU_TYPE == OI_CPU_M30833F
#endif

#if OI_CPU_TYPE == OI_CPU_CR16C
#endif

#if OI_CPU_TYPE == OI_CPU_M64111
#endif

#if OI_CPU_TYPE == OI_CPU_ARMV5_LEND
#endif

#if OI_CPU_TYPE == OI_CPU_ARM9_LEND
#endif

#if OI_CPU_TYPE == OI_CPU_ARM11_LEND
#endif

#ifndef _OI_CPU_DEP_H
#endif

#ifdef __SNS_MODULE__
#else
#endif

#if defined(OI_DEBUG) || defined(OI_ENABLE_SLOG_ERROR)
#else
#endif

#if defined(OI_DEBUG) || defined(OI_ENABLE_SLOG_WARNING)
#else
#endif

#if defined(OI_SUPPRESS_SLOG_ERROR)
#else
#endif

#if defined(OI_DEBUG) || defined(OI_ENABLE_TRACE) || defined(OI_ENABLE_TRACE_USER)
#else
#endif

#if defined(OI_DEBUG) || defined(OI_ENABLE_DBG_PRINT) || defined(OI_ENABLE_DBG_PRINT1)
#else
#endif

#if defined(OI_DEBUG) || defined(OI_ENABLE_DBG_PRINT) || defined(OI_ENABLE_DBG_PRINT2)
#else
#endif

#if defined(OI_DEBUG) && !defined(OI_ENABLE_SLOG_ERROR)
strip
#endif

#if defined(OI_DEBUG) && !defined(OI_ENABLE_SLOG_WARNING)
strip
#endif

#if !defined(OI_DEBUG) && (defined(OI_ENABLE_SLOG_ERROR) || defined(OI_ENABLE_SLOG_WARNING) || defined(OI_ENABLE_TRACE) || defined(OI_ENABLE_TRACE_USER) || defined(OI_ENABLE_DBG_PRINT) || defined(OI_ENABLE_DBG_PRINT1) || defined(OI_ENABLE_DBG_PRINT2))
#endif

#if defined(OI_DEBUG)
strip
#else
#endif

#ifndef _OI_DEBUG_H
#endif

#ifdef MEMMGR_PROFILE
strip
#else
#endif

#ifdef MEMMGR_DEBUG
strip
#else
#endif

#ifndef _OI_DUMP_H
#endif

#ifdef USE_NATIVE_MALLOC
#endif

#ifndef SMALL_MEMORY
#endif

#ifdef OI_DEBUG
strip
#endif

#ifdef USE_NATIVE_MALLOC
#else
#endif

#ifndef OI_REENTRANT
#endif

#ifndef _MEMMGR_H
#endif

#ifndef _MEMPROF_H
#endif

#ifndef _OI_MODULES_H
#endif

#ifndef _OI_STATUS_H
#endif

#ifndef _UTILS_H
#endif

#ifdef NULL
#endif

#ifdef HEW_TOOLCHAIN
#else
#endif

#ifndef OI_ARRAYSIZE
#endif

#ifndef BIT0
#endif

#ifndef OI_STDDEFS_H
#endif

#if defined(USE_NATIVE_MEMCPY) || defined(USE_NATIVE_MALLOC)
#endif

#ifndef USE_NATIVE_MEMCPY
#endif

#ifdef USE_NATIVE_MEMCPY
#else
#endif

#ifndef OI_STRING_H
#endif

#ifndef _OI_SUPPORT_INIT_H
#endif

#ifndef _OI_UTILS_H
#endif

#if SNS_DEBUG == 1
#elif SNS_DEBUG == 2
#endif

#if SNS_DEBUG == 0
#else
#endif

#ifndef SNS_MEMMGR_H
#endif

#ifdef SMALL_RAM_MEMORY
#else
#endif

#ifdef MEMMGR_DEBUG
strip
#endif

#ifdef MEMMGR_PROFILE
strip
#endif

#ifdef OI_REENTRANT
#endif

#ifdef SNIFFLOG
#endif

#ifdef OI_REENTRANT
#else
#endif

#if defined(OI_DEBUG) || defined(OI_DEBUG_PER_MOD)
#endif

#ifndef OI_DEBUG
#endif

#if SNS_DEBUG > 0
#endif

#ifndef MEMMGR_DEBUG
#else
strip
#endif

#ifndef USE_NATIVE_MALLOC
#else
#endif

#ifdef FEATURE_Q_NO_SELF_QPTR
#endif

#if defined(FEATURE_Q_SINGLE_LINK) || defined(FEATURE_Q_NO_SELF_QPTR)
#endif

#ifdef FEATURE_Q_SINGLE_LINK
#endif

#ifndef SNS_DD_H
#endif

#ifdef CONFIG_USE_BMA150_CALIB
strip
#endif

#ifdef SNS_PCSIM
strip
#else
#endif

#ifdef FLUID_BUILD
#else
#endif

#ifdef CONFIG_USE_ADXL_CALIB
strip
#endif

#ifdef ADXL350_DEBUG
strip
#endif

#ifdef ADXL350_DEBUG
strip
#else
#endif

#ifndef ARRAY_SIZE
#endif

#ifndef G
#endif

#ifdef ADXL_CHECK_DATA_READY
#endif

#ifdef CONFIG_ADXL_UNIT_TEST
strip
#endif

#ifdef ALSPRX_SDD_TEST
strip
#endif

#ifdef ALSPRX_EN_DISTANCE
#endif

#ifdef ALSPRX_DEBUG_TIMER
strip
#endif

#ifdef ALSPRX_SDD_TEST
strip
#else
#endif

#ifdef ALSPRX_USE_POLLING
#endif

#ifdef ALSPRX_DEBUG_REG
#endif

#ifdef ALSPRX_EN_DISTANCE
#else
#endif

#if ALSPRX_DEBUG_ONE_SENSOR
strip
#endif

#ifdef ALSPRX_DEBUG_BASIC
strip
#endif

#ifdef CONFIG_BMP085_UNIT_TEST
strip
#endif

#ifdef CONFIG_BMP085_UNIT_TEST
strip
#else
#endif

#ifndef SNS_PCSIM
#endif

#ifdef UNIT_TEST_ENABLE
#endif

#ifdef MAG8975_DEBUG
strip
#else
#endif

#ifndef MAG8975_UNIT_TEST
#endif

#ifndef USE_CC41
#endif

#ifdef USE_CC41
#else
#endif

#ifdef MAG8975_UNIT_TEST
strip
#endif

#ifndef __LIS3DH__
#endif

#ifndef __LSM303DLHC__
#endif

#ifndef _ADXL350_H_
#endif

#ifndef MIN_INT16
#endif

#ifndef MAX_INT16
#endif

#ifndef ABS
#endif

#ifndef _SNSDACCELADXLCALIB_H
#endif

#ifndef CONSTRAIN
#endif

#ifndef _SNSDACCELCALIB_H
#endif

#ifndef _SNSDACCELPRIV_H
#endif

#ifndef _SNSDALSPRXPRIV_H
#endif

#ifndef _BMP085_H_
#endif

#ifndef _SNSDGYROPRIV_H
#endif

#ifndef _SNSD_MAG_AKM8975_PRIV_H
#endif

#ifndef _SNSD_MAG_PRIV_H
#endif

#ifndef APP_TEST_ACC
#endif

#ifndef SNS_DDF_DRIVER_ATTRIB_H
#endif

#ifndef SNS_DDF_COMM_H
#endif

#ifndef SNS_DDF_COMMON_H
#endif

#ifndef SNS_DDF_DRIVER_IF_H
#endif

#ifndef SNS_DDF_MEMHANDLER_H
#endif

#ifndef SDDF_SMGR_IF_H
#endif

#ifndef SNS_DDF_UTIL_H
#endif

#ifndef SNS_PCSIM
#else
strip
#endif

#ifndef SNS_DEBUG_STR_H
#endif

#ifndef DAL_UCOS_TEST
#endif

#ifdef ACCEL_SDD_TEST
strip
#endif

#ifdef CORE_SPS_UCOS
#endif

#ifdef ACCEL_SDD_TEST
strip
#else
#endif

#ifdef MAG_SDD_TEST
strip
#endif

#ifndef ALSPRX_BOTH
#endif

#ifdef ALSPRX_BOTH
#else
#endif

#ifndef GYRO_SDD_TEST
#else
strip
#endif

#ifdef GYRO_SDD_TEST
strip
#else
#endif

#ifndef MAG_SDD_TEST
#endif

#ifndef ALSPRX_SDD_TEST
#endif

#ifdef __arm__
#endif

#ifdef CORE_SPS_UCOS
#else
#endif

#ifndef CORE_SPS_UCOS
#endif

#ifdef DALSYS_UCOS_SHIM
#endif

#if OS_FLAG_NAME_EN
#endif

#if OS_FLAG_QUERY_EN
#elif OS_FLAG_ACCEPT_EN
#else
#endif

#if OS_FLAG_DEL_EN
#endif

#ifdef SNS_DSPS_PROFILE_ON
strip
#else
#endif

#ifndef PPSS_H
#endif

#ifdef FEATURE_PPSS_DEBUG
#else
#endif

#ifndef PPSS_ERROR_HANDLER_H
#endif

#ifndef PBL_MC_H
#endif

#ifndef PPSS_RAM_INIT_H
#endif

#ifdef M8660_V2
#else
#endif

#ifdef SNS_SHORTCUT_ENABLED
#else
#endif

#ifndef SNS_PM_H
#endif

#ifdef DSPS_RPM_SUPPORT
#endif

#ifndef SNS_PM_PRIV_H
#endif

#ifdef CONFIG_USE_ADXL
#else
#endif

#ifndef QMD_H
#endif

#ifdef SAM_TEST_ALGO_TOGGLE
strip
#endif

#ifdef SAM_TEST_ALGO_REPORT
strip
#endif

#if defined(SAM_TEST_ALGO_VERSION) || defined(SAM_TEST_ALGO_CANCEL)
strip
#endif

#if definedSAM_TEST_ALGO_ENABLE
strip
#endif

#ifdef SAM_TEST_ALGO_VERSION
strip
#endif

#ifdef SAM_TEST_ALGO_CANCEL
strip
#endif

#ifndef GYRO_CAL_H
#endif

#ifdef SNS_SCM_DEBUG
#else
#endif

#ifndef SNS_SCM_PRIV_H
#endif

#ifndef SNS_SMGR_H
#endif

#ifdef SNS_SMGR_STATIC_MEMORY_OPTION
#endif

#ifdef POWER_STATUS
#endif

#ifdef SNS_SMGR_STATIC_MEMORY_OPTION
#else
#endif

#ifdef CONFIG_USE_ADXL
#endif

#ifndef CONFIG_USE_ADXL
#endif

#ifdef TEST2
strip
#endif

#ifdef TEST3
strip
#endif

#ifdef TEST4
strip
#endif

#ifndef SNS_SMGR_CONFIG_H
#endif

#ifndef SNS_SMGR_DEFINE_H
#endif

#ifdef CONFIG_USE_AKM8975
#else
#endif

#ifdef CONFIG_USE_BMP085
#else
#endif

#ifndef SNS_SMGR_SENSOR_CONFIG_H
#endif

#ifdef SMR_FREERUN_TIMER
#endif

#ifdef LOOPBACK_TEST
strip
#endif

#ifndef SNS_SMR_DSPS_C
#endif

#ifndef BUSYWAIT_H
#endif

#ifdef HWIO_MPSSAHB_PAUSE_TIMER_ADDR
#else
#endif

#if ((defined(BUILD_JNAND) && !defined(BUILD_JNAND_WITH_OEMSBL)) || defined(BUILD_NANDPRG))
#else
#endif

#ifndef FEATURE_LINUX_USERSPACE_APP
#endif

#if !defined(FEATURE_WINCE) || defined(BUILD_EBOOT)
#else
strip
#endif

#ifdef FEATURE_WCDMA
#endif

#ifndef CLK_H
#endif

#ifndef MSG_WINCE_H
#endif

#ifdef FEATURE_UIM1
#else
#endif

#ifdef FEATURE_UIM2
#else
#endif

#ifndef CLKREGIM_BSP_NO_STATIC_INIT
#else
#endif

#ifdef CLKREGIM_BSP_NO_STATIC_INIT
#endif

#ifdef CLKREGIM_STANDALONE
#endif

#if !defined(FEATURE_LINUX_USERSPACE_APP)
#else
#endif

#ifndef FEATURE_WINCE_OAL
#else
#endif

#if defined(FEATURE_WINCE) && !defined(FEATURE_WINCE_BOOTLOADER)
strip
#endif

#ifdef CLKREGIM_HAS_MUTEX
#endif

#ifndef BUILD_BOOT_CHAIN
#endif

#ifdef CLKREGIM_SOURCES_NPA
#endif

#ifdef CLKREGIM_RPM_BSP
#else
#endif

#ifndef __CLKRGM_BSP_H__
#endif

#ifdef FEATURE_WINCE_OAL
#else
#endif

#if defined(IMAGE_QDSP6_PROC)
#elif defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_APPS_PROC)
#endif

#ifndef CLKRGM_COMDEFI_H
#endif

#ifdef CLKREGIM_HAS_LOG
#else
#endif

#ifdef BUILD_BOOT_CHAIN
#else
#endif

#ifndef CLKRGM_LOG_H
#endif

#ifndef CLKRGM_MUTEX_H
#endif

#ifndef CLKRGM_SOURCES_H
#endif

#ifndef __CLKRGMI_DEVMAN_H__
#endif

#ifndef CLKRGMI_RM_H
#endif

#ifndef CLKRGM_MSM_COMDEF_H
#endif

#ifdef CLKREGIM_APPS_HAS_DCVS
#else
#endif

#ifdef FEATURE_WINCE_OAL
#endif

#ifdef CLKREGIM_APPS_HAS_DCVS
#endif

#if defined(FEATURE_L4)
#elif defined(FEATURE_WINCE_OAL)
#endif

#if defined(FEATURE_L4)
#elif defined(FEATURE_WINCE_OAL)
#else
#endif

#ifdef HWIO_SCSS_SAW_STS_ADDR
#endif

#ifndef CLKRGM_APPS_COMDEF_H
#endif

#ifndef CLKRGM_APPS_IOCTL_H
#endif

#ifndef CLKRGM_DRV_H
#endif

#ifndef CLKRGM_DRV_IOCTL_H
#endif

#ifndef CLKRGM_INTF_H
#endif

#ifdef CLKREGIM_MPSS_HAS_MODEM
#endif

#ifdef CLKREGIM_HAS_BIST
#endif

#ifndef BOOT_FLASH_NOR
#endif

#ifndef FEATURE_SMI
#endif

#if defined(FEATURE_NO_DDR) && !defined(BOOT_FLASH_NOR)
#endif

#ifdef CLKREGIM_MPSS_HAS_LINUX
#endif

#ifdef CLKREGIM_HAS_LOG
#endif

#ifndef CLKRGM_MPSS_H
#endif

#ifdef FEATURE_USE_MPM_VDD_MIN_CONTROL
#endif

#ifndef CLKRGM_NPA_RPM_H
#endif

#ifndef CLKRGM_RPMDEF_H
#endif

#ifndef CLKRGM_WCN_COMDEF_H
#endif

#ifdef __ARMCC_VERSION
#endif

#ifndef CLKRGM_AVS_H
#endif

#ifndef CLKRGM_MSMC_H
#endif

#ifndef CLKRGM_NPA_H
#endif

#ifndef CLKRGM_SYS_H
#endif

#if defined(DAL_CONFIG_IMAGE_RPM) || defined(DAL_CONFIG_IMAGE_BOOT)
#endif

#if defined(DAL_CONFIG_IMAGE_APPS) || defined(DAL_CONFIG_IMAGE_BOOT)
#endif

#if defined(DAL_CONFIG_IMAGE_MODEM) || defined(DAL_CONFIG_IMAGE_BOOT)
#endif

#ifndef CLOCKMSS_H
#endif

#ifndef __CLOCKMSSBSP_H__
#endif

#if defined(DAL_CONFIG_IMAGE_RPM)
#endif

#if defined(DAL_CONFIG_IMAGE_APPS)
#endif

#ifndef CLOCKAPPS_H
#endif

#ifndef __CLOCKAPPSBSP_H__
#endif

#if defined(DAL_CONFIG_IMAGE_WCN)
#endif

#if defined(DAL_CONFIG_IMAGE_SPS)
#else
#endif

#ifndef __CLOCKSBL1HWIO_H__
#endif

#ifndef __CLOCKSBL2HWIO_H__
#endif

#ifndef CLOCKWCN_H
#endif

#ifndef __DALCLOCKWCNBSP_H__
#endif

#ifndef __UEFICLOCKTEST_H__
#endif

#ifndef __CLOCKBSP_H__
#endif

#ifdef CLOCK_NPA_STUB
#else
#endif

#ifndef __CLOCKDRIVER_H__
#endif

#ifndef __CLOCKLEGACY_H__
#endif

#ifndef __CLOCKNPASTUB_H__
#endif

#ifndef DALGSBI_H
#endif

#ifndef __HALCLK_H__
#endif

#ifdef USES_HAL_CLK_PROC_RPM
#elif defined(USES_HAL_CLK_PROC_APPS)
#elif defined(USES_HAL_CLK_PROC_MODEM_Q6SW)
#endif

#ifndef __HALCLKCHIPSET_H__
#endif

#ifndef __HALCLKHWIO_H__
#endif

#ifndef __HALCLKHWIOLPA_H__
#endif

#ifndef __HALCLKHWIOMSS_H__
#endif

#ifndef __HALCLKHWIOQ6_H__
#endif

#ifndef __HAL_CLK_TEST_H__
#endif

#ifdef PLL_ENA_MASn_REG
#endif

#ifndef __HALCLKPLLHWIO_H__
#endif

#ifdef USES_HAL_CLK_PROC_RPM
#elif defined(USES_HAL_CLK_PROC_APPS)
#elif defined(USES_HAL_CLK_PROC_MARM)
#endif

#ifndef __HALCLKHWIOMMSS_H__
#endif

#ifndef __HALCLKHWIOSCSS_H__
#endif

#ifndef __HALCLKHWIORIVA_H__
#endif

#ifndef __HALCLKINTERNAL_H__
#endif

#ifndef __HALCLK6615_H__
#endif

#ifndef __HALCLK6695_H__
#endif

#ifndef __HALCLK7600_H__
#endif

#ifndef __HALCLK7625_H__
#endif

#ifndef __HALCLK7627_H__
#endif

#ifndef __HALCLK7630_H__
#endif

#ifndef __HALCLK8200_H__
#endif

#ifndef __HALCLK8200A_H__
#endif

#if defined(USES_HAL_CLK_PROC_APPS)
#endif

#if defined(USES_HAL_CLK_PROC_MARM)
#endif

#ifndef __HALCLK8660CPSS_H__
#endif

#ifndef __HALCLK8660MMSS_H__
#endif

#ifndef __HALCLK8660MPSS_H__
#endif

#ifndef __HALCLK8660RPM_H__
#endif

#ifdef USES_HAL_CLK_PROC_RPM
#endif

#if defined(BUILD_BOOT_CHAIN)
#endif

#ifndef __HALCLK8660_H__
#endif

#ifndef __HALCLK8660PLLHWIO_H__
#endif

#ifndef __HALCLK8660RPMHWIO_H__
#endif

#if HAL_CLK_DBG_CLK_HS_SEL_DBG_LS_CLK_SRC
#endif

#ifndef __HALCLK9X00_H__
#endif

#ifndef HALCLKSTUB_H
#endif

#ifndef HAL_GPIOINT_H
#endif

#ifndef __HAL_HALGPIOINTHWIO_H__
#endif

#ifndef HAL_GPIOINT_INTERNAL_H
#endif

#ifndef HALGSBI_H
#endif

#ifndef HALGSBI6695_H
#endif

#ifndef HAL_IPCINT_H
#endif

#ifdef MSS_BASE
#endif

#ifndef HAL_IPCINT_TYPES_H
#endif

#ifndef HAL_PIC_H
#endif

#ifndef HAL_PIC_INTERNAL_H
#endif

#ifndef HALTLMM_H
#endif

#ifndef HALTLMMI6246_H
#endif

#ifndef HALTLMMICOMMON_H
#endif

#ifndef HALTLMMIPLATFORM_H
#endif

#ifndef HALTLMMI6695_H
#endif

#ifndef HALTLMMI7600_H
#endif

#ifndef HALTLMMI7625_H
#endif

#ifndef HALTLMMI8200A_H
#endif

#ifndef HALTLMMI8650_H
#endif

#ifndef HALTLMMI8650B_H
#endif

#ifndef HALTLMMTARGET_H
#endif

#ifndef HALTLMMI8900_H
#endif

#ifndef HALTLMMI9000_H
#endif

#ifdef MSM_HW_START
#else
#endif

#ifdef HWIO_GLOBAL_BASE_PTRS
#else
#endif

#ifdef HWIO_GLOBAL_BASE_PTRS
#endif

#ifndef DALHWIO_H
#endif

#ifndef DALIPCInt_H
#endif

#ifndef __DALTLMMPROPDEF_H__
#endif

#ifndef __GPIO_BOOT_H__
#endif

#ifndef DALTLMM_H
#endif

#ifndef __DALTLMMSTATE_H__
#endif

#ifdef TRAMP_USE_DEM
#endif

#ifdef TRAMP_USE_MAO
#endif

#ifdef TRAMP_USE_NPA
#endif

#ifndef TIMETEST_ISR_ID
#endif

#ifndef TRAMP_PLATFORM_SUPPORTED_IRQS
#else
#endif

#ifdef TRAMP_USE_LESS_MEMORY
#else
#endif

#ifdef TRAMP_NO_DIAG
#else
#endif

#ifdef FEATURE_TRAMP_LOG
#else
#endif

#ifdef TRAMP_MUTEX_INTLOCK
#else
#endif

#ifdef FEATURE_TRAMP_LOG
#endif

#ifdef TRAMP_USE_LESS_MEMORY
#endif

#ifndef TRAMP_USE_LESS_MEMORY
#endif

#ifdef TRAMP_MODULE_MODEM
#endif

#ifdef TRAMP_MODULE_GPIO
#endif

#ifdef TRAMP_MODULE_IPC
#endif

#ifndef TRAMP_INTERNAL_H
#endif

#ifdef IMAGE_QDSP6_PROC
#else
#endif

#ifdef TRAMP_PIC_DEBUG
#endif

#ifdef TRAMP_PIC_DEBUG
#else
#endif

#ifdef TRAMP_REX_IST
#endif

#ifndef TRAMP_REX_IST
#endif

#ifdef FEATURE_TRAMP_EXTRA_SANITY
#else
#endif

#ifdef TRAMP_REX_IST
#else
#endif

#ifndef TRAMP_PIC_H
#endif

#ifndef TRAMP_QGIC_H
#endif

#if (((definedFEATURE_Q_WIN32_LOCKS) || (definedFEATURE_WINCE)) && !defined(FEATURE_WINCE_BOOTLOADER))
#endif

#ifdef USE_MUTEX
#elif definedFEATURE_QUBE
#else
#endif

#if ((definedFEATURE_QUBE) || ((definedFEATURE_Q_WIN32_LOCKS) || (definedFEATURE_WINCE)) && !defined(FEATURE_WINCE_BOOTLOADER))
#else
#endif



/*Start of addstrip - 0216*/

#ifndef QMI_FW_INIT_H
#endif

#ifndef __SDIO_MUX_H_
#endif

#ifndef TIME_CONV_H
#endif

#ifndef TIME_GENOFF_H
#endif

#ifdef DOG_DYNAMIC_API
#endif

#if defined(IMAGE_MODEM_PROC)
#endif

#ifdef FEATURE_SEC_TIME_MU
#endif

#ifndef TIME_REMOTE_H
#endif

#ifndef TIME_REMOTE_ATOM_H
#endif

#ifndef TIME_REMOTE_ATOM_FUSION_H
#endif

#ifndef TIME_REMOTE_MM_FUSION_H
#endif

#ifndef TIME_REMOTE_REG_H
#endif

#ifndef TIME_TOD_H
#endif

#if ((defined(FEATURE_MULTIPROCESSOR) && !defined(FEATURE_TIME_NO_RPC)) && defined(FEATURE_QDSP6))
#else
#endif

#if ((defined(FEATURE_MULTIPROCESSOR) && !defined(FEATURE_TIME_NO_RPC)) && defined(IMAGE_MODEM_PROC))
#endif

#ifdef T_MDM9X00
#else
#endif

#ifndef FEATURE_MULTIPROCESSOR
#endif

#ifndef TIME_TYPE_H
#endif

#ifndef __CLOCKBOOT_H__
#endif

#ifndef CLOCKPIL_H
#endif

#ifdef FEATURE_MSM8660
#elif FEATURE_MSM8960
#endif

#ifndef __HAL_HALHWIOQUP_H__
#endif

#if defined(FEATURE_AMSSHEAP_DEBUG) && !defined(BUILD_BOOT_CHAIN) && !defined(BUILD_TOOL_CHAIN)
#endif

#ifdef DAL_SYSDRV_BUSYWAIT
#endif

#ifndef IMAGE_MODEM_PROC
#endif

#if defined(IMAGE_MODEM_PROC) && (DAL_CONFIG_TARGET_ID != 0x8650)
#endif

#ifndef FEATURE_AMSSHEAP_DEBUG
#endif

#if defined(SMD_APPS_PROC) || defined(SMD_MODEM_PROC)
#endif

#if defined(FEATURE_SMD) && (defined(SMD_APPS_PROC) || defined(SMD_MODEM_PROC))
#endif

#ifdef SMD_RIVA_PROC
#endif

#ifdef SMD_Q6FW_PROC
#endif

#ifdef SMD_APPS_PROC
#endif

#ifndef SMD_Q6FW_PROC
#endif

#ifdef SMD_M2RIVA_OUT
#endif

#ifdef SMD_M2Q6FW_OUT
#endif

#ifdef SMD_A2RIVA_OUT
#endif

#ifdef SMD_RIVA2A_OUT
#endif

#ifdef SMD_RIVA2M_OUT
#endif

#ifdef SMD_Q6FW2M_OUT
#endif

#ifndef FEATURE_MODEM_FIRMWARE
#endif

#ifdef SMD_PROFILE
#else
#endif

#ifdef FEATURE_MODEM_FIRMWARE
#else
#endif

#ifdef IMAGE_DSPS_PROC
#else
#endif

#ifdef SMD_LPASS_PROC
#endif

#if defined(SMD_MODEM_PROC)
#elif defined(SMD_APPS_PROC)
#elif defined(SMD_LPASS_PROC)
#else
#endif

#if defined(RIVA_BRINGUP_VIRTIO)
#elif defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_APPS_PROC)
#elif defined(MPROC_LPASS_PROC)
#elif defined(IMAGE_DSPS_PROC)
#elif defined(FEATURE_MODEM_FIRMWARE)
#else
#endif

#ifdef SMD_Q6FW_PROC
#else
#endif

#ifdef SMD_MODEM_PROC
#endif

#ifdef __QDSP6_V4__
#elif defined(__QDSP6_V3__)
#endif

#ifdef SMD_DSPS_PROC
#endif

#ifndef SMEM_Q6FW_PROC
#endif

#ifndef SMEM_DSPS_PROC
#endif

#if !defined(SMEM_DSPS_PROC) && !defined(SMEM_Q6FW_PROC)
#endif

#if !defined(SMEM_LPASS_PROC)
#endif

#ifdef SMEM_Q6FW_PROC
#endif

#if defined(SMSM_A2RIVA_OUT) && !defined(SMEM_LPASS_PROC)
#endif

#ifdef SMSM_RIVA2A_OUT
#endif

#ifndef SMEM_DSPS_PROC
#else
#endif

#if defined(MPROC_LPASS_PROC)
#endif

#ifndef FEATURE_MODEM_FIRMWARE
#else
#endif

#if defined(FEATURE_MODEM_FIRMWARE)
#elif defined(RIVA_BRINGUP_VIRTIO)
#elif defined(IMAGE_MODEM_PROC)
#elif defined(IMAGE_APPS_PROC)
#elif defined(MPROC_LPASS_PROC)
#elif defined(IMAGE_DSPS_PROC)
#endif

#if (definedFEATURE_WINCE_OAL) || (definedFEATURE_WINCE_BOOTLOADER)
#elif defined(FEATURE_QDSP6)
#elif defined(SMEM_DSPS_PROC)
#else
#endif

#if (defined(SMEM_APPS_PROC) || defined(SMEM_MODEM_PROC) || defined(SMEM_DSPS_PROC) || defined(FEATURE_QDSP6))
#else
#endif

#if defined(RIVA_BRINGUP_VIRTIO)
#elif defined(SMEM_MODEM_PROC)
#elif defined(SMEM_APPS_PROC)
#elif defined(SMEM_LPASS_PROC)
#elif defined(SMEM_Q6FW_PROC)
#elif defined(SMEM_DSPS_PROC)
#else
#endif

#if defined(SMEM_APPS_PROC)
#elif defined(SMEM_MODEM_PROC)
#elif defined(SMEM_LPASS_PROC)
#else
#endif

#ifndef SMEM_TARGET_H
#endif

#if defined(FEATURE_WINCE_OAL)
#elif defined(FEATURE_WINCE_BOOTLOADER)
#elif defined(FEATURE_WINCE)
strip
#elif defined(FEATURE_QUARTZ_ENV)
#elif defined(SMEM_LPASS_PROC)
#elif defined(FEATURE_COSIM)
#elif defined(APPSBL) || defined(SBL_APPS_BOOT_LOADER_LIB)
#elif defined(QCSBL) || defined(OEMSBL) || defined(DBL) || defined(FSBL) || defined(OSBL)
#elif defined(BUILD_BOOT_CHAIN)
#elif defined(SMEM_APPS_PROC)
#elif defined(SMEM_MODEM_PROC)
#elif defined(SMEM_DSPS_PROC)
#elif defined(SMEM_RIVA_PROC)
#elif defined(FEATURE_MODEM_FIRMWARE)
#elif defined(FEATURE_SMEM_UEFI)
#else
#endif

#ifndef SNS_SAM_GRAVITY_SVC_SERVICE_H
#endif

#ifndef SNS_SAM_QUAT_SVC_SERVICE_H
#endif

#ifndef SNS_SMGR_INTERNAL_SVC_SERVICE_H
#endif

#if defined(SNS_PCSIM) || defined(SNS_LA_SIM) || defined(SNS_BLAST)
strip
#else
#endif

#ifdef SNS_SAM_UNIT_TEST
#endif

#ifdef SNS_PM_TEST
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_DSPS_BUILD)
#elif defined(SNS_BLAST)
strip
#else
#endif

#ifndef LOG_SNS_QUAT_CONFIG_C
#endif

#ifndef LOG_SNS_QUAT_RESULT_C
#endif

#ifndef LOG_SNS_QUAT_REPORT_C
#endif

#ifndef LOG_SNS_GRAVITY_CONFIG_C
#endif

#ifndef LOG_SNS_GRAVITY_RESULT_C
#endif

#ifndef LOG_SNS_GRAVITY_REPORT_C
#endif

#ifdef SNS_PLAYBACK_SKIP_SMGR
#endif

#ifndef SNS_PLAYBACK_SKIP_SMGR
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM) || defined(SNS_BLAST)
#endif

#if defined(SNS_BLAST)
strip
#else
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_LA) || defined(SNS_BLAST)
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#elif defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#else
#endif

#if defined(SNS_DSPS_BUILD)
#elif defined(SNS_LA)
strip
#elif defined(SNS_BLAST)
strip
#else
#endif

#if defined(SNS_DSPS_BUILD)
#elif defined(SNS_LA)
strip
#elif defined(SNS_BLAST)
strip
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#elif defined(SNS_BLAST)
strip
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_BLAST)
strip
#elif defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#endif

#ifdef SNS_BLAST
strip
#else
#endif

#if defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_BLAST)
strip
#endif

#if defined(SNS_DSPS_BUILD) || defined(SNS_PCSIM)
#elif defined(SNS_LA) || defined(SNS_LA_SIM)
strip
#elif defined(SNS_BLAST)
strip
#endif

#ifdef USE_STANDARD_QCOM_QUEUE
#else
#endif

#if defined(SNS_DSPS_BUILD)
#endif

#ifndef QUEUE_WRAPPER_H
#endif

#ifndef SNS_DDF_SIGNAL_H
#endif

#ifdef SNS_EXCLUDE_POWER
#endif

#ifndef SNS_EXCLUDE_POWER
#endif

#ifdef SAM_TEST_ALGO_ENABLE
strip
#endif

#ifndef SMGR_REG_OFF
#endif

#ifdef SMGR_DYNAMIC_LPF_ON
#endif

#if defined(SMGR_DYNAMIC_LPF_ON)
#else
#endif

#if defined(SMGR_DYNAMIC_LPF_ON) && defined(SMGR_CIC_FILTER_ON)
#endif

#ifdef SMGR_BUFFERED_RPT_ON
#endif

#ifndef SNS_SMGR_HW_H
#endif

#ifdef CONFIG_USE_ADXL
#elif defined(CONFIG_USE_STM)
#else
#endif

#if defined(DAL_CONFIG_IMAGE_APPS)
#else
#endif

#ifdef __GNUC__
#elif defined(WIN8EA)
#else
#endif

#if defined(DAL_CONFIG_IMAGE_MODEM)
#endif

#if defined(DAL_CONFIG_IMAGE_MODEM)
#else
#endif

#ifdef FSM_MODE
#endif

#ifdef FABRIC_HW_CLK_GATING
#else
#endif

#ifndef __CLOCKPILHWIO_H__
#endif

#ifndef __CLOCKAVS_H__
#endif

#ifdef __GNUC__
#elif !defined(__ARMCC_VERSION)
#endif

#ifndef __HALIPCINTHWIO_H__
#endif

#ifdef FEATURE_OS_MEMORY_PROTECTION
#else
#endif



/*Start of addstrip - 0216*/



/*Start of addstrip - 0216*/



/*Start of addstrip - 0216*/



/*Start of addstrip - 0216*/



/*Start of addstrip - 0216*/



/*Start of addstrip - 1003*/

#ifndef SMD_TYPE_H
#endif

#ifndef SMEM_TYPE_H
#endif

#ifndef SMSM_TYPE_H
#endif

#ifdef SMD_DSPS_PROC
#else
#endif

#ifdef FEATURE_SMDL_LOOPBACK_TEST
#endif

#if !defined(SMD_Q6FW_PROC) && !defined(SMD_DSPS_PROC)
#else
#endif

#ifndef MPMINTI_H
#endif

#ifdef SNS_SMGR_UNIT_TEST
strip
#elif defined(SNS_REG_TEST)
strip
#elif defined(SNS_PM_TEST)
#elif defined(SNS_SAM_UNIT_TEST)
#elif defined(SNS_PCSIM) || defined(SNS_LA_SIM)
strip
#else
#endif

#ifndef __STM_CONFIG__
#endif

#ifdef SAN_TEST_SENSOR_DATA
#endif

#if defined(SAM_TEST_ALGO_ENABLE) || defined(SAM_TEST_ALGO_TOGGLE)
strip
#endif

#ifdef CONFIG_USE_ADXL
#elif defined(CONFIG_USE_LIS3DH)
#else
#endif

#if defined(CONFIG_USE_ADXL) || defined(CONFIG_USE_LIS3DH)
#else
#endif

#ifndef CONFIG_USE_LIS3DH
#endif



/*Start of addstrip - 0300*/



/*Start of addstrip - 1004*/

#ifdef DAL_TIME_RESTART
#endif

#ifndef DEFEATURE_ULOG_CORE
#endif

#if defined(ULOG_PKG_ALTERNATE)
#elif defined(ULOG_PKG_FULL)
#elif defined(ULOG_PKG_SMALL)
#endif

#ifdef SNS_UNIT_TEST
#elif defined(SNS_REG_TEST)
strip
#elif defined(SNS_PM_TEST)
#elif defined(SNS_PCSIM) || defined(SNS_LA_SIM)
strip
#else
#endif

#ifdef SNS_UNIT_TEST
#endif

#ifdef ALSPRX_DEBUG_IRQ
#endif

#ifndef ALSPRX_USE_POLLING
#endif

#if definedFEATURE_MSM8960
#elif definedFLUID_BUILD
#else
#endif

#ifdef CONFIG_USE_ISL29028
#else
#endif



/*Start of addstrip - 10047*/

#ifndef _SMEM_INTERNAL_H_
#endif

#ifndef SMEM_OS_H
#endif

#ifndef SCL_SHARED_RAM_SIZE
#endif

#ifdef SNS_PM_TEST
#else
#endif

#ifdef SNS_UNIT_TEST
#elif defined(SNS_REG_TEST)
strip
#elif defined(SNS_PCSIM) || defined(SNS_LA_SIM)
strip
#else
#endif

#ifdef ALSPRX_USE_POLLING
#else
#endif

#ifndef __L3G4200D__
#endif

#ifndef __L3GD20__
#endif

#ifdef SAM_TEST_SENSOR_DATA
#endif

#ifdef CONFIG_USE_L3GD20
#elif defined(CONFIG_USE_L3G4200D)
#else
#endif

#ifdef CONFIG_USE_AKM8975
#elif defined(CONFIG_USE_HMC5883)
#else
#endif

#ifdef SNS_SMGR_DEBUG
#endif

#ifdef CONFIG_USE_L3GD20
#else
#endif

