/* QuRT and CoreBSP text sections*/
/* align the start address to 256 bytes*/
. = ALIGN (256);
   *(*sns_os_code_start)
/* QuRT sections - ~13 KB */
   qurt_futex_c* (.text)    /* has all init and destroy functions */
   qurt_sem.* (.text)
   qurt_signal.* (.text)
   qurt_mutex.* (.text)
   qurt_rmutex.* (.text)
   qurt_timer_client* (.text)
   mutex.* (.text)
   futex_asm.* (.text)
   buf_asm.* (.text)

   *(*hw_timer_curr_timetick*)
   *(*hw_timer_prg_next_interrupt*)
   *(*ISTMain*)
   *(*qurt_anysignal_clear*)
   *(*qurt_anysignal_set*)
   *(*qurt_elite_timer_oneshot_start_duration*)
   *(*qurt_elite_timer_sleep*)
   *(*qurt_interrupt_acknowledge*)
   *(*qurt_pipe_send*)
   *(*qurt_pipe_receive*)
   *(*qurt_sysclock_get_hw_ticks*)
   *(*qurt_thread_get_anysignal*)
   *(*qurt_thread_get_id*)
   *(*qurt_thread_get_name*)
   *(*qurt_thread_get_priority*)
   *(*qurt_thread_set_priority*)
   *(*qurt_timer_lib_current_time*)
   *(*qurt_timer_lib_expired*)
   *(*qurt_timer_lib_new*)
   *(*qurt_timer_lib_process_active_timers*)
   *(*qurt_timer_lib_process_signal_callback*)
   *(*qurt_timer_lib_process_timer_expiry*)
   *(*qurt_timerServer*)
   *(*qurt_timetick_error_magin*)
   *(*qurt_tls_get_specific*)
   *(*qurt_writec*)
   *(*QURTK_ack_int*)
   *(*QURTK_check_sanity_at_return*)
   *(*QURTK_continuation_syscall*)
   *(*QURTK_do_interrupt_fromsleep*)
   *(*QURTK_event_vectors*)
   *(*QURTK_goto_wait*)
   *(*QURTK_handle_get_obj*)
   *(*QURTK_handle_is_valid*)
   *(*QURTK_handle_l2vic_int*)
   *(*QURTK_handle_resched_int*)
   *(*QURTK_handle_trap0*)
   *(*QURTK_interrupted_l2vic_waitmode*)
   *(*QURTK_interrupted_resched_waitmode*)
   *(*QURTK_prio_get*)
   *(*QURTK_prio_set*)
   *(*QURTK_prio_set_internal*)
   *(*QURTK_prio_setU*)
   *(*QURTK_thread_switch*)
   *(*QURTK_trace_print*)
   *(*QURTK_trap_angel*)
   *(*QURTK_wait_forever*)
   *(*QURTK_write*)

/* I2C section - 3.5 KB */
   *(*I2CDEVQUP_ConfigureQupIo*)
   *(*I2CDRV_ProcessNextTransaction*)
   *(*I2CDEV_Write*)
   *(*I2CDEV_Read*)
   *(*I2CDEVQUP_ProcesQupHwEvts*)
   *(*I2CDEVQUP_ConfigureSingleTransferIo*)
   *(*I2CDEVQUP_CalcTransferredDataBytes*)
   *(*I2CDRV_Write*)
   *(*I2CDRV_Read*)
   *(*I2CDEVQUP_SetRunState*)
   *(*I2CDRV_EnqueueRequest*)
   *(*I2CDEVQUP_CalcTransferInOutSize*)
   *(*I2CDRV_DequeueRequest*)
   *(*I2CPLATDEV_Isr*)
   *(*I2CSYS_ClearEvent*)
   *(*I2CSYS_SetEvent*)
   *(*I2CSYS_Wait*)
   *(*I2CSYS_LeaveCriticalSection*)
   *(*I2CSYS_EnterCriticalSection*)
   *(*I2C_DalI2C_Write*)
   *(*I2C_DalI2C_Read*)
   *(*I2CDEVQUP_ISR_HOOK*)
   *(*I2CDEVQUP_IST_HOOK*)
   *(*HAL_qupe_IsI2CBusBusy*)

/* QMI functions - 5.5 KB */
   *(*qmi_client_message_decode*)
   *(*qmi_cci_xport_recv*)
   *(*encode_header*)
   *(*encode_and_send*)
   *(*qmi_csi_send_ind*)
   *(*qmi_idl_get_max_message_len*)
   *(*qmi_idl_get_message_c_struct_len*)
   *(*qmi_idl_next_element*)
   *(*qmi_idl_decode_find_tlv*)
   *(*qmi_idl_encode_length*)
   *(*qmi_idl_decode_element*)
   *(*qmi_idl_decode_verify_mandatory*)
   *(*qmi_idl_encode_element*)
   *(*qmi_idl_find_msg*)
   *(*qmi_idl_message_encode*)
   *(*qmi_idl_message_decode_v5*)
   *(*qmi_idl_message_decode*)
   *(*qmi_cci_rx_cb*)
   *(*xport_send*)

/* DAL functions - 1.6 KB */ 
   *(*DALSYS_DestroyObject*)
   *(*DALSYS_EventCreate*)
   *(*DALSYS_EventCtrlEx*)
   *(*DALSYS_EventWait*)
   *(*DALSYS_SyncEnter*)
   *(*DALSYS_SyncLeave*)
   *(*_DALSYS_DestroyObject*)
/*   *(*_DALSYS_SyncLeave*)      */
/*   *(*_DALSYS_SyncEnter*)      */
   *(*DALSYS_DestroyEventObject*)
   *(*DALSYS_EventInit*)
   *(*_DALSYS_EventWait*)
   *(*_DALSYS_EventCtrl*) 
   *(*_DALSYS_EventCreate*)
   *(*_DALSYS_EnqueueAndTrigger*)

/* QUP functions - 2.7 KB */
   *(*QUP_OutFsm_MoveNextTransfer*)
   *(*QUP_OutFsm_DataCntNext*)
   *(*QUP_InFsm_MoveNextTransfer*)
   *(*QUP_UpdateTransferCnt*)
   *(*QUP_ServiceQUP*)
   *(*QUP_FreeI2cBus*)
   *(*QUP_PerformInput*)
   *(*QUP_PerformOutput*)
   *(*QUP_PerformInputOutput*)
   *(*QUP_WaitForCompletion*)
   *(*GetQupLogRegReadHandle*)
   *(*GetQupLogRegWriteHandle*)

/* HAL functions - 2.4 KB */
   *(*HAL_qupe_ClearOpStatusFlags*)
   *(*HAL_qupe_GetErrStatusFlags*)
   *(*HAL_qupe_GetI2cState*)
   *(*HAL_qupe_GetInFifoOccupiedSlotsCount*)
   *(*HAL_qupe_GetInTransferCountCurrent*)
   *(*HAL_qupe_GetOpStatusFlags*)
   *(*HAL_qupe_GetOutInMode*)
   *(*HAL_qupe_GetOutTransferCountCurrent*)
   *(*HAL_qupe_GetRunState*)
   *(*HAL_qupe_GetWordFromInFifo*)
   *(*HAL_qupe_PutWordIntoOutFifo*)
   *(*HAL_qupe_RunStateIsValid*)
   *(*HAL_qupe_SetI2cConfig*)
   *(*HAL_qupe_SetInIoMode*)
   *(*HAL_qupe_SetInputFifoEnabled*)
   *(*HAL_qupe_SetInTransferCount*)
   *(*HAL_qupe_SetIrqMask*)
   *(*HAL_qupe_SetOutIoMode*)
   *(*HAL_qupe_SetOutputFifoEnabled*)
   *(*HAL_qupe_SetOutTransferCount*)
   *(*HAL_qupe_SetRunState*)

/* align the size to be multiple of 256 bytes*/
. = ALIGN (256);
    *(*sns_os_code_end)

