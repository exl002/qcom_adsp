#===============================================================================
#
# EVMGR Libs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2014 by Qualcomm Technologies, Inc.  All Rights Reserved
# Qualcomm Technologies Proprietary and Confidential
#
#-------------------------------------------------------------------------------
#
#  $Header:  $
#  $DateTime:  $
#  $Author:  $
#  $Change:  $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 28/02/2014  MW     Added SENSORS_DD_DEV_FLAG for HD22
# 06/25/2013  ps     update require method for Public APIs
# 01/29/2013 gju     Include different file for smr utility function support.
# 12/14/2012  ag     Add multi PD support
# 04/14/2011  dc     Updates for Blast OS.
# 12/22/2010  pg     Update for accessing UCOS header files from DALSYS. 
# 09-21-10   jtl     Moved most Sensors CPPPATHs to proper modules.
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/Sensors/common/smr/src"
 
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SENSOR1',
   'BOOT',
   'BUSES',
   'DAL',
   'DEBUGTOOLS',
   'HAL',
   'MPROC',
   'SERVICES',
   'STORAGE',
   'SYSTEMDRIVERS',
   'WIREDCONNECTIVITY',
   'SECUREMSM',
   # needs to be last also contains wrong comdef.h
   'KERNEL',
]

env.RequirePublicApi(CBSP_API, area='core')
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Internal depends within Sensors
#-------------------------------------------------------------------------------
SENSORS_API = [
   'SNS_SMR',
   'SNS_QUEUE',
   'SNS_MEMMGR',
   'SNS_EVMGR',
   'SNS_COMMON',
   'SNS_DEBUG_DSPS'
]

env.RequireRestrictedApi(SENSORS_API)

#-------------------------------------------------------------------------------
# Headers required by SNA OSA
#-------------------------------------------------------------------------------
DAL_UCOS_API = [
   'DAL',
]
env.RequireRestrictedApi(DAL_UCOS_API)
env.RequirePublicApi(DAL_UCOS_API)

#
# TODO: Remove manual CPPPATH modification once proper modules are defined
#
if env.has_key('SNS_BLAST'):
	env.Append(CPPPATH = [
	   "${BUILD_ROOT}/Sensors/ext_module/qmi/src",
	   "${BUILD_ROOT}/Sensors/ext_module/qmi/inc",
	   "${BUILD_ROOT}/Sensors/ext_module/reg/src",
	   "${BUILD_ROOT}/Sensors/common/inc",
	   "${BUILD_ROOT}/Sensors/common/util/memmgr/inc",
	   "${BUILD_ROOT}/Sensors/common/util/queue/inc",
	   "${BUILD_ROOT}/Sensors/common/smr/inc",
	   "${BUILD_ROOT}/Sensors/apps/common/sns_debug/inc",
	   "${BUILD_ROOT}/Sensors/modem/blast/inc",
	   "${BUILD_ROOT}/core/api/sensors",
	])
else:
	env.Append(CPPPATH = [
        #Guru below ones are added
       "${BUILD_ROOT}/Sensors/ext_module/qmi/src",
       "${BUILD_ROOT}/Sensors/ext_module/qmi/inc",
       "${BUILD_ROOT}/Sensors/ext_module/reg/src",
       "${BUILD_ROOT}/Sensors/common/inc",
       "${BUILD_ROOT}/Sensors/common/smr/src",
       "${BUILD_ROOT}/Sensors/common/smr/inc",
       "${BUILD_ROOT}/Sensors/common/api",
       "${BUILD_ROOT}/Sensors/common/util/queue/inc",
       "${BUILD_ROOT}/Sensors/common/util/memmgr/inc",
       "${BUILD_ROOT}/Sensors/common/util/mathtools/inc",
       "${BUILD_ROOT}/elite/common/qurt_elite/inc",
	])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------
SMR_SOURCES = [
      '${BUILDPATH}/sns_smr_util.c',
   ]
   
#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
if 'SENSORS_DD_DEV_FLAG' in env:
   # Sources that should not be shared
   SMR_CLEAN_SOURCES = env.FindFiles(['*.*'], '${BUILD_ROOT}/Sensors/common/smr/src')
   SMR_CLEAN_SOURCES += env.FindFiles(['*.h'], '${BUILD_ROOT}/Sensors/common/smr/inc')
	
   # Add binary library
   if env.has_key('SNS_BLAST'):
      smr_lib = env.AddBinaryLibrary(['CBSP_QDSP6_SW_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 
      'CORE_QDSP6_SENSOR_SW'],
      "${BUILDPATH}/SMR", SMR_SOURCES)
		
      # Clean sources
      env.CleanPack(['CBSP_QDSP6_SW_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], 
      SMR_CLEAN_SOURCES)
   else:
      smr_lib = env.AddBinaryLibrary(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'],
      "${BUILDPATH}/SMR", SMR_SOURCES)
		
      # Clean sources
      env.CleanPack(['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'], 
      SMR_CLEAN_SOURCES)
else:
   smr_lib = env.Library('${BUILDPATH}/SMR', SMR_SOURCES)
   if env.has_key('SNS_BLAST'):
      env.AddLibsToImage(
      ['CBSP_QDSP6_SW_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'],
      smr_lib)
   else:
      env.AddLibsToImage(
      ['CBSP_QDSP6_SW_IMAGE', 'CORE_QDSP6_SENSOR_SW'],
      smr_lib)
