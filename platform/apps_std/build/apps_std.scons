#===============================================================================
# Copyrigha (c) 2012 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#===============================================================================
Import('env')

env = env.Clone()

if not 'USES_PLATFORM_MINIMAL' in env:

  platform_root = '${BUILD_ROOT}/platform'
  env.Replace(ADSP_PLATFORM_ROOT = platform_root)

  env.RequirePublicApi([
    'HAPSDK',
    'PLATFORM_LIBS',
    'STDDEF',
    'REMOTE',
    'QAIC',
    'A1STD',
    'UTILS',
    'APPS_STD',
    ])

  core_public_apis = [
     'STORAGE',
     'KERNEL',
     ]

  env.RequirePublicApi(core_public_apis, area='core')

  env.RequireRestrictedApi([
    'APPS_STD',
    'LISTENER',
    ])


  #-------------------------------------------------------------------------------
  # Source PATH
  #-------------------------------------------------------------------------------
  BUILDPATH = "${ADSP_PLATFORM_ROOT}/apps_std"
  env.VariantDir('${BUILDPATH}', BUILDPATH, duplicate=0)


  #-------------------------------------------------------------------------------
  # Sources
  #-------------------------------------------------------------------------------

  APPS_STD_SOURCES =  [
     env.QaicStubFromIdl("apps_std"),
     env.AddQaicHeaderDep('${BUILDPATH}/src/apps_std_rfsa.c', "apps_std")
  ]

  #-------------------------------------------------------------------------------
  # Add Libraries to image
  #-------------------------------------------------------------------------------
  apps_std_lib = env.AddBinaryLibrary(['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE',
    'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'], '${BUILDPATH}/apps_std', APPS_STD_SOURCES)


  #-------------------------------------------------------------------------------
  # Load Subunits (sys)
  #-------------------------------------------------------------------------------
  env.LoadSoftwareUnits()

#Clean and pack rules
CLEAN_LIST=[]
CLEAN_LIST.extend(env.FindFiles(['*.c', '*.cpp', '*.h'], '${ADSP_PLATFORM_ROOT}/apps_std/src'))
env.CleanPack(['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE',
     'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'], CLEAN_LIST)


