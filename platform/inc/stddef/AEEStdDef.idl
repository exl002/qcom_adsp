#ifndef AEESTDDEF_IDL
#define AEESTDDEF_IDL
//============================================================================
/// @file AEEStdDef.idl
///
/// This file contains definitions of primitive  types.
                                                           //qidl copyright
//% Copyright (c) 2006-2012 QUALCOMM Incorporated.
                                                           //qidl nested=false
//% All Rights Reserved.
//% Qualcomm Confidential and Proprietary
//============================================================================

/* NOTE: THIS FILE SHOULD NEVER BE COMPILED DIRECTLY.  That is, code should
 * never be generated from these definitions, as they will conflict with the
 * "real" hand-written AEEStdDef.h.  Note also that if the definitions here
 * become out of sync with the hand-written AEEStdDef.h, bad things will
 * happen.
 */

/**
 * @name Primitive Types
 */
/*@{*/

typedef unsigned long long uint64;      ///< Unsigned 64-bit integer
typedef unsigned long      uint32;      ///< Unsigned 32-bit integer
typedef unsigned short     uint16;      ///< Unsigned 16-bit integer
typedef octet              uint8;       ///< Unsigned 8-bit integer
typedef long long          int64;       ///< Signed 32-bit integer
typedef long               int32;       ///< Signed 32-bit integer
typedef short              int16;       ///< Signed 16-bit integer

typedef octet              byte;        ///< Alternate alias for an unsigned
                                        ///< 8-bit integer
/*@}*/

/**
 * @name Types
 */
/*@{*/

/** 
 * This is a unique ID type.  Used to express types,
 * interfaces, classes, and privileges.  The class ID generator generates
 * unique IDs that can be used anywhere a new #AEEIID, #AEECLSID, or
 * #AEEPRIVID is needed.
 */
typedef uint32             AEEUID;

/**
 * This is an interface ID type, used to denote an interface.  It is a special
 case of #AEEUID.
 */
typedef uint32             AEEIID;

/**
 * This is a class ID type, used to denote a class.  It is  a special case of
 #AEEUID.
 */
typedef uint32             AEECLSID;

/**
 * This is a privilege ID type, used to express a privilege.  It is a special
 * case of #AEEUID.
 */
typedef uint32             AEEPRIVID;

typedef wchar              AECHAR;      ///< Wide character type

typedef long               AEEResult;   ///< Common return type

/*@}*/

#endif /* #ifndef AEESTDDEF_IDL */
