#===============================================================================
# Copyright (c) 2012 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#===============================================================================
Import('env')
import os
env = env.Clone()

if not 'USES_PLATFORM_MINIMAL' in env:
  platform_root = '${BUILD_ROOT}/platform'
  env.Replace(ADSP_PLATFORM_ROOT = platform_root)

  env.RequirePublicApi([
    'HAPSDK',
    'PLATFORM_LIBS',
    'STDDEF',
    'UTILS',
    'DLW',
    'A1STD',
    'REMOTE',
    'MOD_TABLE',
    'A1ENV',
    'PERF',
    'QI',
    'QAIC',
    'POWER_BOOST',
    'APPS_STD',
    ])

  env.RequireRestrictedApi([
    'ATOMIC',
    'QLIST',
    'PLS',
    'FASTRPC_SMD',
    ])

  core_public_apis = [
     'DEBUGTOOLS',
     'SERVICES',
     'KERNEL',
     'MPROC',
     ]

  env.RequirePublicApi(core_public_apis, area='core')

  #-------------------------------------------------------------------------------
  # Source PATH
  #-------------------------------------------------------------------------------
  SRCPATH = "${ADSP_PLATFORM_ROOT}/perf"
  env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

  # Register as static library
  # perf disabled for SIM build
  if os.environ.get('BUILD_ACT')!='SIM':
    env.PLRegister("perf")

  perf_SOURCES =  [
      env.QaicSkelFromIdl("adsp_perf"),
      env.AddQaicHeaderDep('${BUILDPATH}/perf.c', "adsp_perf"),
     ]

  #env.Append(CPPDEFINES = 'VERIFY_PRINT_INFO')
  #env.Append(CPPDEFINES = 'VERIFY_PRINT_ERROR')

  #-------------------------------------------------------------------------------
  # Add Libraries to image
  #-------------------------------------------------------------------------------
  perf_lib = env.AddBinaryLibrary(['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE',
    'QDSP6_PLATFORM_SW_IMAGE', 'QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'],'${BUILDPATH}/perf', perf_SOURCES)

  #-------------------------------------------------------------------------------
  # Load Subunits (sys)
  #-------------------------------------------------------------------------------
  env.LoadSoftwareUnits()

CLEAN_LIST=[]
CLEAN_LIST.extend(env.FindFiles(['*.h', '*.c', '*.cpp'], '${ADSP_PLATFORM_ROOT}/perf'))
for x in env.FindFiles(['perf.h'], '${ADSP_PLATFORM_ROOT}/perf'):
    CLEAN_LIST.remove(x)
for x in env.FindFiles(['*.c', '*.cpp'], '${ADSP_PLATFORM_ROOT}/perf/build'):
    CLEAN_LIST.remove(x)
env.CleanPack(['SINGLE_IMAGE', 'CBSP_SINGLE_IMAGE', 'MODEM_IMAGE', 'CBSP_MODEM_IMAGE','QDSP6_SW_IMAGE', 'CBSP_QDSP6_SW_IMAGE'], CLEAN_LIST)
