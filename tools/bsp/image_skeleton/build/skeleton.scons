#===============================================================================
#
# Basic skeleton image scrip
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2009-2012 by Qualcomm Technologies, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //source/qcom/qct/images/scons/qc/rel/1.0/tools/bsp/image_skeleton/build/skeleton.scons#1 $
#  $DateTime: 2012/08/17 13:46:06 $
#  $Change: 2708093 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
#
#===============================================================================

Import('env')

#------------------------------------------------------------------------------
# Init image vars 
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Init aliases array.
# first alias (0th elemten in array) is always unique name, there should 
# never be two images with the same unique name
aliases = ['skeleton', 'group_a']

#------------------------------------------------------------------------------
# Init environment variables
env.InitImageVars(
   alias_list=aliases,  # aliases list
   proc='sparrow',      # proc (depending on tool chain arm, hexago, etc)
   plat='l4',           # platform (l4, blast, foo, bar, etc)
   build_tags = ['BASIC_IMAGE_EXAMPLE'],
   tools = ['buildspec_builder.py']
)

#------------------------------------------------------------------------------
# Check if we need to load this script or just bail-out
#------------------------------------------------------------------------------
if not env.CheckAlias():
   Return()

#---------------------------------------------------------------------------
# Load in CBSP uses and path variables
#---------------------------------------------------------------------------
env.InitBuildConfig()

#---------------------------------------------------------------------------
# Load in the tools-set init scripts
#---------------------------------------------------------------------------
#env.LoadToolScript('hexagon', toolpath = ['${BUILD_ROOT}/tools/build/scons/scripts'])

#---------------------------------------------------------------------------
# Libs/Objs
#---------------------------------------------------------------------------
image_libs = []
image_objs = []

#---------------------------------------------------------------------------
# Libraries Section
#---------------------------------------------------------------------------

# load au_name libs/objs build rules.
#au_name_items = env.LoadAreaSoftwareUnits('au_name')
#image_libs.extend(au_name_items['LIBS'])
#image_objs.extend(au_name_items['OBJS'])


image_units = [image_objs, image_libs]
#------------------------------------------------------------------------------
# Putting the image toghther
#------------------------------------------------------------------------------

if 'IMAGE_BUILD_LOCAL_FILES' in env:
   #-------------------------------------------------------------------------
   # Local Files
   #-------------------------------------------------------------------------
   
   # this is where local files are created, for example link scripts (lcs)
   # for qdsp6 like images, or scatter load files (scl) for amr like images.
   local_itmes= []
   
   image_units += local_itmes
      
if 'IMAGE_BUILD_LINK' in env:
   #-------------------------------------------------------------------------
   # Link image
   #-------------------------------------------------------------------------

   # this is where the rule to "link" is done.
   #image_elf = env.AddProgram("${SHORT_BUILDPATH}/${TARGET_NAME}", image_objs, LIBS=image_libs)
   
   # this is just to create something for testing
   image_elf = env.ListFileBuilder("${SHORT_BUILDPATH}/${TARGET_NAME}.txt", [image_objs, image_libs], 
         add_header=True)
   
if 'IMAGE_BUILD_POST_LINK' in env:
   #-------------------------------------------------------------------------
   # Post process image
   #-------------------------------------------------------------------------
   
   # this is where any aditional rules after linking are done.

   #=========================================================================
   # Define targets needed 
   #
   image_units += [
      image_elf,
   ]

#=========================================================================
# Finish up...
env.BindAliasesToTargets(image_units)
