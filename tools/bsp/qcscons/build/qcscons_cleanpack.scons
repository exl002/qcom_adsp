#==============================================================================#
#
# TOOLS_BUILD_SCONS Cleanpack SCons Script
#
# GENERAL DESCRIPTION
#    Scons cleanpack script for TOOLS_BUILD_SCONS
#
# Copyright (c) 2013 Qualcomm Technologies Incorporated.
#
# All Rights Reserved. Qualcomm Confidential and Proprietary
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#------------------------------------------------------------------------------#
# $Header: //source/qcom/qct/images/scons/qc/rel/1.0/tools/bsp/qcscons/build/qcscons_cleanpack.scons#2 $
#------------------------------------------------------------------------------#
#
#==============================================================================#

Import('env')
env = env.Clone()

# Need to call InitBuildConfig to get BUILD_CONFIG and other flags defined.

# init environment variables
env.InitImageVars(
   alias_list=['cleanpack'],           # aliases
   proc='qdsp6',              # proc
   plat='qurt',
   target='CLEANPACK_TARGET',# target (elf, image file name)
   build_tags = ['QCSCONS_ALL'],
   tools = []
   )

# We need this to run for all aliases, so no need to call CheckAlias
#if not env.CheckAlias():
#   Return()

#---------------------------------------------------------------------------
# Initialize the build configuration.
#---------------------------------------------------------------------------
env.InitBuildConfig(target_files=False)

env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/scons/pack/su_tools_build_scons.pack")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/scons/build/setenv.cmd")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/scons/build/setenv.sh")

env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/build.cmd")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/build.sh")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/build_all.cmd")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/build_all.sh")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/build_common.cmd")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/build_common.sh")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/setenv.cmd")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/build/setenv.sh")

env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/bsp/image_skeleton/build/skeleton.scons")
env.CleanPack("CLEANPACK_TARGET", "${BUILD_ROOT}/tools/bsp/qcscons/build/qcscons.cleanpack.scons")

