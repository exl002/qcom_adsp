#ifndef __VSS_INOTIFY_PUBLIC_IF_H__
#define __VSS_INOTIFY_PUBLIC_IF_H__

/**
  @file vss_inotify_public_if.h
  @brief This file contains the APR API definitions for the CVD
  registration-based event notification framework.
*/

/*===========================================================================
NOTE: The @brief description and any detailed descriptions above do not appear 
      in the PDF. 

      The CVD_mainpage.dox file contains all file/group descriptions 
      that are in the output PDF generated using Doxygen and Latex. To edit or 
      update any of the file/group text in the PDF, edit the 
      CVD_mainpage.dox file or contact Tech Pubs.

      The above description for this file is part of the vss_inotify_public_if 
      group description in the CVD_mainpage.dox file. 
=============================================================================*/
/*===========================================================================
Copyright (C) 2013 Qualcomm Technologies Incorporated.
All rights reserved.
Qualcomm Confidential and Proprietary
===========================================================================*/

/*===========================================================================

  $Header: //source/qcom/qct/images/adsp/avs/rel/2.2/adsp_proc/avs/api/cvd/vss_inotify_public_if.h#1 $
  $Author: coresvc $

===========================================================================*/


#include "apr_comdef.h"

/** @addtogroup vss_inotify_public_if
@{ */

/****************************************************************************
 * CVD EVENT NOTIFICAION APIS                                               *
 ****************************************************************************/

/**
  Allows the client to listen for a class of event 
  notifications generated by a CVD module.
 
  @par Payload
  #vss_inotify_cmd_listen_for_event_class_t

  @return
  #APRV2_IBASIC_RSP_RESULT

  @dependencies
  The event class ID provided in the payload must be 
  supported by the module to which this command is issued. 
  Otherwise the command fails. 

  @comments
  Generated events are sent to the source address and source port of this command.
*/
#define VSS_INOTIFY_CMD_LISTEN_FOR_EVENT_CLASS ( 0x00012E56 )

/** @brief Type definition for
 *         #vss_inotify_cmd_listen_for_event_class_t.
*/
typedef struct vss_inotify_cmd_listen_for_event_class_t vss_inotify_cmd_listen_for_event_class_t;

#include "apr_pack_begin.h"

/** @brief Payload structure for the #VSS_INOTIFY_CMD_LISTEN_FOR_EVENT_CLASS command.
*/
struct vss_inotify_cmd_listen_for_event_class_t
{
   uint32_t class_id;
     /**< Event class ID to listen. */
}
#include "apr_pack_end.h"
;


/**
  Allows the client to cancel a class of event notifications generated
  by a CVD module that the client has been listening for.
 
  @par Payload
  #vss_inotify_cmd_cancel_event_class_t

  @return
  #APRV2_IBASIC_RSP_RESULT

  @dependencies
  None.

  @comments
  The event class ID provided in the payload that are not 
  supported by the module to which this command is issued, or 
  that the client was not listening for, are ignored. 
*/
#define VSS_INOTIFY_CMD_CANCEL_EVENT_CLASS ( 0x00012E57 )

/** @brief Type definition for
 *         #vss_inotify_cmd_cancel_event_class_t.
*/
typedef struct vss_inotify_cmd_cancel_event_class_t vss_inotify_cmd_cancel_event_class_t;

#include "apr_pack_begin.h"

/** @brief Payload structure for the
 *         #VSS_INOTIFY_CMD_CANCEL_EVENT_CLASS command.
*/
struct vss_inotify_cmd_cancel_event_class_t
{
   uint32_t class_id;
     /**< Event class ID to cancel. */
}
#include "apr_pack_end.h"
;


/** @} */ /* end_addtogroup vss_inotify_public_if */

#endif /* __VSS_INOTIFY_PUBLIC_IF_H__ */

