import os

AddOption('--build_dir',
          dest='blddir',
          default='build',
          type='string',
          nargs=1,
          action='store',
          metavar='BUILD_DIR',
          help='Initialize Build directory')

AddOption('--use_llvm',
          dest='usellvm',
          default=False,
          action='store_true',
          help='use llvm tools')

env=Environment(ENV = {'PATH' : os.environ['PATH']},
                TRGT = 'ADSPv5MP',
                BUILD_DIR = os.path.realpath(GetOption('blddir')+ "/${TRGT}"), 
                USE_LLVM = GetOption('usellvm'))

env.Replace(Q6_RTOS_ROOT=os.environ['Q6_RTOS_ROOT'])
env.VariantDir('${BUILD_DIR}', '.', duplicate=0)

env.Tool('target_tools', toolpath=["${Q6_RTOS_ROOT}/${TRGT}/scripts"])
env.Tool('qurt_builders', toolpath = ["${Q6_RTOS_ROOT}/scripts"])

env.Replace(CCFLAGS=['-m${Q6VERSION}','-g','-O2'])
env.Replace(CPPPATH=['.','${Q6_RTOS_ROOT}/include/qurt'])

#Generate example object from c files in current directory
qurtobj = SConscript('qurt/SConscript', exports='env')
app1obj = SConscript('app1/SConscript', exports='env')
app2obj = SConscript('app2/SConscript', exports='env')

#Generate PBN
env.Replace(PADDR = '0x1e000000')
image = env.QurtImage('${BUILD_DIR}/bootimg.pbn', [qurtobj, app1obj, app2obj])

if os.name == 'posix':
    q6ss_timer_cfg = "${Q6_TOOLS_ROOT}/qc/lib/iss/qtimer.so --csr_base=0xab000000 --irq_p=3 --freq=19200000 --cnttid=1"
    q6ss_int_cfg = "${Q6_TOOLS_ROOT}/qc/lib/iss/l2vic.so 32 0xab010000"
elif os.name == 'nt':
    q6ss_timer_cfg = "L2timer.dll 19200000 0xab020000 3 0xab010000"
    q6ss_int_cfg = "l2vic.dll 32 0xab010000"
osamcfg = env.Command("${BUILD_DIR}/osam.cfg", '', "echo ${QURT_MODEL} > $TARGET")
q6cfg = env.Command("${BUILD_DIR}/q6ss.cfg", '', ["echo "+q6ss_timer_cfg+" > $TARGET","echo "+q6ss_int_cfg+" >> $TARGET"])

#run simulator
env.Replace(SIM_RTOS = "--rtos " + str(osamcfg[0]))
env.Replace(SIM_COSIM = "--cosim_file " + str(q6cfg[0]))
env.Replace(SYMFILE = "--symfile " + str(qurtobj[0]))
AlwaysBuild(env.Simulator("${BUILD_DIR}/stats", image))
