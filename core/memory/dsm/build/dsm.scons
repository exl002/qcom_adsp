#===============================================================================
#
# DSM Libs
#
# Copyright (c) 2011 Qualcomm Technologies Incorporated.
#
# All Rights Reserved. Qualcomm Confidential and Proprietary
# Export of this technology or software is regulated by the U.S. Government.
# Diversion contrary to U.S. law prohibited.
#
# All ideas, data and information contained in or disclosed by
# this document are confidential and proprietary information of
# Qualcomm Technologies Incorporated and all rights therein are expressly reserved.
# By accepting this material the recipient agrees that this material
# and the information contained therein are held in confidence and in
# trust and will not be used, copied, reproduced in whole or in part,
# nor its contents revealed in any manner to others without the express
# written permission of Qualcomm Technologies Incorporated.
#
#-------------------------------------------------------------------------------
#
#  $Header: //source/qcom/qct/modem/mcs/dsm/rel/nikel_1.0/build/dsm.scons#2 $
#  $DateTime: 2011/06/10 15:56:08 $
#
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 06/10/11    rj     Added RCINIT Support 
#===============================================================================
from glob import glob
from os.path import join, basename

Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Setup source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/memory/dsm/src"

env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# Set MSG_BT_SSID_DFLT for legacy MSG macros
#-------------------------------------------------------------------------------
env.Append(CPPDEFINES = [
   "MSG_BT_SSID_DFLT=MSG_SSID_DSM",
   "FEATURE_DSM_POOL_OPTIMIZED_CB",
   "FEATURE_DSM_QUBE",
])

#-------------------------------------------------------------------------------
# Necessary Public API's
#-------------------------------------------------------------------------------
env.RequirePublicApi([
    'DAL',
    'DEBUGTOOLS',
    'SERVICES',
    'SYSTEMDRIVERS',
    'MEMORY',

    # needs to be last also contains wrong comdef.h
    'KERNEL',
    ], area='core')

#-------------------------------------------------------------------------------
# External API's not built with SCons
#-------------------------------------------------------------------------------
env.RequireExternalApi([
    'BREW',
])

#-------------------------------------------------------------------------------
# Generate the library and add to an image
#-------------------------------------------------------------------------------

# Construct the list of source files by looking for *.c
DSM_C_SOURCES = ['${BUILDPATH}/' + basename(fname)
                 for fname in glob(join(env.subst(SRCPATH), '*.c'))]

# Add our library to the following build tags:
#   MOB_MCS for MOB
#   MODEM_APPS for Apps proc
#   MODEM_MODEM for Modem proc
#   MODEM_WCN for Riva proc on 8960
#   CBSP_QDSP6_SW and CBSP_QDSP6_SW_IMAGE for CoreImage
env.AddLibrary( ['MOB_MCS', 'MODEM_APPS', 'MODEM_MODEM', 'MODEM_WCN',
                 'CBSP_QDSP6_SW', 'CBSP_QDSP6_SW_IMAGE'],
                '${BUILDPATH}/mcs_dsm', [DSM_C_SOURCES] )

# Load test units
env.LoadSoftwareUnits()

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

if 'USES_RCINIT' in env:
   RCINIT_IMG = ['MODEM_MODEM', 'CORE_MODEM', 'CORE_QDSP6_SW']
   env.AddRCInitFunc(           # Code Fragment in TMC: NO
    RCINIT_IMG,                 # define TMC_RCINIT_INIT_DSM_INIT
    {
     'sequence_group'             : 'RCINIT_GROUP_0',                   # required
     'init_name'                  : 'dsm',                              # required
     'init_function'              : 'dsm_init',                         # required
     'dependencies'               : ['dalsys','smem','err_store',]
    })
