#===============================================================================
#
# cryptoLibs
#
# GENERAL DESCRIPTION
#    build script
#
# Copyright (c) 2012 by QUALCOMM, Incorporated.
# All Rights Reserved.
# QUALCOMM Proprietary/GTDR
#
#-------------------------------------------------------------------------------
#
#  $Header: //components/rel/core.adsp/2.2/securemsm/unifiedcrypto/securechannel/build/SConscript#1 $
#  $DateTime: 2013/09/03 15:03:21 $
#  $Author: coresvc $
#  $Change: 4373211 $
#                      EDIT HISTORY FOR FILE
#
#  This section contains comments describing changes made to the module.
#  Notice that changes are listed in reverse chronological order.
#
# when       who     what, where, why
# --------   ---     ---------------------------------------------------------
# 10/23/12   yk	     Initial release
#
#===============================================================================
Import('env')
env = env.Clone()

#-------------------------------------------------------------------------------
# Source PATH
#-------------------------------------------------------------------------------
SRCPATH = "${BUILD_ROOT}/core/securemsm/unifiedcrypto/securechannel"

if env.has_key('USES_NO_DEBUG'):
   env.Replace(DBUG_MODE = "NoDebug")
else:
   env.Replace(DBUG_MODE = "Debug")

if env.has_key('IMAGE_NAME'):
   SECUREMSMLIBPATH = '${IMAGE_NAME}/${PROC}/${ARMTOOLS}'
#   SECUREMSMLIBPATH = '${IMAGE_NAME}/${PROC}/${ARMTOOLS}/${DBUG_MODE}'
else:
   SECUREMSMLIBPATH = 'unknown/${PROC}/${ARMTOOLS}'
#   SECUREMSMLIBPATH = 'unknown/${PROC}/${ARMTOOLS}/${DBUG_MODE}'

#env.Replace(SECUREMSMLIBPATH = SECUREMSMLIBPATH)
#env.VariantDir('${SECUREMSMLIBPATH}', SRCPATH, duplicate=0)
env.VariantDir('${BUILDPATH}', SRCPATH, duplicate=0)

#-------------------------------------------------------------------------------
# External depends outside CoreBSP
#-------------------------------------------------------------------------------
env.RequireExternalApi([
   'DSM'
   'CS',
])

#-------------------------------------------------------------------------------
# Internal depends within CoreBSP
#-------------------------------------------------------------------------------
CBSP_API = [
   'SECUREMSM',
   'BOOT',
   'DAL',
   'DEBUGTOOLS',
   'HWENGINES',
   'MPROC',
   'POWER',
   'SERVICES',
   'SYSTEMDRIVERS',
   'WIREDCONNECTIVITY',
   'STORAGE',
   'KERNEL',
]

env.RequirePublicApi(CBSP_API)
env.RequireRestrictedApi(CBSP_API)

#-------------------------------------------------------------------------------
# Publish Private APIs
#-------------------------------------------------------------------------------
env.PublishPrivateApi('SECUREMSM', [
   "${BUILD_ROOT}/core/securemsm/unifiedcrypto/securechannel/inc",
])

#-------------------------------------------------------------------------------
# Sources, libraries
#-------------------------------------------------------------------------------

if env['CHIPSET'] == "mdm9x35":
    env.Append(CPPDEFINES = ['SC_ADSP_KEY_BASE_ADDR=0x00000000'])
elif env['CHIPSET'] == "msm8x26":
    env.Append(CPPDEFINES = ['SC_ADSP_KEY_BASE_ADDR=0x0FD5E000'])
    SECURECHANNELSHARED_LIB_SOURCES = [ '${BUILDPATH}/src/secapisecurechannel.c' ]
elif env['CHIPSET'] == "msm8x10":
    env.Append(CPPDEFINES = ['SC_ADSP_KEY_BASE_ADDR=0x0DC5E000'])
    SECURECHANNELSHARED_LIB_SOURCES = [ '${BUILDPATH}/src/secapisecurechannel.c' ]
elif env['CHIPSET'] == "msm8962":
    env.Append(CPPDEFINES = ['SC_ADSP_KEY_BASE_ADDR=0x00000000'])

#-------------------------------------------------------------------------------
# Add Libraries to image
#-------------------------------------------------------------------------------
if env['CHIPSET'] in ['msm8x26','msm8x10']:
    env.AddBinaryLibrary(  ['CORE_QDSP6_SW'], '${BUILDPATH}/SECURECHANNELSHARED', SECURECHANNELSHARED_LIB_SOURCES)

